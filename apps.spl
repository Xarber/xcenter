{"apps": [{"type":"Tool","title":"X-Store","desc":"Install and Update apps from your favourite stores!","author":"Xarber","src":"/assets/media/apps/store.png","id":"X-StoreJIQ6DQ2TBO","batch":"","content":"\n\n\n    <!--PAGE INFO-->\n    <title id=\"pageinfo-title\">X-Center</title>\n    <link id=\"pageinfo-icon\" rel=\"shortcut icon\" href=\"/assets/media/logo.png\" type=\"image/x-icon\">\n    <meta id=\"ogpageinfo-title\" property=\"og:title\" content=\"X-Center 5.0\">\n    <meta id=\"ogpageinfo-name\" property=\"og:site_name\" content=\"X-Center\">\n    <meta id=\"ogpageinfo-icon\" property=\"og:image\" content=\"https://xcenter.netlify.app/assets/media/logo.png\">\n    <meta id=\"ogpageinfo-desc\" property=\"og:description\" content=\"Find every project and app made by Xarber and other users, all of them safe and tested. You can also find some tools or useful sites.\">\n    <meta id=\"ogpageinfo-link\" property=\"og:url\" content=\"https://xcenter.netlify.app/\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n    <!--BOOTSTRAP AND EXTERNAL LINKS-->\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor\" crossorigin=\"anonymous\">\n    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.5/dist/umd/popper.min.js\" integrity=\"sha384-Xe+8cL9oJa6tN/veChSP7q+mnSPaj5Bcu9mPX5F5xIGE0DVittaqT5lorf0EI7Vk\" crossorigin=\"anonymous\" defer=\"\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2\" crossorigin=\"anonymous\" defer=\"\"></script>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\" defer=\"\"></script>\n    <script src=\"/assets/js/crypto.js\" defer=\"\"></script>\n    \n    <!--XCENTER HEAD-->\n    <link rel=\"stylesheet\" href=\"/assets/css/common.css\">\n    <link rel=\"stylesheet\" href=\"/assets/base/style.css\">\n    <script src=\"/assets/js/common.js\" defer=\"\"></script>\n    <script src=\"/assets/base/script.js\" defer=\"\"></script>\n    <script src=\"/assets/js/apps.js\" defer=\"\"></script>\n\n    <!--HIDED COMMONJS 5.0 FIXES-->\n    <nav class=\"new-navbar-light hided\" id=\"navbar\">\n        <div class=\"new-menu hided vertical-scroll\" id=\"new-menu\">\n          <button class=\"new-menu-button\" onclick=\"location.href = '/';\"><img src=\"/assets/media/4.0/home.png\" width=\"100%\" alt=\"\"><h3>Home</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/tools';\"><img src=\"/assets/media/4.0/tools.png\" width=\"100%\" alt=\"\"><h3>Tools</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/shop';\"><img src=\"/assets/media/4.0/shop.png\" width=\"100%\" alt=\"\"><h3>Store</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/xarber';\"><img src=\"/assets/media/4.0/xarber.png\" width=\"100%\" alt=\"\"><h3>Xarber</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/xwip';\"><img src=\"/assets/media/4.0/xwip.png\" width=\"100%\" alt=\"\"><h3>XWIP</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/xarbot';\"><img src=\"/assets/media/4.0/xarbot.png\" width=\"100%\" alt=\"\"><h3>Xarbot</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/os';\"><img src=\"/assets/media/4.0/os.png\" width=\"100%\" alt=\"\"><h3>OS</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/settings';\"><img src=\"/assets/media/4.0/settings.png\" width=\"100%\" alt=\"\"><h3>Settings</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/help';\"><img src=\"/assets/media/4.0/unknown.png\" width=\"100%\" alt=\"\"><h3>FAQ</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/feedback';\"><img src=\"/assets/media/4.0/chat.png\" width=\"100%\" alt=\"\"><h3>Feedback</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/about';\"><img src=\"/assets/media/4.0/info.png\" width=\"100%\" alt=\"\"><h3>About</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/map';\"><img src=\"/assets/media/4.0/plus.png\" width=\"100%\" alt=\"\"><h3>Site Map</h3></button>\n          <button class=\"new-menu-button\" onclick=\"RecentPage()\"><img src=\"/assets/media/4.0/other.png\" width=\"100%\" alt=\"\"><h3>Other</h3></button>\n        </div>\n        <center>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/';\" id=\"new-navbar-home\"><img src=\"/assets/media/4.0/home.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/tools';\" id=\"new-navbar-tools\"><img src=\"/assets/media/4.0/tools.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/xarbot';\" id=\"new-navbar-xarbot\"><img src=\"/assets/media/4.0/xarbot.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/os';\" id=\"new-navbar-OS\"><img src=\"/assets/media/4.0/unknown.png\" id=\"nav-OS\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/settings';\" id=\"new-navbar-settings\"><img src=\"/assets/media/4.0/settings.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"NewMenu()\" id=\"new-navbar-menu\"><img src=\"/assets/media/4.0/menu.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"RecentPage()\" id=\"new-navbar-other\"><img src=\"/assets/media/4.0/other.png\" width=\"100%\" alt=\"\"></button>\n        </center>\n    </nav>\n    <div class=\"new-footer hided\">\n        <img src=\"/assets/media/logo.png\" width=\"80px\" height=\"80px\" alt=\"\">\n        <button class=\"new-gotop\" onclick=\"window.location = '#'\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"currentColor\" class=\"bi bi-arrow-up-circle\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\"></path></svg></button>\n        <h1>X-Center</h1>\n        <copyright>@ Copyright 2022 - Xarber</copyright>\n    </div>\n\n\n    <div class=\"nav-compenser hided\"><button></button></div>\n    <nav id=\"store-nav\" class=\"hided\">\n        <div id=\"navbar-pages\">\n            <button style=\"display: none;visibility: hidden\" id=\"/\"></button>\n            <button style=\"display: none;visibility: hidden\" id=\"/tools/\"></button>\n            <button style=\"display: none;visibility: hidden\" id=\"/apps/\"></button>\n            <button style=\"display: none;visibility: hidden\" id=\"/pages/\"></button>\n            <button style=\"display: none;visibility: hidden\" id=\"/settings/\"></button>\n            <button style=\"display: none;visibility: hidden;\" onclick=\"location.href = localStorage.getItem('XCenterLastSecondaryPage')\" id=\"navbar-other\"><img src=\"/assets/base/other.png\">Other</button>\n            \n            <button onclick=\"location.reload()\"><img src=\"/assets/base/quit.png\">Quit</button>\n            <button class=\"navbuttonextend\"><img src=\"/assets/media/apps/store.png\">Home</button>\n        </div>\n        <div id=\"navbar-users\">\n            <button onclick=\"store.section('search')\"><img src=\"/assets/media/apps/storesearch.png\">Search</button>\n            <button onclick=\"store.settings()\"><img src=\"/assets/base/settings.png\">Settings</button>\n            <button style=\"display: none;visibility: hidden;\" id=\"navbar-internet\"></button>\n            <button style=\"display: none;visibility: hidden;\" id=\"navbar-downloads\"><img src=\"/assets/media/store/download.png\" alt=\"\"></button>\n            <button style=\"display: none;visibility: hidden\" id=\"navbar-user\"></button>\n            <button style=\"display: none;visibility: hidden\" class=\"hided\" onclick=\"document.getElementById\" id=\"navbar-notifications\"></button>\n        </div>\n        <button onclick=\"document.getElementById('navbar-menu').classList.toggle('hided');\" id=\"navbar-menubtn\" class=\"navbar-menubtn hided\"><img src=\"/assets/base/menu.png\">Menu</button>\n        <div class=\"hided\" id=\"navbar-menu\">\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/home.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/tools.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/pages.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/apps.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/settings.png\"></button>\n            <button onclick=\"location.href = localStorage.getItem('XCenterLastSecondaryPage')\"><img src=\"/assets/base/other.png\"></button>\n        </div>\n    </nav>\n    <div class=\"store-empty center hided\">\n        <h1>Nothing to see here...</h1>\n        <button onclick=\"store.add();\" class=\"rainbow\" style=\"color: black !important;\">Add a store</button>\n        <button onclick=\"store.resetStores();\">Restore default</button>\n    </div>\n    <div class=\"store-guide hided\">\n\n    </div>\n    <div class=\"store-external-download hided\" wasminimal=\"false\">\n        <div>\n            <img src=\"/assets/media/apps/app.png\" onclick=\"if (this.parentNode.parentNode.classList.contains('minimal') || this.parentNode.parentNode.getAttribute('wasminimal') == 'true') {this.parentNode.parentNode.classList.toggle('minimal');this.parentNode.parentNode.setAttribute('wasminimal', 'true');this.parentNode.parentNode.classList.remove('extend')}\" alt=\"\">\n            <h1>App Name</h1>\n            <button onclick=\"this.parentNode.parentNode.classList.toggle('extend');\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"currentColor\" class=\"bi bi-chevron-down\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"></path></svg></button>\n            <button>Download</button>\n            <div>\n                <h3>Type</h3>\n                <p>App Description</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"store-settings hided\" id=\"new-xcenter-store-settings\">\n        <div class=\"center\">\n            <h3>Settings</h3>\n            <button id=\"store-settings-close\" onclick=\"this.parentNode.parentNode.classList.add('hided');\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"currentColor\" class=\"bi bi-x-square\" viewBox=\"0 0 16 16\"><path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"></path><path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"></path></svg></button>\n            <div>\n                <h1>General</h1>\n                <div id=\"store-settings-stores\">\n                    <p>Your Stores (Click to remove or manually add)</p>\n                    <button onclick=\"if (this.innerHTML != 'Empty') {store.remove(this.id.replaceAll('store-settings-stores-', ''))} else {store.manuallyadd(this.id.replaceAll('store-settings-stores-', ''))}\" id=\"store-settings-stores-1\">Empty</button>\n                    <button onclick=\"if (this.innerHTML != 'Empty') {store.remove(this.id.replaceAll('store-settings-stores-', ''))} else {store.manuallyadd(this.id.replaceAll('store-settings-stores-', ''))}\" id=\"store-settings-stores-2\">Empty</button>\n                    <button onclick=\"if (this.innerHTML != 'Empty') {store.remove(this.id.replaceAll('store-settings-stores-', ''))} else {store.manuallyadd(this.id.replaceAll('store-settings-stores-', ''))}\" id=\"store-settings-stores-3\">Empty</button>\n                    <button onclick=\"if (this.innerHTML != 'Empty') {store.remove(this.id.replaceAll('store-settings-stores-', ''))} else {store.manuallyadd(this.id.replaceAll('store-settings-stores-', ''))}\" id=\"store-settings-stores-4\">Empty</button>\n                    <button onclick=\"if (this.innerHTML != 'Empty') {store.remove(this.id.replaceAll('store-settings-stores-', ''))} else {store.manuallyadd(this.id.replaceAll('store-settings-stores-', ''))}\" id=\"store-settings-stores-5\">Empty</button>\n                    <button onclick=\"if (this.innerHTML != 'Empty') {store.remove(this.id.replaceAll('store-settings-stores-', ''))} else {store.manuallyadd(this.id.replaceAll('store-settings-stores-', ''))}\" id=\"store-settings-stores-6\">Empty</button>\n                    <button onclick=\"if (this.innerHTML != 'Empty') {store.remove(this.id.replaceAll('store-settings-stores-', ''))} else {store.manuallyadd(this.id.replaceAll('store-settings-stores-', ''))}\" id=\"store-settings-stores-7\">Empty</button>\n                    <button onclick=\"if (this.innerHTML != 'Empty') {store.remove(this.id.replaceAll('store-settings-stores-', ''))} else {store.manuallyadd(this.id.replaceAll('store-settings-stores-', ''))}\" id=\"store-settings-stores-8\">Empty</button>\n                    <button onclick=\"if (this.innerHTML != 'Empty') {store.remove(this.id.replaceAll('store-settings-stores-', ''))} else {store.manuallyadd(this.id.replaceAll('store-settings-stores-', ''))}\" id=\"store-settings-stores-9\">Empty</button>\n                    <button onclick=\"if (this.innerHTML != 'Empty') {store.remove(this.id.replaceAll('store-settings-stores-', ''))} else {store.manuallyadd(this.id.replaceAll('store-settings-stores-', ''))}\" id=\"store-settings-stores-10\">Empty</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"store-search hided\" id=\"store-search\">\n        <center><form action=\"#\" onsubmit=\"store.search();return false\"><input id=\"store-search-apps-value\" type=\"text\" value=\"Search\" onclick=\"this.value = '';this.setAttribute('onclick', '')\"></form></center>\n        <div id=\"store-search-apps\" class=\"hided\">\n            <h1 id=\"store-search-apps-title\">Search Results for \"\"</h1>\n        </div>\n    </div>\n    <div class=\"store hided\" id=\"store-home\">\n        <div class=\"store-best-apps\" id=\"store-apps\">\n            <h1>Apps</h1><br><br><hr>\n            <div class=\"hided\">\n                <img id=\"store-app-1\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-app-2\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-app-3\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-app-4\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-app-5\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-app-6\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-app-7\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-app-8\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-app-9\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-app-10\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-app-11\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-app-12\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n            </div>\n            <div class=\"store-section-empty\" id=\"store-apps-empty\">\n                <center>\n                    <img onclick=\"this.src = '/assets/media/apps/storeemptysectionsearching.png';setTimeout(() => {store.prepareSteps.loadStores();this.src = '/assets/media/apps/storeemptysection.png'},2000)\" src=\"/assets/media/apps/storeemptysection.png\" alt=\"\">\n                    <h1>Your stores do not contain any apps of this section.</h1><br><br>\n                    <button onclick=\"store.resetStores();\">Reset Stores</button><br><br><br>\n                    <button onclick=\"store.reload();\">Reload</button>\n                </center>\n            </div>\n            <div class=\"store-apps\" id=\"store-apps-container\"></div>\n        </div>\n        <div class=\"store-last-comeouts\" id=\"store-games\">\n            <h1>Games</h1><br><br><hr>\n            <div class=\"hided\">\n                <img id=\"store-comeouts-1\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-comeouts-2\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-comeouts-3\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-comeouts-4\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-comeouts-5\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-comeouts-6\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-comeouts-7\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-comeouts-8\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-comeouts-9\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-comeouts-10\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-comeouts-11\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-comeouts-12\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n            </div>\n            <div class=\"store-section-empty\" id=\"store-games-empty\">\n                <center>\n                    <img onclick=\"this.src = '/assets/media/apps/storeemptysectionsearching.png';setTimeout(() => {store.prepareSteps.loadStores();this.src = '/assets/media/apps/storeemptysection.png'},2000)\" src=\"/assets/media/apps/storeemptysection.png\" alt=\"\">\n                    <h1>Your stores do not contain any apps of this section.</h1><br><br>\n                    <button onclick=\"store.resetStores();\">Reset Stores</button><br><br><br>\n                    <button onclick=\"store.reload();\">Reload</button>\n                </center>\n            </div>\n            <div class=\"store-apps\" id=\"store-games-container\"></div>\n        </div>\n        <div class=\"store-updates\" id=\"store-themes\">\n            <h1>Themes</h1><br><br><hr>\n            <div class=\"hided\">\n                <img id=\"store-update-1\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-update-2\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-update-3\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-update-4\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-update-5\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-update-6\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-update-7\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-update-8\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-update-9\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-update-10\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-update-11\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-update-12\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n            </div>\n            <div class=\"store-section-empty\" id=\"store-themes-empty\">\n                <center>\n                    <img onclick=\"this.src = '/assets/media/apps/storeemptysectionsearching.png';setTimeout(() => {store.prepareSteps.loadStores();this.src = '/assets/media/apps/storeemptysection.png'},2000)\" src=\"/assets/media/apps/storeemptysection.png\" alt=\"\">\n                    <h1>Your stores do not contain any apps of this section.</h1><br><br>\n                    <button onclick=\"store.resetStores();\">Reset Stores</button><br><br><br>\n                    <button onclick=\"store.reload();\">Reload</button>\n                </center>\n            </div>\n            <div class=\"store-apps\" id=\"store-themes-container\"></div>\n        </div>\n        <div class=\"store-tools\" id=\"store-tools\">\n            <h1>Tools</h1><br><br><hr>\n            <div class=\"hided\">\n                <img id=\"store-tool-1\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-2\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-3\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-4\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-5\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-6\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-7\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-8\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-9\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-10\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-11\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-12\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n            </div>\n            <div class=\"store-section-empty\" id=\"store-tools-empty\">\n                <center>\n                    <img onclick=\"this.src = '/assets/media/apps/storeemptysectionsearching.png';setTimeout(() => {store.prepareSteps.loadStores();this.src = '/assets/media/apps/storeemptysection.png'},2000)\" src=\"/assets/media/apps/storeemptysection.png\" alt=\"\">\n                    <h1>Your stores do not contain any apps of this section.</h1><br><br>\n                    <button onclick=\"store.resetStores();\">Reset Stores</button><br><br><br>\n                    <button onclick=\"store.reload();\">Reload</button>\n                </center>\n            </div>\n            <div class=\"store-apps\" id=\"store-tools-container\"></div>\n        </div>\n        <div class=\"store-tools\" id=\"store-scripts\">\n            <h1>Scripts</h1><br><br><hr>\n            <div class=\"hided\">\n                <img id=\"store-tool-1\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-2\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-3\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-4\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-5\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-6\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-7\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-8\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-9\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-10\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-11\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img id=\"store-tool-12\" onclick=\"store.section(this.id)\" onerror=\"this.src = '/assets/media/apps/app.png'\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n            </div>\n            <div class=\"store-section-empty\" id=\"store-scripts-empty\">\n                <center>\n                    <img onclick=\"this.src = '/assets/media/apps/storeemptysectionsearching.png';setTimeout(() => {store.prepareSteps.loadStores();this.src = '/assets/media/apps/storeemptysection.png'},2000)\" src=\"/assets/media/apps/storeemptysection.png\" alt=\"\">\n                    <h1>Your stores do not contain any apps of this section.</h1><br><br>\n                    <button onclick=\"store.resetStores();\">Reset Stores</button><br><br><br>\n                    <button onclick=\"store.reload();\">Reload</button>\n                </center>\n            </div>\n            <div class=\"store-apps\" id=\"store-scripts-container\"></div>\n        </div>\n        <div class=\"store-reccomended-stores\">\n            <h1>Best Stores</h1><br><br><hr>\n            <div class=\"store-apps\">\n                <img onclick=\"store.section(this.id)\" id=\"store-reccomended-1\" onerror=\"this.src = '/assets/media/apps/store.png';\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img onclick=\"store.section(this.id)\" id=\"store-reccomended-2\" onerror=\"this.src = '/assets/media/apps/store.png';\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img onclick=\"store.section(this.id)\" id=\"store-reccomended-3\" onerror=\"this.src = '/assets/media/apps/store.png';\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img onclick=\"store.section(this.id)\" id=\"store-reccomended-4\" onerror=\"this.src = '/assets/media/apps/store.png';\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img onclick=\"store.section(this.id)\" id=\"store-reccomended-5\" onerror=\"this.src = '/assets/media/apps/store.png';\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img onclick=\"store.section(this.id)\" id=\"store-reccomended-6\" onerror=\"this.src = '/assets/media/apps/store.png';\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img onclick=\"store.section(this.id)\" id=\"store-reccomended-7\" onerror=\"this.src = '/assets/media/apps/store.png';\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img onclick=\"store.section(this.id)\" id=\"store-reccomended-8\" onerror=\"this.src = '/assets/media/apps/store.png';\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img onclick=\"store.section(this.id)\" id=\"store-reccomended-9\" onerror=\"this.src = '/assets/media/apps/store.png';\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img onclick=\"store.section(this.id)\" id=\"store-reccomended-10\" onerror=\"this.src = '/assets/media/apps/store.png';\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img onclick=\"store.section(this.id)\" id=\"store-reccomended-11\" onerror=\"this.src = '/assets/media/apps/store.png';\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n                <img onclick=\"store.section(this.id)\" id=\"store-reccomended-12\" onerror=\"this.src = '/assets/media/apps/store.png';\" src=\"/assets/media/apps/blank.png\" alt=\"\">\n            </div>\n        </div>\n    </div>\n    <div class=\"store-app-view hided\" id=\"app-view\">\n        <div class=\"center\">\n            <div>\n                <button onclick=\"this.parentNode.parentNode.parentNode.classList.add('hided');document.getElementById('app-install').setAttribute('class', '')\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"currentColor\" class=\"bi bi-x-square\" viewBox=\"0 0 16 16\"><path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"></path><path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"></path></svg></button>\n                <img src=\"/assets/media/apps/app.png\" id=\"app-icon\" alt=\"\">\n                <h1 id=\"app-title\">App Name</h1>\n                <button id=\"app-quicklaunch-start\" onclick=\"document.getElementById('app-quicklaunch').setAttribute('class', '');setTimeout(() => {document.getElementById('app-quicklaunch').setAttribute('class', 'new-xcenter-apps-quicklaunch')}, 10);document.getElementById('ql-name').innerHTML = 'Quick Launch: ' + document.getElementById('app-title').innerHTML;document.getElementById('ql-icon').src = document.getElementById('app-icon').src;quickLaunchTimeout = setTimeout(() => {store.apps.quickLaunch(document.getElementById('app-view').getAttribute('callerid'))}, 3500)\">Quick Launch</button>\n                <div id=\"app-install\" onclick=\"if (this.classList.contains('store-app-installed') == false) {this.classList.add('progressbar');this.classList.add('store-app-installed');store.apps.install(document.getElementById('app-view').getAttribute('callerid'))}\"><div onclick=\"store.apps.launch(document.getElementById('app-view').getAttribute('callerid'))\"><p>Launch</p></div><p>Download / Update</p></div>\n            </div>\n            <div>\n                <h1>App Information</h1>\n                <div>\n                    <h1>Description</h1>\n                    <div>\n                        <p id=\"app-description\">App Description</p>\n                    </div>\n                </div>\n                <div>\n                    <h3>Author: <u id=\"app-author\">User</u></h3>\n                    <h3>Size: <u id=\"app-size\">1MB</u></h3>\n                    <h3>Type: <u id=\"app-type\">App</u></h3>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"store-app-view hided\" id=\"store-view\" storeicon=\"\" storetitle=\"\" storedesc=\"\" storetype=\"\" storelink=\"\" storeapps=\"\">\n        <div class=\"center\">\n            <div>\n                <button onclick=\"this.parentNode.parentNode.parentNode.classList.add('hided');document.getElementById('store-add').setAttribute('class', '')\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"currentColor\" class=\"bi bi-x-square\" viewBox=\"0 0 16 16\"><path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"></path><path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"></path></svg></button>\n                <img src=\"/assets/media/apps/store.png\" onerror=\"this.src = '/assets/media/apps/store.png';\" id=\"store-icon\" alt=\"\">\n                <h1 id=\"store-title\">Store</h1>\n                <div id=\"store-add\" onclick=\"if (this.classList.contains('store-added') == false &amp;&amp; this.classList.contains('storeadd') == false) {this.classList.add('storeadd');this.classList.add('store-added');store.add(this.parentNode.parentNode.parentNode.id)}\"><div><p>Added</p></div><p>Add</p></div>\n            </div>\n            <div>\n                <h1>Store Information</h1>\n                <div style=\"height: calc(90% - 15px);\">\n                    <h1>Description</h1>\n                    <div>\n                        <p id=\"store-description\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Autem laboriosam ullam quam rerum pariatur quisquam provident! Cupiditate voluptas non laudantium impedit modi ratione. Tempora facilis alias doloremque dolore harum. Sed! Lorem ipsum dolor sit amet consectetur adipisicing elit. Magnam iusto qui, voluptates tempora itaque laudantium commodi dolores cumque optio eius aspernatur hic recusandae dolor magni quae maiores! Magni, vel eligendi. Lorem ipsum dolor sit amet consectetur adipisicing elit. Ea ipsam unde tempora quam, dicta quos sunt exercitationem illo nesciunt ex corporis, odio, veniam aspernatur laborum velit cumque quia officia omnis. Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloremque nobis dolorum ratione hic similique dolor quia repellat? Minima vero reprehenderit quis, non facere sit dignissimos quaerat nam enim. Delectus, totam. Lorem ipsum dolor sit amet consectetur adipisicing elit. Eius et nesciunt tenetur cupiditate sit eos placeat similique eaque, quo quod modi quidem non dolorem, blanditiis voluptatum vitae laudantium voluptatem saepe. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Harum ipsa quasi rem natus magni dignissimos! Quidem, officia ea ratione itaque praesentium aperiam, a dolor blanditiis, fugit atque aspernatur soluta illo. Lorem ipsum, dolor sit amet consectetur adipisicing elit. Velit blanditiis totam minus tempora placeat voluptatibus vitae nulla. Voluptatibus laudantium dolorem error nostrum quibusdam explicabo reprehenderit culpa molestiae. Repellendus, aperiam et. Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquid dolores veritatis officia quo culpa ex dolor quia facilis repellat suscipit praesentium cupiditate, accusantium at reprehenderit? Voluptates qui architecto quasi voluptatibus!</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div id=\"store-offline\" class=\"store-offline\">\n        <div class=\"center\">\n            <center>\n                <img src=\"/version/3.0/assets/media/offline.png\" width=\"300px\" height=\"300px\" alt=\"\">\n                <button style=\"width: 100% !important;background-color: transparent;border: 1px solid white;\" onclick=\"store.reload()\">Reload</button>\n            </center>\n        </div>\n    </div>\n    <div class=\"new-xcenter-apps-quicklaunch hided\" id=\"app-quicklaunch\">\n        <div><div><img src=\"/assets/media/apps/quicklaunch.png\" alt=\"\"></div></div>\n        <img id=\"ql-icon\" src=\"/assets/media/apps/app.png\" alt=\"\">\n        <button onclick=\"this.parentNode.classList.add('fadeOut');clearTimeout(quickLaunchTimeout)\">Cancel</button>\n        <div>\n            <h1 id=\"ql-name\">QuickLaunch: APP</h1><br><br><br><br>\n            <ul>\n                <li>No Memory Required</li>\n            </ul>\n            <br>\n            <ul>\n                <li>Launch any app fast</li>\n            </ul>\n            <br>\n            <ul>\n                <li>No need to update the apps</li>\n            </ul>\n        </div>\n    </div>\n    <script>\n        var s = document.createElement(\"script\");\n        s.src = \"/store/main.js\";\n        s.onload = function() {store.reload()}\n        document.head.appendChild(s);\n    </script>\n    <style>\n        nav {z-index: 100;}\n        .store {width: 100%;height: 100%;padding: 10px;}\n        .store div {margin: 5px;margin-top: 10px;}\n        .store div h1 {margin: 0 !important;float: left;}\n        .store div button {width: 50px;height: 50px;float: right;background-color: transparent;padding: 0;}\n        .store div hr {width: calc(100% - 4px);margin: 2px !important;height: 5px !important;background-color: gray;}\n        .store-apps {display: flex;width: 100%;overflow-x: auto;overflow-y: hidden;}\n        .store-apps img {width: 100px;aspect-ratio: 1 / 1;margin: 5px;border-radius: 10px;border: 5px solid gray;background-color: gray;cursor: pointer;}\n        .store-apps img:hover {animation: glow infinite linear 1s;}\n        .store-reccomended-stores img {aspect-ratio: 1 / 1;width: 200px;}\n        .store-reccomended-stores img:hover {animation: storeadd infinite linear 1s;}\n        :root {\n            --appdownloadduration: 5s;\n            --storeaddduration: 0.3s;\n        }\n        .store-app-view {position: fixed;top: 0;bottom: 0;left: 0;right: 0;width: 100%;height: 100%;z-index: 100;background-color: rgba(0, 0, 0, 0.8);}\n        .store-app-view div.center {width: 100%;height: 100%;max-width: 1800px;max-height: 800px;background-color: rgb(46, 46, 46);border-radius: 20px;}\n        .store-app-view div.center div:nth-child(1) {width: 100%;height: 200px;border-radius: 20px 20px 0px 0px;background-color: rgba(0, 0, 0, 0.394);position: relative;}\n        .store-app-view div.center div:nth-child(1) button:nth-child(1) {background-color: transparent;width: 30px;height: 30px;padding: 0;position: absolute;top: 20px;right: 20px;}\n        .store-app-view div.center div:nth-child(1) img {height: 100%;border-radius: 10px;margin: 10px;height: calc(100% - 20px);float: left;}\n        .store-app-view div.center div:nth-child(1) h1 {font-size: 50px;margin-top: 0;}\n        .store-app-view div.center div:nth-child(1) div {width: calc(100% - 210px);position: absolute;left: 200px;bottom: 10px;background-color: rgb(86, 172, 203);height: 50px;padding: 10px;text-align: center;border-radius: 10px;cursor: pointer;}\n        .store-app-view div.center div:nth-child(1) div p {color: white;font-size: 20px;}\n        .store-app-view div.center div:nth-child(1) div div {visibility: hidden;display: none;}\n        .store-app-view div.center div:nth-child(1) div.progressbar {background-color: black;}\n        .store-app-view div.center div:nth-child(1) div.progressbar div {visibility: visible;display: block;position: absolute;bottom: 0;left: 0;width: 100%;animation: progressbar var(--appdownloadduration) linear;background-color: green;}\n        .store-app-view div.center div:nth-child(1) div.progressbar p {visibility: hidden;display: none;}\n        .store-app-view div.center div:nth-child(1) div.progressbar div p {animation: progressbar var(--appdownloadduration) linear;color: white;visibility: visible;display: block;}\n        .store-app-view div.center div:nth-child(1) div.store-app-installed {background-color: black;}\n        .store-app-view div.center div:nth-child(1) div.store-app-installed div {visibility: visible;display: block;position: absolute;bottom: 0;left: 0;width: 100%;background-color: green;}\n        .store-app-view div.center div:nth-child(1) div.store-app-installed p {visibility: hidden;display: none;}\n        .store-app-view div.center div:nth-child(1) div.store-app-installed div p {color: white;visibility: visible;display: block;}\n        .store-app-view div.center div:nth-child(1) div.storeadd {background-color: black;cursor: default !important;}\n        .store-app-view div.center div:nth-child(1) div.storeadd div {visibility: visible;display: block;position: absolute;bottom: 0;left: 0;width: 100%;animation: storepageadd var(--storeaddduration) linear;background-color: green;}\n        .store-app-view div.center div:nth-child(1) div.storeadd p {visibility: hidden;display: none;}\n        .store-app-view div.center div:nth-child(1) div.storeadd div p {animation: storepageadd var(--storeaddduration) linear;color: white;visibility: visible;display: block;}\n        .store-app-view div.center div:nth-child(1) div.store-added {background-color: black;cursor: default !important;}\n        .store-app-view div.center div:nth-child(1) div.store-added div {visibility: visible;display: block;position: absolute;bottom: 0;left: 0;width: 100%;background-color: green;}\n        .store-app-view div.center div:nth-child(1) div.store-added p {visibility: hidden;display: none;}\n        .store-app-view div.center div:nth-child(1) div.store-added div p {color: white;visibility: visible;display: block;}\n        .store-app-view div.center div:nth-child(1) button:nth-child(4) {visibility: hidden;display: none;}\n        .store-app-view div.center div:nth-child(2) {width: 100%;height: calc(100% - 220px);margin: 10px;}\n        .store-app-view div.center div:nth-child(2) div {background-color: rgba(0, 0, 0, 0.394);width: calc(100% - 20px);margin: 5px 0px 5px 0px;border-radius: 10px;padding: 10px;}\n        .store-app-view div.center div:nth-child(2) div:nth-child(2) {height: calc(60% + 10px);}\n        .store-app-view div.center div:nth-child(2) div h1 {margin: 0;}\n        .store-app-view div.center div:nth-child(2) div div:nth-child(2) {background-color: transparent;overflow-y: auto;overflow-x: hidden;height: calc(100% - 50px);}\n        .store-app-view.quicklaunch div.center div:nth-child(1) div:nth-child(5) {width: calc(100% - 370px) !important;}\n        .store-app-view.quicklaunch div.center div:nth-child(1) button:nth-child(4) {background-color: transparent;border: 1px solid white;float: right;visibility: visible;display: unset;position: absolute;bottom: 10px;right: 10px;width: 150px;}\n        .store-external-download {position: fixed;top: 0;left: 0;right: 0;bottom: 0;z-index: 500;pointer-events: none;}\n        .store-external-download div {width: 80%;background-color: rgb(29, 29, 29);height: 80%;position: absolute;bottom: calc(-80% + 100px);padding: 10px;border-radius: 10px 10px;margin-left: 10%;pointer-events: all;}\n        .store-external-download div img {height: 80px;float: left;margin-right: 10px;border-radius: 10px;}\n        .store-external-download div h1 {float: left;font-size: 30px;margin: 0;margin-top: -5px;}\n        .store-external-download div button {float: right;height: 30px;background-color: transparent;padding: 0;margin-top: 20px;margin-left: 10px;}\n        .store-external-download div button:nth-child(3) {transform: rotate(180deg);}\n        .store-external-download div button:nth-child(4) {background-color: rgba(255, 255, 255, 0.200);padding: 10px;padding-top: 5px;}\n        .store-external-download div div {position: absolute;bottom: 0;width: 100%;left: 0px;right: 0px;top: 100px;margin: 0px;height: calc(100% - 100px);border-radius: 0px 0px 10px 10px;background-color: rgba(129, 129, 129, 0.473) !important;}\n        .store-external-download.extend {background-color: rgba(0, 0, 0, 0.726);pointer-events: all;}\n        .store-external-download.extend div {animation: externalextend 0.2s linear;bottom: 70px;}\n        .store-external-download.extend div button:nth-child(3) {transform: unset;}\n        .store-external-download.minimal div {margin-left: 0%;width: 100px;border-radius: 0px 10px 0px 0px;animation: externalminimal 0.2s linear;}\n        .store-external-download.minimal div img {margin-bottom: 10px;}\n        .store-external-download.premied div {background-color: rgb(104, 104, 0);}\n        .store-external-download.premied div div {background-image: url('/assets/media/apps/storepremied.png');background-repeat: no-repeat;background-position: bottom right;background-size: 150px;}\n        .store-offline {position: fixed;top: 0;left: 0;right: 0;bottom: 0;z-index: 200;background-color: black;width: 100%;height: 100%;}\n        .store-section-empty {width: 100%;height: 200px;background: rgb(0,0,0);background: linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(102,102,102,1) 100%);border-radius: 10px;padding: 10px;}\n        .store-section-empty center {width: 100%;height: 100%;}\n        .store-section-empty img {background-color: transparent;height: 100% !important;border: 0;padding: 0;aspect-ratio: 1 / 1 !important;width: unset !important;float: right;margin: 0;border-radius: 10px;}\n        .store-section-empty img:hover {animation: glow infinite linear 1s;}\n        .store-section-empty button {float: left !important;width: 200px !important;border: 1px solid white;}\n        .store-settings {width: 100%;height: 100%;position: fixed;top: 0;left: 0;right: 0;bottom: 0;background-color: rgba(0, 0, 0, 0.589);z-index: 200;}\n        .store-settings h1 {margin: 0;margin-top: 0;}\n        .store-settings div.center {width: 100%;height: 100%;max-width: 1000px;max-height: 600px;background-color: black;border: 1px solid white;border-radius: 10px;padding: 10px;}\n        .store-settings div.center button#store-settings-close {position: absolute;top: 10px;right: 10px;width: 30px;height: 30px;background-color: transparent;padding: 0;}\n        .store-settings div.center div {width: 100%;height: calc(100% - 40px);background-color: rgba(128, 128, 128, 0.500);border: 1px solid white;border-radius: 10px;padding: 10px;overflow-x: hidden;overflow-y: auto;}\n        .store-settings div.center div div#store-settings-stores {overflow-x: hidden;overflow-y: auto;}\n        .store-settings div.center div div#store-settings-stores button {width: 100%;height: 30px;padding: 0;border: 1px solid white;margin-bottom: 5px;text-align: left;padding: 0px 10px 0px 10px;}\n        .store-settings-stores-manuallyadd {width: 80%;height: 20%;min-height: 200px;background-color: blue;position: fixed;top: 50%;left: 50%;z-index: 201;padding: 10px;border-radius: 10px;}\n        .store-settings-stores-manuallyadd input {width: 100%;height: 50px;border-radius: 10px;border: 1px solid white;background-color: rgba(128, 128, 128, 0.500);font-size: 25px;color: white;padding: 10px;}\n        .store-settings-stores-manuallyadd button {width: 50%;position: absolute;bottom: 0;background-color: rgba(128, 128, 128, 0.500);}\n        .store-settings-stores-manuallyadd button:nth-child(3) {border-radius: 0px 0px 0px 10px !important;left: 0;}\n        .store-settings-stores-manuallyadd button:nth-child(4) {border-radius: 0px 0px 10px 0px !important;right: 0;}\n        .store-search {width: 100%;height: calc(100% - 50px);position: fixed;top: 50px;bottom: 0;left: 0;right: 0;background-color: black;z-index: 100;}\n        .store-search form {margin-bottom: 10px;padding: 5px 9px;-moz-border-radius: 3px;-webkit-border-radius: 3px;-o-border-radius: 3px;-ms-border-radius: 3px;-khtml-border-radius: 3px;border-radius: 3px;-moz-transition-property: border-color;-webkit-transition-property: border-color;-o-transition-property: border-color;transition-property: border-color;-moz-transition-duration: 0.1s;-webkit-transition-duration: 0.1s;-o-transition-duration: 0.1s;transition-duration: 0.1s;-moz-transition-timing-function: linear;-webkit-transition-timing-function: linear;-o-transition-timing-function: linear;transition-timing-function: linear;-moz-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0 rgba(255, 255, 255, 0.2);-webkit-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0 rgba(255, 255, 255, 0.2);box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1),0 1px 0 rgba(255, 255, 255, 0.2);}\n        .store-search input {width: 100%;max-width: 800px;height: 50px;border-radius: 10px;border: 1px solid white;background-color: transparent;color: white;padding: 0px;padding-left: 50px;color: white;font-size: 30px;background-image: url('/assets/media/apps/storesearch.png');background-repeat: no-repeat;background-position: left;background-size: 50px;margin: 10px 0px 10px 0px;min-width: unset !important;box-sizing: border-box !important;-webkit-box-sizing:border-box !important;-moz-box-sizing: border-box !important;}\n        .store-search div#store-search-apps {width: 100%;height: calc(100% - 75px);padding: 10px;overflow-y: auto;overflow-x: hidden;}\n        .store-search-app {width: 100%;height: 150px !important;background: rgb(102,102,102);background: linear-gradient(90deg, rgba(102,102,102,1) 73%, rgba(0,0,0,1) 100%);padding: 10px;cursor: pointer;border-radius: 10px;margin: 5px 0px 5px 0px;}\n        .store-search-app img {height: 100%;float: left;border-radius: 15px;margin-right: 10px;}\n        .store-search-app h1 {margin: 0;}\n        .store-search-app h4 {color: rgb(48, 48, 48);margin: 0;}\n        @media (max-width: 997px) {\n            .store-section-empty {width: 100%;height: 300px;position: relative;}\n            .store-section-empty img {height: 100px !important;position: absolute;bottom: 10px;right: 10px;}\n            .store-section-empty button:nth-child(5) {width: calc(50% - 65px) !important;position: absolute;bottom: 10px;left: 10px;border-radius: 10px 0px 0px 10px !important;}\n            .store-section-empty button:nth-child(9) {width: calc(50% - 65px) !important;position: absolute;bottom: 10px;;right: 120px;border-radius: 0px 10px 10px 0px !important;}\n        }\n        @media (max-width: 500px) {\n            .store-external-download div h1 {float: none;}\n            .store-external-download div button {float: right;height: 30px;background-color: transparent;padding: 0;margin-top: 10px;margin-left: 10px;}\n            .store-external-download div button:nth-child(4) {width: calc(100% - 150px);position: absolute;left: 90px;}\n            .store-section-empty img {height: 100px !important;position: absolute;bottom: 10px;right: 10px;}\n            .store-section-empty h1 {font-size: 20px;}\n            .store-section-empty button:nth-child(5) {width: calc(100% - 120px) !important;position: absolute;border-radius: 10px 10px 0px 0px !important;bottom: 60px;left: 10px;}\n            .store-section-empty button:nth-child(9) {width: calc(100% - 120px) !important;position: absolute;border-radius: 0px 0px 10px 10px !important;bottom: 10px;left: 10px;}\n            .store-search-app {height: unset !important;background: rgb(102,102,102);}\n            .store-search-app img {width: 100%;float: left;border-radius: 15px;margin-right: 10px;height: unset;}\n            .store-search-app h1 {margin: 0;}\n            .store-search-app h4 {color: rgb(48, 48, 48);margin: 0;}\n        }\n        @media (max-width: 350px) {\n            .store-external-download div {height: calc(80% + 30px);}\n            .store-external-download div button {float: none;height: 30px;background-color: transparent;padding: 0;margin-top: 10px;margin-left: 10px;}\n            .store-external-download div button:nth-child(3) {position: absolute;top: 85px;right: 10px;}\n            .store-external-download div button:nth-child(4) {width: calc(100% - 150px);top: 85px;left: 0px;width: calc(100% - 60px);}\n            .store-external-download div div {height: calc(80% + 15px);top: 140px;}\n            .store-section-empty img {visibility: hidden;display: none;}\n            .store-section-empty h1 {font-size: 20px;}\n            .store-section-empty button:nth-child(5) {width: calc(100% - 20px) !important;height: 30px;padding: 0;position: absolute;border-radius: 10px 10px 0px 0px !important;bottom: 40px;left: 10px;font-size: 10px;}\n            .store-section-empty button:nth-child(9) {width: calc(100% - 20px) !important;height: 30px;padding: 0;position: absolute;border-radius: 0px 0px 10px 10px !important;bottom: 10px;left: 10px;font-size: 10px;}\n        }\n        @media (max-width: 600px) {\n            .store-app-view.quicklaunch div.center div:nth-child(1) div:nth-child(5) p {font-size: 15px;padding: 5px;}\n            .store-app-view.quicklaunch div.center div:nth-child(1) div.progressbar p {padding: 0 !important;font-size: unset !important;}\n        }\n        @keyframes storepageadd {\n            0% {\n                width: 100%;\n                background-color: rgb(86, 172, 203);\n                color: transparent;\n            }\n            50% {\n                width: 100%;\n                background-color: black;\n                color: transparent;\n            } \n            100% {\n                width: 100%;\n                background-color: green;\n                color: white;\n            } \n        }\n        @keyframes progressbar {\n            0% {\n                width: 100%;\n                background-color: rgb(86, 172, 203);\n                color: transparent;\n            }\n            3% {\n                width: 0%;\n                background-color: rgb(86, 172, 203);\n                color: transparent;\n            }\n            70% {\n                width: 100%;\n                background-color: rgb(86, 172, 203);\n                color: transparent;\n            }\n            75% {\n                width: 100%;\n                background-color: rgb(52, 105, 124);\n                color: transparent;\n            }\n            80% {\n                width: 100%;\n                background-color: rgb(86, 172, 203);\n                color: transparent;\n            }\n            85% {\n                width: 100%;\n                background-color: rgb(52, 105, 124);\n                color: transparent;\n            }\n            90% {\n                width: 100%;\n                background-color: rgb(86, 172, 203);\n                color: transparent;\n            }\n            95% {\n                width: 100%;\n                background-color: rgb(52, 105, 124);\n                color: transparent;\n            }\n            100% {\n                background-color: green;\n                color: white;\n            }\n        }\n        @keyframes externalminimal {\n            0% {\n                width: 80%;\n                margin-left: 10%;\n                border-radius: 10px;\n            }\n            100% {\n                width: 100px;\n                margin-left: 0%;\n                border-radius: 0px 10px 0px 0px;\n            }\n        }\n        @keyframes externalextend {\n            0% {\n                bottom: -510px;\n            }\n            100% {\n                bottom: 70px;\n            }\n        }\n        @keyframes storeadd {\n            0% {\n                border: 5px solid green;\n            }\n            50% {\n                border: 5px solid greenyellow;\n            }\n            100% {\n                border: 5px solid green;\n            }\n        }\n    </style>\n\n<script type=\"text/javascript\">\n\n</script><style></style>"},{"type":"Tool","title":"App Maker","desc":"Easily build beautiful apps with App Maker!","author":"Xarber","src":"/assets/media/apps/appmaker.png","id":"App Maker1DB1K1YA2Y","batch":"","content":"\n\n\n    <!--PAGE INFO-->\n    <title id=\"pageinfo-title\">X-Center</title>\n    <link id=\"pageinfo-icon\" rel=\"shortcut icon\" href=\"/assets/media/logo.png\" type=\"image/x-icon\">\n    <meta id=\"ogpageinfo-title\" property=\"og:title\" content=\"X-Center 5.0\">\n    <meta id=\"ogpageinfo-name\" property=\"og:site_name\" content=\"X-Center\">\n    <meta id=\"ogpageinfo-icon\" property=\"og:image\" content=\"https://xcenter.netlify.app/assets/media/logo.png\">\n    <meta id=\"ogpageinfo-desc\" property=\"og:description\" content=\"Find every project and app made by Xarber and other users, all of them safe and tested. You can also find some tools or useful sites.\">\n    <meta id=\"ogpageinfo-link\" property=\"og:url\" content=\"https://xcenter.netlify.app/\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n    <!--BOOTSTRAP AND EXTERNAL LINKS-->\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor\" crossorigin=\"anonymous\">\n    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.5/dist/umd/popper.min.js\" integrity=\"sha384-Xe+8cL9oJa6tN/veChSP7q+mnSPaj5Bcu9mPX5F5xIGE0DVittaqT5lorf0EI7Vk\" crossorigin=\"anonymous\" defer=\"\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2\" crossorigin=\"anonymous\" defer=\"\"></script>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\" defer=\"\"></script>\n    <script src=\"/assets/js/crypto.js\" defer=\"\"></script>\n    \n    <!--XCENTER HEAD-->\n    <link rel=\"stylesheet\" href=\"/assets/base/style.css\">\n    <link rel=\"stylesheet\" href=\"/assets/css/common.css\">\n    <script src=\"/assets/js/common.js\" defer=\"\"></script>\n    <script src=\"/assets/base/script.js\" defer=\"\"></script>\n    <script src=\"/assets/js/apps.js\" defer=\"\"></script>\n\n    <!--HIDED COMMONJS 5.0 FIXES-->\n    <nav class=\"new-navbar-light hided\" id=\"navbar\">\n        <div class=\"new-menu hided vertical-scroll\" id=\"new-menu\">\n          <button class=\"new-menu-button\" onclick=\"location.href = '/';\"><img src=\"/assets/media/4.0/home.png\" width=\"100%\" alt=\"\"><h3>Home</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/tools';\"><img src=\"/assets/media/4.0/tools.png\" width=\"100%\" alt=\"\"><h3>Tools</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/shop';\"><img src=\"/assets/media/4.0/shop.png\" width=\"100%\" alt=\"\"><h3>Store</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/xarber';\"><img src=\"/assets/media/4.0/xarber.png\" width=\"100%\" alt=\"\"><h3>Xarber</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/xwip';\"><img src=\"/assets/media/4.0/xwip.png\" width=\"100%\" alt=\"\"><h3>XWIP</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/xarbot';\"><img src=\"/assets/media/4.0/xarbot.png\" width=\"100%\" alt=\"\"><h3>Xarbot</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/os';\"><img src=\"/assets/media/4.0/os.png\" width=\"100%\" alt=\"\"><h3>OS</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/settings';\"><img src=\"/assets/media/4.0/settings.png\" width=\"100%\" alt=\"\"><h3>Settings</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/help';\"><img src=\"/assets/media/4.0/unknown.png\" width=\"100%\" alt=\"\"><h3>FAQ</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/feedback';\"><img src=\"/assets/media/4.0/chat.png\" width=\"100%\" alt=\"\"><h3>Feedback</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/about';\"><img src=\"/assets/media/4.0/info.png\" width=\"100%\" alt=\"\"><h3>About</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/map';\"><img src=\"/assets/media/4.0/plus.png\" width=\"100%\" alt=\"\"><h3>Site Map</h3></button>\n          <button class=\"new-menu-button\" onclick=\"RecentPage()\"><img src=\"/assets/media/4.0/other.png\" width=\"100%\" alt=\"\"><h3>Other</h3></button>\n        </div>\n        <center>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/';\" id=\"new-navbar-home\"><img src=\"/assets/media/4.0/home.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/tools';\" id=\"new-navbar-tools\"><img src=\"/assets/media/4.0/tools.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/xarbot';\" id=\"new-navbar-xarbot\"><img src=\"/assets/media/4.0/xarbot.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/os';\" id=\"new-navbar-OS\"><img src=\"/assets/media/4.0/unknown.png\" id=\"nav-OS\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/settings';\" id=\"new-navbar-settings\"><img src=\"/assets/media/4.0/settings.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"NewMenu()\" id=\"new-navbar-menu\"><img src=\"/assets/media/4.0/menu.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"RecentPage()\" id=\"new-navbar-other\"><img src=\"/assets/media/4.0/other.png\" width=\"100%\" alt=\"\"></button>\n        </center>\n    </nav>\n    <div class=\"new-footer hided\">\n        <img src=\"/assets/media/logo.png\" width=\"80px\" height=\"80px\" alt=\"\">\n        <button class=\"new-gotop\" onclick=\"window.location = '#'\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"currentColor\" class=\"bi bi-arrow-up-circle\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\"></path></svg></button>\n        <h1>X-Center</h1>\n        <copyright>@ Copyright 2022 - Xarber</copyright>\n    </div>\n\n\n    <div class=\"nav-compenser hided\"><button></button></div>\n    <nav class=\"hided\">\n        <div id=\"navbar-pages\">\n            <button onclick=\"location.href = this.id;\" id=\"/\"><img src=\"/assets/base/home.png\">Home</button>\n            <button onclick=\"location.href = this.id;\" id=\"/tools/\"><img src=\"/assets/base/tools.png\">Tools</button>\n            <button onclick=\"location.href = this.id;\" id=\"/pages/\"><img src=\"/assets/base/pages.png\">Pages</button>\n            <button onclick=\"location.href = this.id;\" id=\"/apps/\"><img src=\"/assets/base/apps.png\">Apps</button>\n            <button onclick=\"location.href = this.id;\" id=\"/settings/\"><img src=\"/assets/base/settings.png\">Settings</button>\n            <button onclick=\"location.href = localStorage.getItem('XCenterLastSecondaryPage')\" id=\"navbar-other\"><img src=\"/assets/base/other.png\">Other</button>\n        </div>\n        <div id=\"navbar-users\">\n            <button id=\"navbar-notifications\">Notifications</button>\n            <button id=\"navbar-internet\">Internet</button>\n            <button id=\"navbar-user\">User</button>\n        </div>\n        <button onclick=\"document.getElementById('navbar-menu').classList.toggle('hided');\" id=\"navbar-menubtn\" class=\"navbar-menubtn hided\"><img src=\"/assets/base/menu.png\">Menu</button>\n        <div class=\"hided\" id=\"navbar-menu\">\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/home.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/tools.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/pages.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/apps.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/settings.png\"></button>\n            <button onclick=\"location.href = localStorage.getItem('XCenterLastSecondaryPage')\"><img src=\"/assets/base/other.png\"></button>\n        </div>\n    </nav>\n    <div class=\"appmaker-welcome hided\" id=\"welcome\">\n        <div class=\"center\">\n            <h1>Welcome!</h1>\n            <p>Welcome to App Maker! With this tool you can build Apps, Web Games, Other Tools, or anything you want (On Web Format)! <br> Make easily light and fast apps with this tool! Import or Create a new project from the tool, give the app a name and (eventually) a description, and youre done! You have created your first X-Center App, using codes that you probably already know! <br> This app uses Electron technologies to allow you to also run scripts on the user's PC (only if allowed in the settings), and have all-system compatible apps!</p>\n            <button onclick=\"this.parentNode.parentNode.remove();\">Let's Start!</button>\n        </div>\n    </div>\n    <div id=\"appmaker\" class=\"appmaker\">\n        <h1>App Maker</h1>\n        <p>Fill the requested spots to create the app and then press \"BUILD\"</p>\n        <div id=\"appmaker-preview\" class=\"appmaker-preview\">\n            <button onclick=\"appmaker.preview()\">Refresh Preview</button>\n            <div id=\"appmaker-preview-shown\">\n                <div class=\"center\">\n                    <h1>Click on \"Refresh Preview\"</h1>\n                </div>\n            </div>\n        </div>\n        <div class=\"appmaker-build\">\n            <label for=\"appmaker-build-title\">App Title</label><br>\n            <input id=\"appmaker-build-title\" type=\"text\" onclick=\"this.value = '';this.setAttribute('onclick', '');\" value=\"App\"><br>\n            <label for=\"appmaker-build-desc\">App Desc</label><br>\n            <input id=\"appmaker-build-desc\" type=\"text\" onclick=\"this.value = '';this.setAttribute('onclick', '');\" value=\"\"><br>\n            <label for=\"appmaker-build-author\">App Author</label><br>\n            <input id=\"appmaker-build-author\" type=\"text\" onclick=\"this.value = '';this.setAttribute('onclick', '');\" value=\"User\"><br>\n            <label for=\"appmaker-build-type\">App Type</label><br>\n            <input id=\"appmaker-build-type\" type=\"text\" onclick=\"this.value = '';this.setAttribute('onclick', '');\" value=\"Auto (App / Tool / Game / Script / Theme)\"><br>\n            <label for=\"appmaker-build-icon\">App Icon Link</label><br>\n            <input id=\"appmaker-build-icon\" type=\"text\" onclick=\"this.value = '';this.setAttribute('onclick', '');\" value=\"https://xcenter.netlify.app/assets/media/apps/default.png\"><br>\n            <button id=\"appmaker-build\" onclick=\"appmaker.getInfo()\">BUILD</button>\n            <div>\n                <div>\n                    <p>HTML</p>\n                    <textarea name=\"appmaker-build-content-html\" id=\"appmaker-build-content-html\" cols=\"30\" rows=\"10\">&lt;h1 class=\"previewtitle\"&gt;This is a preview&lt;/h1&gt;&lt;p&gt;Click on \"Refresh Preview\" when you're done building your app to have a preview of what you've done. Batch scripts won't run on the preview. You can see in the input fields how this preview was made. For CSS styles you may have to insert a !important tag after the styles (not fundamental on the final app), to make them more important than the website's stylesheets.&lt;/p&gt;&lt;br&gt;&lt;h1&gt;CSS EXAMPLE:&lt;/h1&gt;&lt;br&gt;&lt;textarea cols=\"75\" rows=\"5\"&gt;h1 {color: blue !important;text-decoration: underline !important;}</textarea>\n                </div>\n                <div>\n                    <p>CSS</p>\n                    <textarea name=\"appmaker-build-content-css\" id=\"appmaker-build-content-css\" cols=\"30\" rows=\"10\">.previewtitle {color: blue !important;text-decoration: underline;margin: 10px;} textarea {background-color: transparent;color: white !important;}</textarea>\n                </div>\n                <div>\n                    <p>JS</p>\n                    <textarea name=\"appmaker-build-content-js\" id=\"appmaker-build-content-js\" cols=\"30\" rows=\"10\">document.querySelector(\".previewtitle\").setAttribute('onclick', 'alert(\"you clicked me!\")')</textarea>\n                </div>\n                <div>\n                    <p>BATCH</p>\n                    <textarea name=\"appmaker-build-content-bat\" id=\"appmaker-build-content-bat\" cols=\"30\" rows=\"10\"></textarea>\n                </div>\n                <div class=\"hided\">\n                    <p>SHELL (Linux)</p>\n                    <textarea name=\"appmaker-build-content-shl\" id=\"appmaker-build-content-bat\" cols=\"30\" rows=\"10\"></textarea>\n                </div>\n                <div class=\"hided\">\n                    <p>SHELL (MacOS)</p>\n                    <textarea name=\"appmaker-build-content-shm\" id=\"appmaker-build-content-bat\" cols=\"30\" rows=\"10\"></textarea>\n                </div>\n                <div class=\"hided\">\n                    <p>Update Data</p>\n                    <textarea name=\"appmaker-build-content-upd\" id=\"appmaker-build-content-bat\" cols=\"30\" rows=\"10\"></textarea>\n                </div>\n            </div>\n        </div>\n    </div>\n    <footer class=\"hided\">\n        <div>\n            <p>X-Center 5.0 <br> Copyright 2022 @ Xarber</p>\n        </div>\n        <div>\n            <img onclick=\"document.body.scrollTop = 0;document.documentElement.scrollTop = 0;\" src=\"/assets/media/logo.png\" alt=\"\">\n        </div>\n    </footer>\n    <script>\n        var appmaker = {\n            convert: function(data, then) {\n                var type = data.type;\n                var title = data.title;\n                var desc = data.desc;\n                var author = data.author;\n                var icon = data.icon;\n                var html = data.html;\n                var css = data.css;\n                var js = data.js;\n                var bat = data.bat;\n                var id = data.id ?? title + CommonJS.random(\"10\", \"both\", \"upr\");\n                var tmp = document.createElement('div');\n                tmp.innerHTML = html;\n                var csscontainer = document.createElement('style');\n                csscontainer.innerHTML = css;\n                var jscontainer = document.createElement('script');\n                jscontainer.setAttribute('type', 'text/javascript');\n                jscontainer.innerHTML = \"\\n\" + js + \"\\n\";\n                tmp.appendChild(jscontainer);\n                tmp.appendChild(csscontainer);\n                then = then ?? \"convert\";\n                if (then == \"convert\") {\n                    var datanew = {\n                        type: type,\n                        title: title,\n                        desc: desc,\n                        author: author,\n                        src: icon,\n                        id: id,\n                        batch: bat,\n                        content: tmp.innerHTML\n                    }\n                    app.pack.build(\"\", datanew);\n                } else if (then == \"preview\") {\n                    document.getElementById('appmaker-preview-shown').innerHTML = tmp.innerHTML;\n                    var jscontainer = document.createElement('script');\n                    jscontainer.setAttribute('type', 'text/javascript');\n                    jscontainer.innerHTML = \"\\n\" + js + \"\\n\";\n                    document.body.appendChild(jscontainer)\n                    var csscontainer = document.createElement('style');\n                    csscontainer.innerHTML = css;\n                    document.head.insertBefore(csscontainer, document.head.firstChild)\n                }\n            },\n            getInfo: function(then) {\n                var type = appmaker.getType();\n                var author = document.getElementById('appmaker-build-author').value ?? \"User\";\n                var title = document.getElementById('appmaker-build-title').value ?? \"App\";\n                var description = document.getElementById('appmaker-build-desc').value ?? title + \" is a \" + type + \" made by \" + author + \".\";\n                var icon = document.getElementById('appmaker-build-icon').value ?? \"https://xcenter.netlify.app/assets/media/apps/default.png\";\n                var html = document.getElementById('appmaker-build-content-html').value ?? \"empty\";\n                var css = document.getElementById('appmaker-build-content-css').value ?? \"empty\";\n                var js = document.getElementById('appmaker-build-content-js').value ?? \"empty\";\n                var bat = document.getElementById('appmaker-build-content-bat').value ?? \"empty\";\n                then = then ?? \"convert\";\n                if (then == \"preview\") {\n                    appmaker.convert({\n                        type: type,\n                        title: title,\n                        desc: description,\n                        author: author,\n                        icon: icon,\n                        html: html,\n                        css: css,\n                        js: js,\n                        bat: bat,\n                    }, \"preview\");\n                    return;\n                }\n                appmaker.convert({\n                    type: type,\n                    title: title,\n                    desc: description,\n                    author: author,\n                    icon: icon,\n                    html: html,\n                    css: css,\n                    js: js,\n                    bat: bat,\n                })\n            },\n            getType: function() {\n                var html = document.getElementById('appmaker-build-content-html').value ?? \"empty\";\n                var css = document.getElementById('appmaker-build-content-css').value ?? \"empty\";\n                var js = document.getElementById('appmaker-build-content-js').value ?? \"empty\";\n                var bat = document.getElementById('appmaker-build-content-bat').value ?? \"empty\";\n                var type = document.getElementById('appmaker-build-type').value ?? \"Auto (App / Tool / Game / Script / Theme)\";\n                if (html.length < 1) html = \"empty\";\n                if (css.length < 1) css = \"empty\";\n                if (js.length < 1) js = \"empty\";\n                if (bat.length < 1) bat = \"empty\";\n                if (type == \"Auto (App / Tool / Game / Script / Theme)\") {\n                    if (html != \"empty\" && css != \"empty\" && js != \"empty\") type = \"App\";\n                    if (html != \"empty\" && css != \"empty\" && js != \"empty\" && bat != \"empty\") type = \"Tool\";\n                    if (html == \"empty\" && css == \"empty\" && (js != \"empty\" || bat != \"empty\")) type = \"Script\";\n                    if (html == \"empty\" && css != \"empty\" && bat == \"empty\") type = \"Theme\";\n                }\n                if (type == \"App\" || type == \"Tool\" || type == \"Game\" || type == \"Script\" || type == \"Theme\") {\n                    if (type == \"Theme\") alert(\"Theme app detected. Themes aren't currently supported.\")\n                    return type;\n                }\n                return \"App\";\n            },\n            preview: function() {\n                appmaker.getInfo(\"preview\");\n            }\n        }\n        setTimeout(() => {\n            appmaker.preview();\n        }, 250)\n        document.body.classList.add('dark');\n    </script>\n    <style>\n        .appmaker {background-color: transparent;padding: 0;margin: 10px;}\n        .appmaker input {width: 100%;background-color: transparent;color: white;border: 1px solid white;padding: 10px;border-radius: 10px;margin-bottom: 10px;}\n        .appmaker-build {width: 100% !important;border-radius: 0;height: 100%;}\n        .appmaker-build div {width: 100%;height: 100%;position: relative;}\n        .appmaker-build button {background-color: green;width: 100%;height: 100px;font-size: 50px;}\n        .appmaker-build div div {width: calc(50% - 20px);margin: 10px;aspect-ratio: 1 / 1;background-color: transparent;max-width: 400px;float: left;min-width: 300px;margin-bottom: 50px;}\n        .appmaker-build div div textarea {background-color: transparent;border: 1px solid white;border-radius: 10px;padding: 10px !important;color: white;width: 100%;height: 100%;overflow: auto;white-space: nowrap;}\n        .appmaker-welcome {width: 100%;height: 100%;background-color: rgba(0, 0, 0, 0.459);position: fixed;top: 0;bottom: 0;left: 0;right: 0;}\n        .appmaker-welcome div {width: 80%;height: 60% !important;min-width: 500px;min-height: 300px;background-color: blue;padding: 10px;border-radius: 10px;margin: 0;position: relative;}\n        .appmaker-welcome div * {margin: 0;}\n        .appmaker-welcome div button {position: absolute;bottom: 0;left: 0;right: 0;border-radius: 0 0 10px 10px !important;background-color: rgba(0, 0, 0, 0.281);}\n        .appmaker-preview {width: 100%;height: 500px;background-color: transparent;float: none !important;border-radius: 10px;padding: 0px;border: 1px solid white;margin-bottom: 10px;position: relative;}\n        .appmaker-preview button {width: 100%;height: 30px;background-color: transparent;color: white;font-size: unset;padding: unset;border-bottom: 1px solid white;position: absolute;top: 0;left: 0;right: 0;border-radius: 10px 10px 0px 0px !important;z-index: 10;}\n        .appmaker-preview div {width: 100%;position: absolute;top: 30px;bottom: 0px;right: 0px;left: 0px;z-index: 1;overflow: auto;}\n        @media (max-width: 675px) {\n            .appmaker-build div div {min-width: 100%;margin: 0;max-width: unset !important;margin-bottom: 50px;margin-top: 10px;min-height: 400px;float: unset !important;}\n        }\n    </style>\n\n<script type=\"text/javascript\">\n\n</script><style></style>"},{"type":"Tool","title":"Theme Manager","desc":"Change your style by changing your theme with Theme Manager!","author":"Xarber","src":"/assets/media/apps/thememanager.png","id":"Theme ManagerVMBIS91RB0","batch":"","content":"\n\n\n    <!--PAGE INFO-->\n    <title id=\"pageinfo-title\">X-Center</title>\n    <link id=\"pageinfo-icon\" rel=\"shortcut icon\" href=\"/assets/media/logo.png\" type=\"image/x-icon\">\n    <meta id=\"ogpageinfo-title\" property=\"og:title\" content=\"X-Center 5.0\">\n    <meta id=\"ogpageinfo-name\" property=\"og:site_name\" content=\"X-Center\">\n    <meta id=\"ogpageinfo-icon\" property=\"og:image\" content=\"https://xcenter.netlify.app/assets/media/logo.png\">\n    <meta id=\"ogpageinfo-desc\" property=\"og:description\" content=\"Find every project and app made by Xarber and other users, all of them safe and tested. You can also find some tools or useful sites.\">\n    <meta id=\"ogpageinfo-link\" property=\"og:url\" content=\"https://xcenter.netlify.app/\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n    <!--BOOTSTRAP AND EXTERNAL LINKS-->\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor\" crossorigin=\"anonymous\">\n    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.5/dist/umd/popper.min.js\" integrity=\"sha384-Xe+8cL9oJa6tN/veChSP7q+mnSPaj5Bcu9mPX5F5xIGE0DVittaqT5lorf0EI7Vk\" crossorigin=\"anonymous\" defer=\"\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2\" crossorigin=\"anonymous\" defer=\"\"></script>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\" defer=\"\"></script>\n    <script src=\"/assets/js/crypto.js\" defer=\"\"></script>\n    \n    <!--XCENTER HEAD-->\n    <link rel=\"stylesheet\" href=\"/assets/base/style.css\">\n    <link rel=\"stylesheet\" href=\"/assets/css/common.css\">\n    <script src=\"/assets/js/common.js\" defer=\"\"></script>\n    <script src=\"/assets/base/script.js\" defer=\"\"></script>\n    <script src=\"/assets/js/apps.js\" defer=\"\"></script>\n\n    <!--HIDED COMMONJS 5.0 FIXES-->\n    <nav class=\"new-navbar-light hided\" id=\"navbar\">\n        <div class=\"new-menu hided vertical-scroll\" id=\"new-menu\">\n          <button class=\"new-menu-button\" onclick=\"location.href = '/';\"><img src=\"/assets/media/4.0/home.png\" width=\"100%\" alt=\"\"><h3>Home</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/tools';\"><img src=\"/assets/media/4.0/tools.png\" width=\"100%\" alt=\"\"><h3>Tools</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/shop';\"><img src=\"/assets/media/4.0/shop.png\" width=\"100%\" alt=\"\"><h3>Store</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/xarber';\"><img src=\"/assets/media/4.0/xarber.png\" width=\"100%\" alt=\"\"><h3>Xarber</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/xwip';\"><img src=\"/assets/media/4.0/xwip.png\" width=\"100%\" alt=\"\"><h3>XWIP</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/xarbot';\"><img src=\"/assets/media/4.0/xarbot.png\" width=\"100%\" alt=\"\"><h3>Xarbot</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/os';\"><img src=\"/assets/media/4.0/os.png\" width=\"100%\" alt=\"\"><h3>OS</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/settings';\"><img src=\"/assets/media/4.0/settings.png\" width=\"100%\" alt=\"\"><h3>Settings</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/help';\"><img src=\"/assets/media/4.0/unknown.png\" width=\"100%\" alt=\"\"><h3>FAQ</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/feedback';\"><img src=\"/assets/media/4.0/chat.png\" width=\"100%\" alt=\"\"><h3>Feedback</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/about';\"><img src=\"/assets/media/4.0/info.png\" width=\"100%\" alt=\"\"><h3>About</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/map';\"><img src=\"/assets/media/4.0/plus.png\" width=\"100%\" alt=\"\"><h3>Site Map</h3></button>\n          <button class=\"new-menu-button\" onclick=\"RecentPage()\"><img src=\"/assets/media/4.0/other.png\" width=\"100%\" alt=\"\"><h3>Other</h3></button>\n        </div>\n        <center>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/';\" id=\"new-navbar-home\"><img src=\"/assets/media/4.0/home.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/tools';\" id=\"new-navbar-tools\"><img src=\"/assets/media/4.0/tools.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/xarbot';\" id=\"new-navbar-xarbot\"><img src=\"/assets/media/4.0/xarbot.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/os';\" id=\"new-navbar-OS\"><img src=\"/assets/media/4.0/unknown.png\" id=\"nav-OS\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/settings';\" id=\"new-navbar-settings\"><img src=\"/assets/media/4.0/settings.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"NewMenu()\" id=\"new-navbar-menu\"><img src=\"/assets/media/4.0/menu.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"RecentPage()\" id=\"new-navbar-other\"><img src=\"/assets/media/4.0/other.png\" width=\"100%\" alt=\"\"></button>\n        </center>\n    </nav>\n    <div class=\"new-footer hided\">\n        <img src=\"/assets/media/logo.png\" width=\"80px\" height=\"80px\" alt=\"\">\n        <button class=\"new-gotop\" onclick=\"window.location = '#'\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"currentColor\" class=\"bi bi-arrow-up-circle\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\"></path></svg></button>\n        <h1>X-Center</h1>\n        <copyright>@ Copyright 2022 - Xarber</copyright>\n    </div>\n\n\n    <div class=\"nav-compenser hided\"><button></button></div>\n    <nav class=\"hided\">\n        <div id=\"navbar-pages\">\n            <button onclick=\"location.href = this.id;\" id=\"/\"><img src=\"/assets/base/home.png\">Home</button>\n            <button onclick=\"location.href = this.id;\" id=\"/tools/\"><img src=\"/assets/base/tools.png\">Tools</button>\n            <button onclick=\"location.href = this.id;\" id=\"/pages/\"><img src=\"/assets/base/pages.png\">Pages</button>\n            <button onclick=\"location.href = this.id;\" id=\"/apps/\"><img src=\"/assets/base/apps.png\">Apps</button>\n            <button onclick=\"location.href = this.id;\" id=\"/settings/\"><img src=\"/assets/base/settings.png\">Settings</button>\n            <button onclick=\"location.href = localStorage.getItem('XCenterLastSecondaryPage')\" id=\"navbar-other\"><img src=\"/assets/base/other.png\">Other</button>\n        </div>\n        <div id=\"navbar-users\">\n            <button id=\"navbar-notifications\">Notifications</button>\n            <button id=\"navbar-internet\">Internet</button>\n            <button id=\"navbar-user\">User</button>\n        </div>\n        <button onclick=\"document.getElementById('navbar-menu').classList.toggle('hided');\" id=\"navbar-menubtn\" class=\"navbar-menubtn hided\"><img src=\"/assets/base/menu.png\">Menu</button>\n        <div class=\"hided\" id=\"navbar-menu\">\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/home.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/tools.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/pages.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/apps.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/settings.png\"></button>\n            <button onclick=\"location.href = localStorage.getItem('XCenterLastSecondaryPage')\"><img src=\"/assets/base/other.png\"></button>\n        </div>\n    </nav>\n    <div class=\"thememanager-welcome hided\" id=\"welcome\">\n        <div class=\"center\">\n            <h1>Welcome!</h1>\n            <p>Welcome to Theme Manager! With this tool you can manage custom X-Center Themes! <br> Download a theme from the store, install it by opening the app (it will automatically delete itself), open Theme Manager and apply it! Remember: You can only have one theme enabled per time. The size limits are the same of the apps. If you want to restore the original X-Center theme, just click on the active theme.</p>\n            <button onclick=\"this.parentNode.parentNode.remove();\">Let's Start!</button>\n        </div>\n    </div>\n    <div class=\"thememanager\">\n        <h1>Theme Manager</h1>\n        <p>Install a theme by opening the app downloaded from the store and enable it here (one per time, click to enable it)</p>\n        <div class=\"themes\" id=\"themes\">\n            <h3>Your Themes</h3>\n            <p style=\"cursor: pointer;\" onclick=\"theme.switchMode(this.id)\" id=\"themes-mode\">Mode: Toggle (Click to switch to Remove)</p>\n        </div>\n    </div>\n    <footer class=\"hided\">\n        <div>\n            <p>X-Center 5.0 <br> Copyright 2022 @ Xarber</p>\n        </div>\n        <div>\n            <img onclick=\"document.body.scrollTop = 0;document.documentElement.scrollTop = 0;\" src=\"/assets/media/logo.png\" alt=\"\">\n        </div>\n    </footer>\n    <script>\n        var maxthemes = 100;\n        var activethemecontent = localStorage.getItem('XCenterThemeActive');\n        var activethemename = localStorage.getItem('XCenterThemeActiveName');\n        var activethemescripts = localStorage.getItem('XCenterThemeActiveScripts');\n        var theme = {\n            apply: function(id) {\n                if (document.getElementById(id) == null) return false;\n                if (document.getElementById('themes-mode').innerHTML == \"Mode: Remove (Click to switch to Toggle)\") {\n                    theme.remove(id);\n                    return;\n                }\n                var themeslot = document.getElementById(id).getAttribute('theme');\n                var themecontent = localStorage.getItem('XCenterTheme' + themeslot);\n                var themename = localStorage.getItem('XCenterTheme' + themeslot + \"Name\");\n                var themescripts = localStorage.getItem('XCenterTheme' + themeslot + \"Scripts\");\n                if (localStorage.getItem('XCenterThemeActive') == themecontent || localStorage.getItem('XCenterThemeActiveName') == themename || localStorage.getItem('XCenterThemeActiveScripts') == themescripts) {\n                    localStorage.removeItem('XCenterThemeActive');\n                    localStorage.removeItem('XCenterThemeActiveName');\n                    localStorage.removeItem('XCenterThemeActiveScripts');\n                    activethemecontent = null;\n                    activethemename = null;\n                    activethemescripts = null;\n                    document.getElementById(id).classList.remove('active');\n                } else {\n                    localStorage.setItem('XCenterThemeActive', themecontent);\n                    localStorage.setItem('XCenterThemeActiveName', themename);\n                    localStorage.setItem('XCenterThemeActiveScripts', themescripts);\n                    document.getElementById(id).classList.add('active');\n                    document.getElementById(activethemename.replaceAll(' ', '')).classList.remove('active');\n                    activethemecontent = themecontent;\n                    activethemename = themename;\n                    activethemescripts = themescripts;\n                }\n                CommonJS.toast({\n                    title: \"Reload Page To Apply\",\n                    type: \"warn\",\n                })\n            },\n            switchMode: function(id) {\n                var currentmode = document.getElementById(id).innerHTML;\n                var removetext = \"Mode: Remove (Click to switch to Toggle)\";\n                var toggletext = \"Mode: Toggle (Click to switch to Remove)\";\n                var themes = document.querySelectorAll('.theme');\n                for (const theme of themes) {\n                    theme.classList.toggle('remove');\n                }\n                if (currentmode == removetext) {\n                    document.getElementById(id).innerHTML = toggletext;\n                    for (const theme of themes) {\n                        theme.classList.remove('remove');\n                    }\n                } else if (currentmode == toggletext) {\n                    document.getElementById(id).innerHTML = removetext;\n                    for (const theme of themes) {\n                        theme.classList.add('remove');\n                    }\n                }\n            },\n            remove: function(id) {\n                var themeslot = document.getElementById(id).getAttribute('theme');\n                var themecontent = localStorage.getItem('XCenterTheme' + themeslot);\n                var themename = localStorage.getItem('XCenterTheme' + themeslot + \"Name\");\n                var themescripts = localStorage.getItem('XCenterTheme' + themeslot + \"Scripts\");\n                if (activethemecontent == themecontent || activethemename == themename || activethemescripts == themescripts) {\n                    localStorage.removeItem('XCenterThemeActive');\n                    localStorage.removeItem('XCenterThemeActiveName');\n                    localStorage.removeItem('XCenterThemeActiveScripts');\n                    activethemecontent = null;\n                    activethemename = null;\n                    activethemescripts = null;\n                    CommonJS.toast({\n                        title: \"Active Theme Removed\",\n                        type: \"Error\"\n                    })\n                }\n                localStorage.removeItem('XCenterTheme' + themeslot);\n                localStorage.removeItem('XCenterTheme' + themeslot + 'Name');\n                localStorage.removeItem('XCenterTheme' + themeslot + 'Scripts');\n                for (let i = ++themeslot;i < maxthemes;i++) {\n                    var afteri = +i + 1;\n                    localStorage.setItem('XCenterTheme' + i, localStorage.getItem('XCenterTheme' + afteri))\n                    localStorage.setItem('XCenterTheme' + i + 'Name', localStorage.getItem('XCenterTheme' + afteri + 'Name'))\n                    localStorage.setItem('XCenterTheme' + i + 'Scripts', localStorage.getItem('XCenterTheme' + afteri + 'Scripts'))\n                }\n                document.getElementById(id).remove();\n                CommonJS.toast({\n                    title: \"Theme Removed\",\n                    type: \"success\"\n                })\n            },\n            load: function() {\n                //<button class=\"theme active\" id=\"theme-id-or-name\" onclick=\"theme.apply(this.id)\">Theme Name</button>\n                activethemecontent = localStorage.getItem('XCenterThemeActive');\n                activethemename = localStorage.getItem('XCenterThemeActiveName');\n                activethemescripts = localStorage.getItem('XCenterThemeActiveScripts');\n                for (let i = 0;i < maxthemes;i++) {\n                    var themecontent = localStorage.getItem('XCenterTheme' + i);\n                    var themename = localStorage.getItem('XCenterTheme' + i + \"Name\");\n                    var themescripts = localStorage.getItem('XCenterTheme' + i + \"Scripts\");\n                    if (themecontent != null || themename != null || themescripts != null) {\n                        if (document.getElementById(themename.replaceAll(' ', '')) == null) {\n                            var themebutton = document.createElement('button');\n                            themebutton.innerHTML = themename;\n                            themebutton.setAttribute('class', 'theme');\n                            if (activethemecontent == themecontent || activethemename == themename || activethemescripts == themescripts) {\n                                themebutton.setAttribute('class', 'theme active');\n                            }\n                            themebutton.setAttribute('onclick', 'theme.apply(this.id)');\n                            themebutton.setAttribute('id', themename.replaceAll(' ', ''));\n                            themebutton.setAttribute('theme', i);\n                            document.getElementById('themes').appendChild(themebutton);\n                            console.group('THEME LOADED: ' + themename);\n                            console.log(themecontent);\n                            console.groupEnd()\n                        }\n                    } else {\n                        i = maxthemes;\n                    }\n                }\n            }\n        }\n        document.body.classList.add('dark');\n        theme.load();\n    </script>\n    <style>\n        .thememanager {padding: 10px;}\n        .thememanager-welcome {width: 100%;height: 100%;background-color: rgba(0, 0, 0, 0.459);position: fixed;top: 0;bottom: 0;left: 0;right: 0;}\n        .thememanager-welcome div {width: 80%;height: 60% !important;min-width: 500px;min-height: 300px;background-color: blue;padding: 10px;border-radius: 10px;margin: 0;position: relative;}\n        .thememanager-welcome div * {margin: 0;}\n        .thememanager-welcome div button {position: absolute;bottom: 0;left: 0;right: 0;border-radius: 0 0 10px 10px !important;background-color: rgba(0, 0, 0, 0.281);}\n        .themes {padding: 30px;background-color: rgba(255, 255, 255, 0.158);width: 100%;height: 80%;max-height: 500px;border-radius: 30px;overflow-y: auto;overflow-x: hidden;}\n        .theme {width: 100%;margin-bottom: 5px;margin-top: 5px;padding: 10px;background-color: transparent;text-align: left;border: 1px solid white;}\n        .theme.active {background-color: rgba(255, 255, 255, 0.253);background-image: url('/assets/base/success.png');background-size: 30px;background-repeat: no-repeat;background-position: calc(100% - 5px);}\n        .theme:hover {background-color: rgba(0, 255, 0, 0.253);}\n        .theme.active:hover {background-color: rgb(255, 0, 0, 0.253);}\n        .theme.remove:hover {background-color: rgb(255, 0, 0, 0.253);}\n    </style>\n\n<script type=\"text/javascript\">\n\n</script><style></style>"},{"type":"Tool","title":"Version Switcher","desc":"Switch to older versions with Version Switcher!","author":"Xarber","src":"/assets/media/apps/versionswitcher.png","id":"Version SwitcherFTQ7Y67576","batch":"","content":"\n\n\n    <!--PAGE INFO-->\n    <title id=\"pageinfo-title\">X-Center</title>\n    <link id=\"pageinfo-icon\" rel=\"shortcut icon\" href=\"/assets/media/logo.png\" type=\"image/x-icon\">\n    <meta id=\"ogpageinfo-title\" property=\"og:title\" content=\"X-Center 5.0\">\n    <meta id=\"ogpageinfo-name\" property=\"og:site_name\" content=\"X-Center\">\n    <meta id=\"ogpageinfo-icon\" property=\"og:image\" content=\"https://xcenter.netlify.app/assets/media/logo.png\">\n    <meta id=\"ogpageinfo-desc\" property=\"og:description\" content=\"Find every project and app made by Xarber and other users, all of them safe and tested. You can also find some tools or useful sites.\">\n    <meta id=\"ogpageinfo-link\" property=\"og:url\" content=\"https://xcenter.netlify.app/\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n    <!--BOOTSTRAP AND EXTERNAL LINKS-->\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor\" crossorigin=\"anonymous\">\n    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.5/dist/umd/popper.min.js\" integrity=\"sha384-Xe+8cL9oJa6tN/veChSP7q+mnSPaj5Bcu9mPX5F5xIGE0DVittaqT5lorf0EI7Vk\" crossorigin=\"anonymous\" defer=\"\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2\" crossorigin=\"anonymous\" defer=\"\"></script>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\" defer=\"\"></script>\n    <script src=\"/assets/js/crypto.js\" defer=\"\"></script>\n    \n    <!--XCENTER HEAD-->\n    <link rel=\"stylesheet\" href=\"/assets/base/style.css\">\n    <link rel=\"stylesheet\" href=\"/assets/css/common.css\">\n    <script src=\"/assets/js/common.js\" defer=\"\"></script>\n    <script src=\"/assets/base/script.js\" defer=\"\"></script>\n    <script src=\"/assets/js/apps.js\" defer=\"\"></script>\n\n    <!--HIDED COMMONJS 5.0 FIXES-->\n    <nav class=\"new-navbar-light hided\" id=\"navbar\">\n        <div class=\"new-menu hided vertical-scroll\" id=\"new-menu\">\n          <button class=\"new-menu-button\" onclick=\"location.href = '/';\"><img src=\"/assets/media/4.0/home.png\" width=\"100%\" alt=\"\"><h3>Home</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/tools';\"><img src=\"/assets/media/4.0/tools.png\" width=\"100%\" alt=\"\"><h3>Tools</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/shop';\"><img src=\"/assets/media/4.0/shop.png\" width=\"100%\" alt=\"\"><h3>Store</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/xarber';\"><img src=\"/assets/media/4.0/xarber.png\" width=\"100%\" alt=\"\"><h3>Xarber</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/xwip';\"><img src=\"/assets/media/4.0/xwip.png\" width=\"100%\" alt=\"\"><h3>XWIP</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/xarbot';\"><img src=\"/assets/media/4.0/xarbot.png\" width=\"100%\" alt=\"\"><h3>Xarbot</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/os';\"><img src=\"/assets/media/4.0/os.png\" width=\"100%\" alt=\"\"><h3>OS</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/settings';\"><img src=\"/assets/media/4.0/settings.png\" width=\"100%\" alt=\"\"><h3>Settings</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/help';\"><img src=\"/assets/media/4.0/unknown.png\" width=\"100%\" alt=\"\"><h3>FAQ</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/feedback';\"><img src=\"/assets/media/4.0/chat.png\" width=\"100%\" alt=\"\"><h3>Feedback</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/about';\"><img src=\"/assets/media/4.0/info.png\" width=\"100%\" alt=\"\"><h3>About</h3></button>\n          <button class=\"new-menu-button\" onclick=\"location.href = '/map';\"><img src=\"/assets/media/4.0/plus.png\" width=\"100%\" alt=\"\"><h3>Site Map</h3></button>\n          <button class=\"new-menu-button\" onclick=\"RecentPage()\"><img src=\"/assets/media/4.0/other.png\" width=\"100%\" alt=\"\"><h3>Other</h3></button>\n        </div>\n        <center>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/';\" id=\"new-navbar-home\"><img src=\"/assets/media/4.0/home.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/tools';\" id=\"new-navbar-tools\"><img src=\"/assets/media/4.0/tools.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/xarbot';\" id=\"new-navbar-xarbot\"><img src=\"/assets/media/4.0/xarbot.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/os';\" id=\"new-navbar-OS\"><img src=\"/assets/media/4.0/unknown.png\" id=\"nav-OS\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"location.href = '/settings';\" id=\"new-navbar-settings\"><img src=\"/assets/media/4.0/settings.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"NewMenu()\" id=\"new-navbar-menu\"><img src=\"/assets/media/4.0/menu.png\" width=\"100%\" alt=\"\"></button>\n          <button class=\"new-navbar-button\" onclick=\"RecentPage()\" id=\"new-navbar-other\"><img src=\"/assets/media/4.0/other.png\" width=\"100%\" alt=\"\"></button>\n        </center>\n    </nav>\n    <div class=\"new-footer hided\">\n        <img src=\"/assets/media/logo.png\" width=\"80px\" height=\"80px\" alt=\"\">\n        <button class=\"new-gotop\" onclick=\"window.location = '#'\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"currentColor\" class=\"bi bi-arrow-up-circle\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\"></path></svg></button>\n        <h1>X-Center</h1>\n        <copyright>@ Copyright 2022 - Xarber</copyright>\n    </div>\n\n\n    <div class=\"nav-compenser\"><button></button></div>\n    <nav class=\"hided\">\n        <div id=\"navbar-pages\">\n            <button onclick=\"location.href = this.id;\" id=\"/\"><img src=\"/assets/base/home.png\">Home</button>\n            <button onclick=\"location.href = this.id;\" id=\"/tools/\"><img src=\"/assets/base/tools.png\">Tools</button>\n            <button onclick=\"location.href = this.id;\" id=\"/pages/\"><img src=\"/assets/base/pages.png\">Pages</button>\n            <button onclick=\"location.href = this.id;\" id=\"/apps/\"><img src=\"/assets/base/apps.png\">Apps</button>\n            <button onclick=\"location.href = this.id;\" id=\"/settings/\"><img src=\"/assets/base/settings.png\">Settings</button>\n            <button onclick=\"location.href = localStorage.getItem('XCenterLastSecondaryPage')\" id=\"navbar-other\"><img src=\"/assets/base/other.png\">Other</button>\n        </div>\n        <div id=\"navbar-users\">\n            <button id=\"navbar-notifications\">Notifications</button>\n            <button id=\"navbar-internet\">Internet</button>\n            <button id=\"navbar-user\">User</button>\n        </div>\n        <button onclick=\"document.getElementById('navbar-menu').classList.toggle('hided');\" id=\"navbar-menubtn\" class=\"navbar-menubtn hided\"><img src=\"/assets/base/menu.png\">Menu</button>\n        <div class=\"hided\" id=\"navbar-menu\">\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/home.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/tools.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/pages.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/apps.png\"></button>\n            <button onclick=\"location.href = this.id;\"><img src=\"/assets/base/settings.png\"></button>\n            <button onclick=\"location.href = localStorage.getItem('XCenterLastSecondaryPage')\"><img src=\"/assets/base/other.png\"></button>\n        </div>\n    </nav>\n    <iframe id=\"versionswitcher-navigate\" class=\"hided\" style=\"position: fixed;top: 0;left: 0;right: 0;bottom: 0;z-index: 199;\" width=\"100%\" height=\"100%\" src=\"/version/4.0/\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n    <div id=\"versionswitcher\" class=\"versionswitcher center\">\n      <h1>Select A Version</h1>\n      <div>\n        <button onclick=\"versionswitcher.apply(this.innerHTML);\" class=\"rainbow\">5.0</button>\n        <button onclick=\"versionswitcher.apply(this.innerHTML);\">4.0</button>\n        <button onclick=\"versionswitcher.apply(this.innerHTML);\">3.0</button>\n        <button onclick=\"versionswitcher.apply(this.innerHTML);\">2.0</button>\n        <button onclick=\"versionswitcher.apply(this.innerHTML);\">1.0</button>\n      </div>\n    </div>\n    <footer class=\"hided\">\n        <div>\n            <p>X-Center 5.0 <br> Copyright 2022 @ Xarber</p>\n        </div>\n        <div>\n            <img onclick=\"document.body.scrollTop = 0;document.documentElement.scrollTop = 0;\" src=\"/assets/media/logo.png\" alt=\"\">\n        </div>\n    </footer>\n    <script>\n        document.body.classList.add('dark');\n        var versionswitcher = {\n            apply: function(version) {\n                if (version == null || version.length < 1) return false;\n                if (version == \"5.0\") window.location = \"/\";\n                document.getElementById('versionswitcher-navigate').setAttribute('src', '/version/' + version);\n                document.getElementById('versionswitcher-navigate').classList.remove('hided');\n                document.getElementById('versionswitcher').classList.add('hided');\n                return true;\n            }\n        }\n    </script>\n    <style>\n        .versionswitcher h1 {text-align: center;}\n        .versionswitcher div {width: 100%;height: 100%;max-height: 300px;border: 1px solid white;border-radius: 10px;padding: 10px;overflow-y: auto;overflow-x: hidden;}\n        .versionswitcher div button {width: 100%;height: 30px;padding: 0;text-align: center;color: black !important;margin: 5px 0px 5px 0px;}\n    </style>\n\n<script type=\"text/javascript\">\n\n</script><style></style>"},{"type":"Game","title":"TicTacToe","desc":"Play TicTacToe with your friends!","author":"Xarber","src":"/assets/media/apps/tictactoe.png","id":"TicTacToeAR2BK324UX","batch":"","content":"\n\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Itim&amp;display=swap\" rel=\"stylesheet\">\n    <title>Tic-Tac-Toe</title>\n\n\n    <main class=\"background\">\n        <section class=\"title\">\n            <h1>Tic Tac Toe</h1>\n        </section>\n        <section class=\"display\">\n            Player <span class=\"display-player playerX\">X</span>'s turn\n        </section>\n        <section class=\"container\">\n            <div class=\"tile\"></div>\n            <div class=\"tile\"></div>\n            <div class=\"tile\"></div>\n            <div class=\"tile\"></div>\n            <div class=\"tile\"></div>\n            <div class=\"tile\"></div>\n            <div class=\"tile\"></div>\n            <div class=\"tile\"></div>\n            <div class=\"tile\"></div>\n        </section>\n        <section class=\"display announcer hide\"></section>\n        <section class=\"controls\">\n            <button id=\"reset\">Reset</button>\n        </section>\n    </main>\n\n<script type=\"text/javascript\">\nwindow.addEventListener('DOMContentLoaded', () => {\n    const tiles = Array.from(document.querySelectorAll('.tile'));\n    const playerDisplay = document.querySelector('.display-player');\n    const resetButton = document.querySelector('#reset');\n    const announcer = document.querySelector('.announcer');\n\n    let board = ['', '', '', '', '', '', '', '', ''];\n    let currentPlayer = 'X';\n    let isGameActive = true;\n\n    const PLAYERX_WON = 'PLAYERX_WON';\n    const PLAYERO_WON = 'PLAYERO_WON';\n    const TIE = 'TIE';\n\n\n    /*\n        Indexes within the board\n        [0] [1] [2]\n        [3] [4] [5]\n        [6] [7] [8]\n    */\n\n    const winningConditions = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n\n    function handleResultValidation() {\n        let roundWon = false;\n        for (let i = 0; i <= 7; i++) {\n            const winCondition = winningConditions[i];\n            const a = board[winCondition[0]];\n            const b = board[winCondition[1]];\n            const c = board[winCondition[2]];\n            if (a === '' || b === '' || c === '') {\n                continue;\n            }\n            if (a === b && b === c) {\n                roundWon = true;\n                break;\n            }\n        }\n\n    if (roundWon) {\n            announce(currentPlayer === 'X' ? PLAYERX_WON : PLAYERO_WON);\n            isGameActive = false;\n            return;\n        }\n\n    if (!board.includes(''))\n        announce(TIE);\n    }\n\n    const announce = (type) => {\n        switch(type){\n            case PLAYERO_WON:\n                announcer.innerHTML = 'Player <span class=\"playerO\">O</span> Won';\n                break;\n            case PLAYERX_WON:\n                announcer.innerHTML = 'Player <span class=\"playerX\">X</span> Won';\n                break;\n            case TIE:\n                announcer.innerText = 'Tie';\n        }\n        announcer.classList.remove('hide');\n    };\n\n    const isValidAction = (tile) => {\n        if (tile.innerText === 'X' || tile.innerText === 'O'){\n            return false;\n        }\n\n        return true;\n    };\n\n    const updateBoard =  (index) => {\n        board[index] = currentPlayer;\n    }\n\n    const changePlayer = () => {\n        playerDisplay.classList.remove(`player${currentPlayer}`);\n        currentPlayer = currentPlayer === 'X' ? 'O' : 'X';\n        playerDisplay.innerText = currentPlayer;\n        playerDisplay.classList.add(`player${currentPlayer}`);\n    }\n\n    const userAction = (tile, index) => {\n        if(isValidAction(tile) && isGameActive) {\n            tile.innerText = currentPlayer;\n            tile.classList.add(`player${currentPlayer}`);\n            updateBoard(index);\n            handleResultValidation();\n            changePlayer();\n        }\n    }\n    \n    const resetBoard = () => {\n        board = ['', '', '', '', '', '', '', '', ''];\n        isGameActive = true;\n        announcer.classList.add('hide');\n\n        if (currentPlayer === 'O') {\n            changePlayer();\n        }\n\n        tiles.forEach(tile => {\n            tile.innerText = '';\n            tile.classList.remove('playerX');\n            tile.classList.remove('playerO');\n        });\n    }\n\n    tiles.forEach( (tile, index) => {\n        tile.addEventListener('click', () => userAction(tile, index));\n    });\n\n    resetButton.addEventListener('click', resetBoard);\n});\n</script><style>* {\n    padding: 0;\n    margin: 0;\n    font-family: 'Itim', cursive;\n}\n\n.background {\n    background-color: #12181B;\n    height: 100vh;\n    padding-top: 1px;\n}\n\n.title {\n    color: white;\n    text-align: center;\n    font-size: 40px;\n    margin-top: 10%;\n}\n\n.display {\n    color: white;\n    font-size: 25px;\n    text-align: center;\n    margin-top: 1em;\n    margin-bottom: 1em;\n}\n\n.hide {\n    display: none;\n}\n\n.container {\n    margin: 0 auto;\n    display: grid;\n    grid-template-columns: 33% 33% 33%;\n    grid-template-rows: 33% 33% 33%;\n    max-width: 300px;\n\n}\n\n.tile {\n    border: 1px solid white;\n    min-width: 100px;\n    min-height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 50px;\n    cursor: pointer;\n}\n\n.playerX {\n    color: #09C372;\n}\n\n.playerO {\n    color: #498AFB;\n}\n\n.controls {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    margin-top: 1em;\n}\n\n.controls button {\n    color: white;\n    padding: 8px;\n    border-radius: 8px;\n    border: none;\n    font-size: 20px;\n    margin-left: 1em;\n    cursor: pointer;\n}\n\n.restart {\n    background-color: #498AFB;\n}\n\n#reset {\n    background-color: #FF3860;\n}</style>"},{"type":"Game","title":"Color Blast","desc":"Space Invaders is now on X-Center!","author":"Nate Wiley","src":"/assets/media/apps/external/colorblast.png","id":"Color BlastHHVF24L3GN","batch":"","content":"<div class=\"container\">\n\t<div class=\"game-wrap\">\n\t\t<canvas width=\"960px\" height=\"540\" id=\"game\"></canvas>\n\t\t<article class=\"content\">\n\t\t\t<h1 class=\"title\"><span>C</span><span>o</span><span>l</span><span>o</span><span>r</span><span> </span><span>B</span><span>l</span><span>a</span><span>s</span><span>t</span></h1>\n\n\t\t\t<p>Use the <code>Left</code> and <code>Right</code> Arrows or <code>A</code> and <code>D</code> keys to move, <code>Spacebar</code> to shoot.</p>\n\n\t\t\t<p><a href=\"https://codepen.io/natewiley/full/EGyiF\" target=\"_blank\">Click here to play in full mode</a>, click the game to pause and take a break. <a href=\"https://codepen.io/natewiley\" target=\"_blank\">Follow me on CodePen</a></p>\n\t\t</article>\n\t</div>\n</div><script type=\"text/javascript\">\n// Color Blast!\n// License MIT\n// © 2014 Nate Wiley\n\n(function(window){\n\nvar Game = {\n\n\tinit: function(){\n\t\tthis.c = document.getElementById(\"game\");\n\t\tthis.c.width = this.c.width;\n\t\tthis.c.height = this.c.height;\n\t\tthis.ctx = this.c.getContext(\"2d\");\n\t\tthis.color = \"rgba(20,20,20,.7)\";\n\t\tthis.bullets = [];\n\t\tthis.enemyBullets = [];\n\t\tthis.enemies = [];\n\t\tthis.particles = [];\n\t\tthis.bulletIndex = 0;\n\t\tthis.enemyBulletIndex = 0;\n\t\tthis.enemyIndex = 0;\n\t\tthis.particleIndex = 0;\n\t\tthis.maxParticles = 10;\n\t\tthis.maxEnemies = 6;\n\t\tthis.enemiesAlive = 0;\n\t\tthis.currentFrame = 0;\n\t\tthis.maxLives = 3;\n\t\tthis.life = 0;\n\t\tthis.binding();\n\t\tthis.player = new Player();\n\t\tthis.score = 0;\n\t\tthis.paused = false;\n\t\tthis.shooting = false;\n\t\tthis.oneShot = false;\n\t\tthis.isGameOver = false;\n     this.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n\t\tfor(var i = 0; i<this.maxEnemies; i++){\n\t\t\tnew Enemy();\n\t\t\tthis.enemiesAlive++;\n\t\t}\n\t\tthis.invincibleMode(2000);\n\n\t\tthis.loop();\n\t},\n\n\tbinding: function(){\n\t\twindow.addEventListener(\"keydown\", this.buttonDown);\n\t\twindow.addEventListener(\"keyup\", this.buttonUp);\n\t\twindow.addEventListener(\"keypress\", this.keyPressed);\n\t\tthis.c.addEventListener(\"click\", this.clicked);\n\t},\n\n\tclicked: function(){\n\t\tif(!Game.paused) {\n\t\t\tGame.pause();\n\t\t} else {\n\t\t\tif(Game.isGameOver){\n\t\t\t\tGame.init();\n\t\t\t} else {\n\t\t\t\tGame.unPause();\n\t\t\t\tGame.loop();\n\t\t\t\tGame.invincibleMode(1000);\n\t\t\t}\n\t\t}\n\t},\n\n\tkeyPressed: function(e){\n\t\tif(e.keyCode === 32){\n\t\t\tif(!Game.player.invincible  && !Game.oneShot){\n\t\t\t\tGame.player.shoot();\n\t\t\t\tGame.oneShot = true;\n\t\t\t}\n\t\t\tif(Game.isGameOver){\n\t\t\t\tGame.init();\n\t\t\t}\n      e.preventDefault();\n\t\t}\n\t},\n\n\tbuttonUp: function(e){\n\t\tif(e.keyCode === 32){\n\t\t\tGame.shooting = false;\n\t\t\tGame.oneShot = false;\n        e.preventDefault();\n\t\t}\n\t\tif(e.keyCode === 37 || e.keyCode === 65){\n\t\t\tGame.player.movingLeft = false;\n\t\t}\n\t\tif(e.keyCode === 39 || e.keyCode === 68){\n\t\t\tGame.player.movingRight = false;\n\t\t}\n\t},\n\n\tbuttonDown: function(e){\n\t\tif(e.keyCode === 32){\n\t\t\tGame.shooting = true;\n\t\t}\n\t\tif(e.keyCode === 37 || e.keyCode === 65){\n\t\t\tGame.player.movingLeft = true;\n\t\t}\n\t\tif(e.keyCode === 39 || e.keyCode === 68){\n\t\t\tGame.player.movingRight = true;\n\t\t}\n\t},\n\n\trandom: function(min, max){\n    return Math.floor(Math.random() * (max - min) + min);\n  },\n\n  invincibleMode: function(s){\n  \tthis.player.invincible = true;\n  \tsetTimeout(function(){\n  \t\tGame.player.invincible = false;\n  \t}, s);\n  },\n\n  collision: function(a, b){\n\t\treturn !(\n\t    ((a.y + a.height) < (b.y)) ||\n\t    (a.y > (b.y + b.height)) ||\n\t    ((a.x + a.width) < b.x) ||\n\t    (a.x > (b.x + b.width))\n\t\t)\n\t},\n\n  clear: function(){\n  \tthis.ctx.fillStyle = Game.color;\n  \tthis.ctx.fillRect(0, 0, this.c.width, this.c.height);\n  },\n   \n  pause: function(){\n\t\tthis.paused = true;\n  },\n\n  unPause: function(){\n\t\tthis.paused = false;\n  },\n\n\n  gameOver: function(){\n  \tthis.isGameOver = true;\n  \tthis.clear();\n  \tvar message = \"Game Over\";\n  \tvar message2 = \"Score: \" + Game.score;\n  \tvar message3 = \"Click or press Spacebar to Play Again\";\n  \tthis.pause();\n  \tthis.ctx.fillStyle = \"white\";\n\t  this.ctx.font = \"bold 30px Lato, sans-serif\";\n\t  this.ctx.fillText(message, this.c.width/2 - this.ctx.measureText(message).width/2, this.c.height/2 - 50);\n\t  this.ctx.fillText(message2, this.c.width/2 - this.ctx.measureText(message2).width/2, this.c.height/2 - 5);\n\t  this.ctx.font = \"bold 16px Lato, sans-serif\";\n\t  this.ctx.fillText(message3, this.c.width/2 - this.ctx.measureText(message3).width/2, this.c.height/2 + 30);\n  },\n\n  updateScore: function(){\n  \tthis.ctx.fillStyle = \"white\";\n  \tthis.ctx.font = \"16px Lato, sans-serif\";\n  \tthis.ctx.fillText(\"Score: \" + this.score, 8, 20);\n  \tthis.ctx.fillText(\"Lives: \" + (this.maxLives - this.life), 8, 40);\n  },\n  \n\tloop: function(){\n\t\tif(!Game.paused){\n\t\t\tGame.clear();\n\t\t\tfor(var i in Game.enemies){\n\t\t\t\tvar currentEnemy = Game.enemies[i];\n\t\t\t\tcurrentEnemy.draw();\n\t\t\t\tcurrentEnemy.update();\n\t\t\t\tif(Game.currentFrame % currentEnemy.shootingSpeed === 0){\n\t\t\t\t\tcurrentEnemy.shoot();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(var x in Game.enemyBullets){\n\t\t\t\tGame.enemyBullets[x].draw();\n\t\t\t\tGame.enemyBullets[x].update();\n\t\t\t}\n\t\t\tfor(var z in Game.bullets){\n\t\t\t\tGame.bullets[z].draw();\n\t\t\t\tGame.bullets[z].update();\n\t\t\t}\n\t\t\tif(Game.player.invincible){\n\t\t\t\tif(Game.currentFrame % 20 === 0){\n\t\t\t\t\tGame.player.draw();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tGame.player.draw();\n\t\t\t}\n\n\t    for(var i in Game.particles){\n\t      Game.particles[i].draw();\n\t    }\n\t\t\tGame.player.update();\n\t\t\tGame.updateScore();\n\t\t\tGame.currentFrame = Game.requestAnimationFrame.call(window, Game.loop);\n\t\t}\n\t}\n\n};\n\n\n\n\n\n\nvar Player = function(){\n\tthis.width = 60;\n\tthis.height = 20;\n\tthis.x = Game.c.width/2 - this.width/2;\n\tthis.y = Game.c.height - this.height;\n\tthis.movingLeft = false;\n\tthis.movingRight = false;\n\tthis.speed = 8;\n\tthis.invincible = false;\n\tthis.color = \"white\";\n};\n\n\nPlayer.prototype.die = function(){\n\tif(Game.life < Game.maxLives){\n\t\tGame.invincibleMode(2000);  \n \t\tGame.life++;\n\t} else {\n\t\tGame.pause();\n\t\tGame.gameOver();\n\t}\n};\n\n\nPlayer.prototype.draw = function(){\n\tGame.ctx.fillStyle = this.color;\n\tGame.ctx.fillRect(this.x, this.y, this.width, this.height);\n};\n\n\nPlayer.prototype.update = function(){\n\tif(this.movingLeft && this.x > 0){\n\t\tthis.x -= this.speed;\n\t}\n\tif(this.movingRight && this.x + this.width < Game.c.width){\n\t\tthis.x += this.speed;\n\t}\n\tif(Game.shooting && Game.currentFrame % 10 === 0){\n\t\tthis.shoot();\n\t}\n\tfor(var i in Game.enemyBullets){\n\t\tvar currentBullet = Game.enemyBullets[i];\n\t\tif(Game.collision(currentBullet, this) && !Game.player.invincible){\n\t\t\tthis.die();\n\t\t\tdelete Game.enemyBullets[i];\n\t\t}\n\t}\n};\n\n\nPlayer.prototype.shoot = function(){\n\tGame.bullets[Game.bulletIndex] = new Bullet(this.x + this.width/2);\n\tGame.bulletIndex++;\n};\n\n\n\n\n\n\nvar Bullet = function(x){  \n\tthis.width = 8;\n\tthis.height = 20;\n\tthis.x = x;\n\tthis.y = Game.c.height - 10;\n\tthis.vy = 8;\n\tthis.index = Game.bulletIndex;\n\tthis.active = true;\n\tthis.color = \"white\";\n\t\n};\n\n\nBullet.prototype.draw = function(){\n\tGame.ctx.fillStyle = this.color;\n\tGame.ctx.fillRect(this.x, this.y, this.width, this.height);\n};\n\n\nBullet.prototype.update = function(){\n\tthis.y -= this.vy;\n\tif(this.y < 0){\n\t\tdelete Game.bullets[this.index];\n\t}\n};\n\n\n\n\n\n\nvar Enemy = function(){\n\tthis.width = 60;\n\tthis.height = 20;\n\tthis.x = Game.random(0, (Game.c.width - this.width));\n\tthis.y = Game.random(10, 40);\n\tthis.vy = Game.random(1, 3) * .1;\n\tthis.index = Game.enemyIndex;\n\tGame.enemies[Game.enemyIndex] = this;\n\tGame.enemyIndex++;\n\tthis.speed = Game.random(2, 3);\n\tthis.shootingSpeed = Game.random(30, 80);\n\tthis.movingLeft = Math.random() < 0.5 ? true : false;\n\tthis.color = \"hsl(\"+ Game.random(0, 360) +\", 60%, 50%)\";\n\t\n};\n\n\nEnemy.prototype.draw = function(){\n\tGame.ctx.fillStyle = this.color;\n\tGame.ctx.fillRect(this.x, this.y, this.width, this.height);\n};\n\n\nEnemy.prototype.update = function(){\n\tif(this.movingLeft){\n\t\tif(this.x > 0){\n\t\t\tthis.x -= this.speed;\n\t\t\tthis.y += this.vy;\n\t\t} else {\n\t\t\tthis.movingLeft = false;\n\t\t}\n\t} else {\n\t\tif(this.x + this.width < Game.c.width){\n\t\t\tthis.x += this.speed;\n\t\t\tthis.y += this.vy;\n\t\t} else {\n\t\t\tthis.movingLeft = true;\n\t\t}\n\t}\n\t\n\tfor(var i in Game.bullets){\n\t\tvar currentBullet = Game.bullets[i];\n\t\tif(Game.collision(currentBullet, this)){\n\t\t\tthis.die();\n\t\t\tdelete Game.bullets[i];\n\t\t}\n\t} \n};\n\nEnemy.prototype.die = function(){\n  this.explode();\n  delete Game.enemies[this.index];\n  Game.score += 15;\n  Game.enemiesAlive = Game.enemiesAlive > 1 ? Game.enemiesAlive - 1 : 0;\n  if(Game.enemiesAlive < Game.maxEnemies){\n  \tGame.enemiesAlive++;\n  \tsetTimeout(function(){\n  \t\tnew Enemy();\n\t  }, 2000);\n\t}\n  \n};\n\nEnemy.prototype.explode = function(){\n\tfor(var i=0; i<Game.maxParticles; i++){\n    new Particle(this.x + this.width/2, this.y, this.color);\n  }\n};\n\nEnemy.prototype.shoot = function(){\n\tnew EnemyBullet(this.x + this.width/2, this.y, this.color);\n};\n\nvar EnemyBullet = function(x, y, color){\n\tthis.width = 8;\n\tthis.height = 20;\n\tthis.x = x;\n\tthis.y = y;\n\tthis.vy = 6;\n\tthis.color = color;\n\tthis.index = Game.enemyBulletIndex;\n\tGame.enemyBullets[Game.enemyBulletIndex] = this;\n\tGame.enemyBulletIndex++;\n};\n\nEnemyBullet.prototype.draw = function(){\n\tGame.ctx.fillStyle = this.color;\n\tGame.ctx.fillRect(this.x, this.y, this.width, this.height);\n};\n\nEnemyBullet.prototype.update = function(){\n\tthis.y += this.vy;\n\tif(this.y > Game.c.height){\n\t\tdelete Game.enemyBullets[this.index];\n\t}\n};\n\n\n\n\nvar Particle = function(x, y, color){\n    this.x = x;\n    this.y = y;\n    this.vx = Game.random(-5, 5);\n    this.vy = Game.random(-5, 5);\n    this.color = color || \"orange\";\n    Game.particles[Game.particleIndex] = this;\n    this.id = Game.particleIndex;\n    Game.particleIndex++;\n    this.life = 0;\n    this.gravity = .05;\n    this.size = 40;\n    this.maxlife = 100;\n  }\n\n  Particle.prototype.draw = function(){\n    this.x += this.vx;\n    this.y += this.vy;\n    this.vy += this.gravity;\n    this.size *= .89;\n    Game.ctx.fillStyle = this.color;\n    Game.ctx.fillRect(this.x, this.y, this.size, this.size);\n    this.life++;\n    if(this.life >= this.maxlife){\n      delete Game.particles[this.id];\n    }\n  };\n\nGame.init();\n\n\n}(window));\n</script><style>@import url(https://fonts.googleapis.com/css?family=Lato:100,300,400,700);\n* {\n  margin: 0;\n  padding: 0;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\nhtml, body {\n  height: 100%;\n}\nbody {\n  min-height: 100%;\n  max-width: 100%;\n  background: #111;\n  font-family: Lato, sans-serif;\n}\n.container {\n  min-height: 100%;\n  max-width: 960px;\n  margin: 0 auto;\n}\n.game-wrap {\n  position: relative;\n  padding: 20px 0 0;\n}\ncanvas {\n  position: relative;\n  max-width: 100%;\n  border: 2px solid black;\n  max-height: 100%;\n  display: block;\n  margin: 0 auto;\n}\n.content {\n  color: #ccc;\n  text-align: center;\n  padding: 0 20px;\n}\np {\n  margin: 10px 0;\n  font-size: 18px;\n  line-height: 1.5em;\n}\ncode {\n  background: #222;\n  background: linear-gradient(#222, #000);\n  line-height: 1.3em;\n  display: inline-block;\n  border-radius: 3px;\n  font-family: monospace;\n  padding: 1px 5px;\n  margin: 0 2px;\n}\na {\n  color: skyblue;\n  text-decoration: none;\n  transition: .2s;\n  &:hover {\n    color: lighten(skyblue, 10%);\n    text-decoration: underline;\n  }\n}\n.title {\n  font-size: 40px;\n  font-weight: 900;\n  margin: 20px 0;\n  @for $i from 1 through 11 {\n    span:nth-child(#{$i}){\n      color: hsl($i * 30, 50%, 50%);\n    }\n  }\n}</style>"},{"type":"Game","title":"Coloron","desc":"Click on the bars to make them match the ball's color!","author":"Greg Hovanesyan","src":"/assets/media/apps/external/coloron.png","id":"ColoronAF94IQGQAW","batch":"","content":"<!--\ndesign by https://www.behance.net/vahanhovh\n-->\n<div class=\"splash\"></div>\n<div class=\"container\">\n\n            <div class=\"start-game game-full-flex\" id=\"start-game\">\n                \n                <div class=\"start-game-top\"><a class=\"play-full-page\" href=\"https://codepen.io/gregh/full/yVLOyO/\" target=\"_blank\">Full Page Mode</a></div>    \n\n                <div class=\"logo-holder\">\n                    <p class=\"logo\">\n                        <span>C</span>\n                        <span>o</span>\n                        <span>l</span>\n                        <span>o</span>\n                        <span>r</span>\n                        <span>o</span>\n                        <span>n</span>\n                    </p>\n                    <a class=\"play-button\" href=\"#\" onclick=\"game.start()\">Play</a>\n                    <h4 class=\"hint\">hint: <span>red</span> color always comes first</h4>\n                </div>\n\n                <div class=\"how-to-play\">\n                    <div class=\"section section-1\">\n                        <h4>Bouncing ball<br>changes color</h4>\n                        <div class=\"content\">\n                            <div class=\"ball-demo\" id=\"ball-demo\"></div>\n                        </div>\n                    </div>\n                    <div class=\"section section-2\">\n                        <h4>Tap on the bar to switch the colors<br>(Red, Yellow, Purple)</h4>\n                        <div class=\"content\">\n                            <div class=\"bar bar-1\" data-index=\"0\"></div>\n                            <div class=\"bar bar-2\"></div>\n                            <div class=\"bar bar-3\"></div>\n                        </div>\n                    </div>\n                    <div class=\"section section-3\">\n                        <h4>Always match the<br>ball and bar colors</h4>\n                        <div class=\"content\">\n                            <div class=\"ball-demo\" id=\"ball-demo\"></div>\n                            <div class=\"bar bar-1\"></div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"stop-game game-full-flex\">\n\n                <div class=\"score-container\">\n\n                    <h1>Coloron</h1>\n\n                    <div class=\"final-score\"></div>\n                    <div class=\"result\"></div>\n\n                    <h4>Tweet to challenge friends</h4>\n\n                    <p>\n                        <a class=\"tweet\" href=\"#\" onclick=\"game.generateTweet()\">\n                            <i class=\"fa fa-twitter\" aria-hidden=\"true\"></i> Tweet\n                        </a>\n                    </p>\n\n                    <div>\n                        <a class=\"play-again\" href=\"#\" onclick=\"game.start()\">Play Again</a>\n                        <a class=\"main-menu\" href=\"#\" onclick=\"game.intro()\">Menu</a>\n                    </div>\n\n                </div>\n\n            </div>\n\n            <div class=\"small-glows\"></div>\n\n            <div class=\"glow\"><div class=\"sun\"></div></div>\n\n            <div class=\"waves\">\n                <div class=\"top_wave\"></div>\n                <div class=\"wave1\"></div>\n                <div class=\"wave2\"></div>\n                <div class=\"wave3\"></div>\n                <div class=\"wave4\"></div>\n            </div>\n\n            <div class=\"mounts\">\n                <div class=\"mount1\"></div>\n                <div class=\"mount2\"></div>\n            </div>\n\n            <div class=\"clouds\"></div>\n\n            <div class=\"scene\">\n                <div class=\"learn-to-play\">Click on the bars to change the color!</div>\n                <div class=\"score\" id=\"score\"></div>\n                <div class=\"ball-holder\"></div>\n                <div class=\"sticks\" id=\"sticks\"></div>\n            </div>\n\n            <div class=\"noise\"></div>\n\n        </div><script type=\"text/javascript\">\nclass Game {\n\n    constructor() {\n        this.score = 0;\n        this.isRunning = 0; // game is not running\n\n        this.calculateScale();\n\n        this.timeline = new TimelineMax({smoothChildTiming: true});\n        this.time = 1.6; // initial speed\n        this.colors = [\"#FF4571\", \"#FFD145\", \"#8260F6\"]; // the 3 colors used in the game\n        this.colorsRGBA = [\"rgba(255, 69, 113, 1)\", \"rgba(255, 69, 113, 1)\", \"rgba(255, 69, 113, 1)\"];\n        this.color = this.colors[0]; // the intial color of the ball\n        this.prevColor = null; // used as a holder to prevent ball colors from repeating\n    }\n\n    /**\n     * The game screen is scalable. I took 1200x800px as the initial scale.\n     * In order to display the game an many screen sizes properly\n     * I have to compare the player's sreen size to the initial scale,\n     * then scale the game using CSS Transform to fit the screen properly\n     * The function is called in the controller and anywhere where I need\n     * to recalculate the scale on screen resize or device rotation\n     */\n    calculateScale() {\n        this.screen = $(window).width(); // screen width\n        this.screenHeight = $(window).height();\n        this.scale = (this.screen > this.screenHeight) ? this.screenHeight/800 : this.screen/1200;\n        this.stickWidth = 180*this.scale;\n        this.steps = this.screen/this.stickWidth; // how many steps (stick width + margin) it takes from one end to another\n    }\n\n    /**\n     * Creating as many sticks we need to fill the screen\n     * from start to end of the screen. The steps property is used for that\n     */\n    generateSticks() {\n        let numberOfSticks = Math.ceil(this.steps);\n        for(let i = 0; i <= numberOfSticks; i++)\n            new Stick();\n    }\n\n    generateBall() {\n        this.balltween = new TimelineMax({repeat: -1, paused: 1});\n        $('.scene .ball-holder').append('<div class=\"ball red\" id=\"ball\"></div>');\n        this.bounce();\n    }\n\n    generateTweet() {\n        let top = $(window).height() / 2 - 150;\n        let left = $(window).width() / 2 - 300;\n        window.open(\"https://twitter.com/intent/tweet?url=https://codepen.io/gregh/full/yVLOyO&amp;text=I scored \"+ this.score +\" points on Coloron! Can you beat my score?&amp;via=greghvns&amp;hashtags=coloron\", \"TweetWindow\", \"width=600px,height=300px,top=\" + top + \",left=\" + left);\n    }\n\n    /**\n     * The greeting when the game begins\n     */\n    intro() {\n\n        TweenMax.killAll();\n      \n        //TweenMax.to('.splash', 0.3, { opacity: 0, display: 'none', delay: 1 })\n\n        $('.stop-game').css('display', 'none');\n        $('.start-game').css('display', 'flex');\n\n        let introTl = new TimelineMax();\n        let ball = new TimelineMax({repeat: -1, delay: 3});\n        introTl\n            .fromTo('.start-game .logo-holder', 0.9, { opacity: 0 }, { opacity: 1 })\n            .staggerFromTo('.start-game .logo span', 0.5, { opacity: 0 }, { opacity: 1 }, 0.08)\n            .staggerFromTo('.start-game .bar', 1.6, { y: '+100%' }, { y: '0%', ease: Elastic.easeOut.config(1, 0.3) }, 0.08)\n            .staggerFromTo('.start-game .ball-demo', 1, { scale: 0 }, { scale: 1, ease: Elastic.easeOut.config(1, 0.3) }, 0.8, 2)\n\n\n        ball.fromTo('.start-game .section-1 .ball-demo', 0.5, { y: \"0px\" }, { y: \"100px\", scaleY: 1.1, transformOrigin: \"bottom\", ease: Power2.easeIn})\n            .to('.start-game .section-1 .ball-demo', 0.5, { y: \"0px\", scaleY: 1, transformOrigin: \"bottom\", ease: Power2.easeOut,  \n                    onStart: () => {\n                        while(this.prevColor==this.color) {\n                            this.color = (new Color).getRandomColor();\n                        }\n                        this.prevColor = this.color;\n                        TweenMax.to('.start-game .section-1 .ball-demo', 0.5, {backgroundColor: this.color});\n                    } \n                });\n    }\n\n    /**\n    * Display score\n     */\n    showResult() {\n        let score = this.score;\n        $('.stop-game').css('display', 'flex');\n        $('.stop-game .final-score').text(score + '!');\n        $('.stop-game .result').text(this.showGrade(score));\n        $('.nominee').show();\n\n        let resultTimeline = new TimelineMax();\n        resultTimeline\n            .fromTo('.stop-game .score-container', 0.7, { opacity: 0, scale: 0.3 }, { opacity: 1, scale: 1, ease: Elastic.easeOut.config(1.25, 0.5)})\n            .fromTo('.stop-game .final-score', 2, { scale: 0.5 }, { scale: 1, ease: Elastic.easeOut.config(2, 0.5)}, 0)\n            .fromTo('.stop-game .result', 1, { scale: 0.5 }, { scale: 1, ease: Elastic.easeOut.config(1.5, 0.5)}, 0.3)\n            ;\n\n    }\n\n    /**\n     * Takes players score and generates the cheering copy\n     * @param  {int} score\n     * @return {string} grade\n     */\n    showGrade(score) {\n        if(score > 30) return \"Chuck Norris?\";\n        else if(score > 25) return \"You're da man\";\n        else if(score > 20) return \"Awesome\";\n        else if(score > 15) return \"Great!\";\n        else if(score > 13) return \"Nice!\";\n        else if(score > 10) return \"Good Job!\";\n        else if(score > 5) return \"Really?\";\n        else return \"Poor...\";\n    }\n\n    start() {\n\n        this.stop(); // stop the game\n\n        $('.start-game, .stop-game').css('display', 'none'); // hide all the popups\n        $('.nominee').hide();\n\n        new Game();\n        this.score = 0; // reset\n\n        this.isRunning = 1;\n\n        // Clean up the stick and ball holders\n        // and generate new ones\n        $('#sticks, .scene .ball-holder').html('');\n        $('#score').text(this.score);\n        this.generateSticks();\n        this.generateBall();\n\n        // disables scene animations for Phones\n        if( !/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent) ) {\n            Animation.sceneAnimation();\n        }\n        this.moveToStart();\n        this.moveScene();\n\n        // reset timescale to normal as the game speeds up\n        this.timeline.timeScale(1);\n        this.balltween.timeScale(1);\n    }\n\n    stop() {\n\n        this.isRunning = 0;\n\n        $('.start-game, .stop-game').css('display', 'none');\n        $('#sticks, .scene .ball-holder, #score').html('');\n        TweenMax.killAll();\n        \n        this.showResult();\n    }\n\n    scaleScreen() {\n\n        TweenMax.killAll(); // prevent multiple calls on resize\n\n        let height = $(window).height();\n        let width = $(window).width();\n\n        this.calculateScale();\n\n        $('.container')\n                .css('transform', 'scale(' + this.scale + ')')\n                .css('height', height/this.scale)\n                .css('width', width/this.scale)\n                .css('transformOrigin', 'left top');\n\n        $('#sticks').width(this.screen/this.scale + 3 * this.stickWidth/this.scale);\n\n    }\n\n    /**\n     * Calls the above function\n     * If the game is running it stops and shows the score\n     * If the game has stops it takes player to the main menu\n     */\n    scaleScreenAndRun() {\n\n        this.scaleScreen();\n\n        if(this.isRunning) {\n            this.stop();\n        } else {\n            this.intro();\n        }\n\n    }\n\n    /**\n     * This is the initial animation\n     * where the sticks come to the starting position\n     * and the ball appears and falls down\n     */\n    moveToStart() {        \n\n        let tip = new TimelineMax({ delay: 2 });\n\n        tip\n            .fromTo('.learn-to-play', 1, { scale: 0 }, { scale: 1, opacity: 1, ease: Elastic.easeOut.config(1.25, 0.5) })\n            .to('.learn-to-play', 1, { scale: 0, opacity: 0, ease: Elastic.easeOut.config(1.25, 0.5) }, 3)\n\n        TweenMax.fromTo('#ball', this.time,\n                        { \n                            scale: 0 \n                        },\n                        { \n                            scale: 1,\n                            delay: this.time * ((this.steps - 3) - 1.5), \n                            onComplete: () => {\n                                this.balltween.play();\n                            }\n                        });\n\n        this.timeline.add(\n            TweenMax.fromTo('#sticks', this.time * this.steps, { x: this.screen / this.scale }, { x: 0, ease: Power0.easeNone})\n        );\n    }\n\n    /**\n     * The animation that moves sticks\n     */\n    moveScene() {\n\n        this.timeline.add(\n            TweenMax.to('#sticks', this.time, { x: '-=180px', ease: Power0.easeNone, repeat: -1, onRepeat: () => { this.rearrange() } })\n        );\n\n    }  \n\n    /**\n     * removes the first stick and adds one the the end\n     * this gives the sticks an infinite movement\n     */\n    rearrange() {\n\n        let scale = this.speedUp();\n\n        this.timeline.timeScale(scale);\n        this.balltween.timeScale(scale);\n\n        $('#sticks .stick').first().remove();\n        new Stick();\n\n    }\n\n    /**\n     * The game speeds up based on score\n     * The GSAP timeScale() function is called on the timeline to speed up the game\n     * This calculates how much shall the game speed up\n     */\n    speedUp() {\n        if(this.score > 30) {\n            return 1.8;\n        }\n        if(this.score > 20) {\n            return 1.7;\n        }\n        if(this.score > 15) {\n            return 1.5;\n        }\n        else if(this.score > 12) {\n            return 1.4;\n        }\n        else if(this.score > 10) {\n            return 1.3;\n        }\n        else if(this.score > 8) {\n            return 1.2;\n        }\n        else if(this.score > 5) {\n            return 1.1;\n        }\n        return 1;\n    }\n\n    /**\n     * Ball bouncing animation\n     * It checks if the ball and stick colors match\n     * And changes the ball color\n     */\n    bounce() {\n\n        this.balltween\n                .to('#ball', this.time/2, {y: '+=250px', scaleY: 0.7, transformOrigin: \"bottom\", ease: Power2.easeIn,\n                    onComplete: () => {\n                        this.checkColor();\n                    }\n                }).to('#ball', this.time/2, {y: '-=250px', scaleY: 1.1, transformOrigin: \"bottom\", ease: Power2.easeOut, \n                    onStart: () => {\n                        while(this.prevColor==this.color) {\n                            this.color = (new Color).getRandomColor();\n                        }\n                        this.prevColor = this.color;\n                        TweenMax.to('#ball', 0.5, {backgroundColor: this.color});\n                        $('#ball').removeClass('red')\n                                  .removeClass('yellow')\n                                  .removeClass('purple')\n                                  .addClass((new Color).colorcodeToName(this.color));\n                    }\n                })    \n    }    \n\n    checkColor() {\n\n        let ballPos = $('#ball').offset().left + $('#ball').width()/2;\n        let stickWidth = $('.stick').width();\n        let score = this.score;\n\n        $('#sticks .stick').each(function(){\n            if($(this).offset().left < ballPos && $(this).offset().left > (ballPos - stickWidth)) {\n                \n                if( Color.getColorFromClass($(this)) == Color.getColorFromClass('#ball') ) {\n                    // if matches increase the score\n                    score++;\n                    $('#score').text(score);\n                    TweenMax.fromTo('#score', 0.5, { scale: 1.5 }, { scale: 1, ease: Elastic.easeOut.config(1.5, 0.5) });\n                } else {\n\n                    // you loose\n                    game.stop();\n\n                }\n\n            }\n        })\n\n        this.score = score;\n    }\n\n}\n\nclass Stick {\n\n    constructor() {\n        this.stick = this.addStick();\n    }\n\n    addStick() {\n        this.stick = $('#sticks').append('<div class=\"stick inactive\"></div>');\n        return this.stick;\n    }\n\n}\n\nclass Color {\n\n    constructor() {\n        this.colors = [\"#FF4571\", \"#FFD145\", \"#8260F6\"];\n        this.effects = [\"bubble\", \"triangle\", \"block\"];\n        this.prevEffect = null;\n    }\n\n    getRandomColor() {\n        let colorIndex = Math.random()*3;\n        let color = this.colors[Math.floor(colorIndex)];\n        return color;\n    } \n\n    colorcodeToName(color) {\n        let colors = [\"#FF4571\", \"#FFD145\", \"#8260F6\"];\n        let names = [\"red\", \"yellow\", \"purple\"];\n        let index = colors.indexOf(color);\n        if(index == -1) return false;\n        return names[index];\n    }      \n\n    /**\n     * Changes the color of an element\n     * As we as adds verbal name of the color\n     */\n    changeColor(el) {\n        let index = el.data(\"index\");\n        if(index===undefined) { index = 0; }\n        else { index += 1; }\n        if(index==3) index = 0;\n        el\n            .css('background-color', this.colors[index])\n            .data('index', index);\n\n        el.removeClass('red')\n          .removeClass('yellow')\n          .removeClass('purple')\n          .addClass(this.colorcodeToName(this.colors[index]));\n\n        if(el.hasClass('inactive')) {\n            this.setEffect(el);\n            el.addClass('no-effect');\n        }\n        \n        el.removeClass('inactive');\n    }\n\n    getRandomEffect() {\n        let effectIndex = null;\n        \n        effectIndex = Math.floor(Math.random()*3);\n        while(effectIndex == this.prevEffect) {\n            effectIndex = Math.floor(Math.random()*3);\n        }\n\n        this.prevEffect = effectIndex;\n        return this.effects[effectIndex];\n    }   \n\n    /**\n     * Adds the effect specific particles to the stick\n     */\n    setEffect(el) {\n        let effect = this.getRandomEffect();\n        el.addClass(effect + '-stick');\n        for(let i = 1; i <= 14; i++) {\n            if(effect=='block') {\n                el.append(`<div class=\"${effect} ${effect}-${i}\"><div class=\"inner\"></div><div class=\"inner inner-2\"></div></div>`);\n            } else {\n                el.append(`<div class=\"${effect} ${effect}-${i}\"></div>`);\n            }\n        }\n    }\n\n    /**\n     * Since the ball and sticks have several classes\n     * This method searches for the color class\n     * @param el [DOM element]\n     * @return {string} class name\n     */\n    static getColorFromClass(el) {\n        let classes = $(el).attr('class').split(/\\s+/);\n        for (var i = 0, len = classes.length; i < len; i++) {          \n            if(classes[i] == 'red' || classes[i] == 'yellow' || classes[i] == 'purple') {\n                return classes[i];\n            }\n        }\n    }\n}\n\nclass Animation {\n\n    /**\n     * Creates and positions the small glow elements on the screen\n     */\n    static generateSmallGlows(number) {\n        let h = $(window).height();\n        let w = $(window).width();\n        let scale = (w > h) ? h/800 : w/1200;\n\n        h = h/scale;\n        w = w/scale;\n\n        for(let i = 0; i < number; i++) {\n            let left = Math.floor(Math.random()*w);\n            let top = Math.floor(Math.random()*(h/2));\n            let size = Math.floor(Math.random()*8) + 4;\n            $('.small-glows').prepend('<div class=\"small-glow\"></div>');\n            let noise = $('.small-glows .small-glow').first();\n            noise.css({left: left, top: top, height: size, width: size});\n        }\n    }\n\n    /**\n     * Creates the animations for sticks\n     * The effects is chosen by random\n     * And one of the three functions is\n     * Called accordingly\n     */\n    playBubble(el) {\n        let bubble = new TimelineMax();\n        bubble.staggerFromTo(el.find('.bubble'), 0.3, {scale: 0.1}, {scale: 1}, 0.03)\n        bubble.staggerTo(el.find('.bubble'), 0.5, {y: '-=60px', yoyo: true, repeat: -1}, 0.03);\n    }\n\n    playTriangle(el) {\n        let triangle = new TimelineMax();\n        triangle.staggerFromTo(el.find('.triangle'), 0.3, {scale: 0.1}, {scale: 1}, 0.03)\n                .staggerTo(el.find('.triangle'), 1.5, {\n                    cycle:{\n                        rotationY: [0, 360],\n                        rotationX: [360, 0],\n                    },\n                    repeat: -1,\n                    repeatDelay: 0.1\n                }, 0.1);\n    }\n\n    playBlock(el) {\n        let block = new TimelineMax();\n        let block2 = new TimelineMax({delay: 0.69});\n\n        block.staggerFromTo(el.find('.block'), 0.3, {scale: 0.1}, {scale: 1}, 0.03)\n             .staggerTo(el.find('.block .inner:not(.inner-2)'), 1, {\n                    cycle: {\n                        x: [\"+200%\", \"-200%\"]\n                    },\n                    repeat: -1,\n                    repeatDelay: 0.6,\n                }, 0.1);\n        block2.staggerTo(el.find('.block .inner-2'), 1, {\n                    cycle: {\n                        x: [\"+200%\", \"-200%\"]\n                    },\n                    repeat: -1,\n                    repeatDelay: 0.6,\n                }, 0.1);\n    }\n\n    static sceneAnimation() {\n\n        const speed = 15; // uses it's local speed\n\n        // animates the small glows in a circular motion\n        $('.small-glow').each(function(){\n            let speedDelta = Math.floor(Math.random()*8);\n            let radius = Math.floor(Math.random()*20)+20;\n            TweenMax.to($(this), speed+speedDelta, {rotation: 360, transformOrigin: \"-\"+radius+\"px -\"+radius+\"px\", repeat: -1, ease: Power0.easeNone});\n        })\n\n        var wavet = TweenMax.to('.top_wave', speed*1.7/42, {backgroundPositionX: '-=54px', repeat: -1, ease: Power0.easeNone});\n        var wave1 = TweenMax.to('.wave1', speed*1.9/42, {backgroundPositionX: '-=54px', repeat: -1, ease: Power0.easeNone});\n        var wave2 = TweenMax.to('.wave2', speed*2/42, {backgroundPositionX: '-=54px', repeat: -1, ease: Power0.easeNone});\n        var wave3 = TweenMax.to('.wave3', speed*2.2/42, {backgroundPositionX: '-=54px', repeat: -1, ease: Power0.easeNone});\n        var wave4 = TweenMax.to('.wave4', speed*2.4/42, {backgroundPositionX: '-=54px', repeat: -1, ease: Power0.easeNone});\n\n        var mount1 = TweenMax.to('.mount1', speed*8, {backgroundPositionX: '-=1760px', repeat: -1, ease: Power0.easeNone});\n        var mount2 = TweenMax.to('.mount2', speed*10, {backgroundPositionX: '-=1782px', repeat: -1, ease: Power0.easeNone});\n\n        var clouds = TweenMax.to('.clouds', speed*3, {backgroundPositionX: '-=1001px', repeat: -1, ease: Power0.easeNone});   \n\n    }\n\n}\n\n            var game = new Game();\n            var animation = new Animation();\n            var color = new Color();\n            var userAgent = window.navigator.userAgent;\n\n            Animation.generateSmallGlows(20);\n\n            $(document).ready(function(){\n                //game.showResult();\n                game.scaleScreen();\n                game.intro();\n                //game.start();\n                //game.bounce();\n                \n                if($(window).height() < 480) {\n                    $('.play-full-page').css('display', 'block');\n                }\n            })\n\n            $(document).on('click', '.stick', function(){\n                color.changeColor($(this));\n                if($(this).hasClass('no-effect')) {\n                    if($(this).hasClass('bubble-stick')) {\n                        animation.playBubble($(this));\n                    } else if($(this).hasClass('triangle-stick')) {\n                        animation.playTriangle($(this));\n                    } else if($(this).hasClass('block-stick')) {\n                        animation.playBlock($(this));\n                    }\n                    $(this).removeClass('no-effect');\n                }\n            });\n\n            $(document).on('click', '.section-2 .bar', function(){\n                color.changeColor($(this));\n            });\n\n            $(window).resize(function(){\n                if (!userAgent.match(/iPad/i) && !userAgent.match(/iPhone/i)) {\n                    game.scaleScreenAndRun();\n                }\n            });\n\n            $(window).on(\"orientationchange\",function(){\n                game.scaleScreenAndRun();\n            });\n</script><style>@mixin bubble_shape ($width: 4px) {\n    border-radius: 50%;\n    position: absolute;\n    background-color: rgba(0, 0, 0, 0.12);\n    border-color: rgba(0, 0, 0, 0.12);\n    border-width: $width;\n}\n\n@mixin bubble ($size, $top, $left) {\n    height: $size;\n    width: $size;\n    top: $top;\n    left: $left;\n}\n\n@mixin bubble_hollow ($size, $top, $left) {\n    @include bubble ($size, $top, $left);\n    background-color: transparent;\n    border-style: solid;\n}\n\n@mixin triangle ($height, $width, $top, $left) {\n    border-left: ($height/2) solid transparent;\n    border-right: ($height/2) solid transparent;\n    border-bottom: $width solid rgba(0, 0, 0, 0.12);\n    background-color: transparent;\n    left: $left;\n    top: $top;\n}\n\n@mixin triangle_hollow ($height, $width, $top, $left) {\n    @include triangle( $height, $width, $top, $left );\n    &:after {    \n        content: \" \";\n        display: block;\n        position: absolute;\n        border-left: ($height/4-1) solid transparent;\n        border-right: ($height/4-1) solid transparent;\n        border-bottom: ($height/2-3) solid transparent;\n        top: 6px;\n        left: -($width/4);\n        transition: border-bottom-color 0.4s ease;\n\n        .red & {\n            border-bottom-color: #fc5c82;\n        }\n        .yellow & {\n            border-bottom-color: #fcd45c;\n        }\n        .purple & {\n            border-bottom-color: #9174f5;\n        }\n    }\n}\n\n@mixin block ($height, $width, $top, $left) {\n    height: $height;\n    width: $width;\n    top: $top;\n    left: $left;\n}\n\n@mixin block_hollow ($height, $width, $top, $left) {\n    @include block ($height, $width, $top, $left);\n    & .inner {\n        background-color: transparent !important;\n        border-style: solid;\n        box-sizing: border-box;\n    }\n}\n\n.bubble {\n    @include bubble_shape;\n}\n.bubble-1 {\n    @include bubble(15px, 21px, 59px);\n}\n.bubble-2 {\n    @include bubble(27px, 36px, 16px);\n}\n.bubble-3 {\n    @include bubble(21px, 63px, 49px);\n}\n.bubble-4 {\n    @include bubble(15px, 98px, 37px);\n}\n.bubble-5 {\n    @include bubble_hollow(5px, 116px, 20px);\n}\n.bubble-6 {\n    @include bubble(6px, 128px, 63px);\n}\n.bubble-7 {\n    @include bubble(27px, 150px, 52px);\n}\n.bubble-8 {\n    @include bubble(19px, 154px, 18px);\n}\n.bubble-9 {\n    @include bubble(10px, 189px, 13px);\n}\n.bubble-10 {\n    @include bubble_hollow(5px, 199px, 52px);\n}\n.bubble-11 {\n    @include bubble(21px, 220px, 29px);\n}\n.bubble-12 {\n    @include bubble(21px, 263px, 48px);\n}\n.bubble-13 {\n    @include bubble_hollow(5px, 275px, 16px);\n}\n.bubble-14 {\n    @include bubble(15px, 296px, 34px);\n}\n.triangle {\n    position: absolute;\n    background-color: rgba(0, 0, 0, 0.12);\n    border-color: rgba(0, 0, 0, 0.12);\n}\n.triangle-1 {\n    @include bubble_shape;\n    @include bubble(10px, 22px, 55px);\n}\n.triangle-2 {\n    @include triangle_hollow(16px, 14px, 27px, 15px);\n}\n.triangle-3 {\n    @include triangle_hollow(24px, 19px, 60px, 43px);\n}\n.triangle-4 {\n    @include bubble_shape(3px);\n    @include bubble_hollow(8px, 61px, 17px);\n}\n.triangle-5 {\n    @include triangle(10px, 8px, 101px, 25px);\n    transform: rotate(180deg);\n}\n\n.triangle-6 {\n    @include triangle(8px, 6px, 103px, 60px);\n    transform: rotate(-90deg);\n}\n\n.triangle-7 {\n    @include triangle(25px, 19px, 126px, 17px);\n    transform: rotate(180deg);\n}\n\n.triangle-8 {\n    @include triangle(21px, 16px, 149px, 50px);\n}\n\n.triangle-9 {\n    @include triangle(11px, 8px, 177px, 21px);\n}\n\n.triangle-10 {\n    @include bubble_shape;\n    @include bubble(10px, 177px, 60px);\n}\n\n.triangle-11 {\n    @include triangle(18px, 13px, 213px, 33px);\n    transform: rotate(180deg);\n}\n\n.triangle-12 {\n    @include bubble_shape(2px);\n    @include bubble_hollow(10px, 233px, 65px);\n}\n\n.triangle-13 {\n    @include bubble_shape;\n    @include bubble(10px, 250px, 22px);\n}\n\n.triangle-14 {\n    @include triangle_hollow(16px, 14px, 270px, 45px);\n    transform: rotate(180deg);\n}\n\n.stick {\n    .block {\n        position: absolute;\n        overflow: hidden;\n        z-index: 999;\n        border-radius: 7px;\n        .inner {\n            border-radius: 7px;\n            background-color: rgba(0, 0, 0, 0.12);\n            border-color: rgba(0, 0, 0, 0.12);\n            border-width: 3px;\n            height: 100%;\n            width: 100%;\n            position: absolute;\n        }\n        &:nth-child(2n+1) .inner-2 {\n            left: -200%;\n        }\n        &:nth-child(2n+2) .inner-2 {\n            left: 200%;\n        }\n    }\n    .block-1 {\n        @include block_hollow(16px, 31px, 16px, 30px);\n    }\n    .block-2 {\n        @include block(14px, 42px, 50px, 15px);\n    }\n    .block-3 {\n        @include block(18px, 9px, 73px, 64px);\n    }\n    .block-4 {\n        @include block(9px, 14px, 84px, 26px);\n    }\n    .block-5 {\n        @include block(15px, 15px, 109px, 45px);\n        .inner { \n            border-radius: 50%;\n        }\n    }\n    .block-6 {\n        @include block(9px, 27px, 135px, 19px);\n    }\n    .block-7 {\n        @include block(12px, 12px, 144px, 60px); \n        .inner { \n            border-radius: 50%;\n            border-style: solid;\n            box-sizing: border-box;\n            background-color: transparent;\n        }\n    }\n    .block-8 {\n        @include block(27px, 14px, 164px, 24px);\n    }\n    .block-9 {\n        @include block(8px, 8px, 188px, 64px);\n    }\n    .block-10 {\n        @include block_hollow(12px, 22px, 219px, 11px);\n    }\n    .block-11 {\n        @include block(22px, 22px, 226px, 50px);\n        .inner {\n            border-radius: 50%;\n        }\n    }\n    .block-12 {\n        @include block(18px, 9px, 248px, 26px);\n    }\n    .block-13 {\n        @include block(8px, 8px, 278px, 50px);\n        .inner {    \n            border-radius: 50%;\n        }\n    }\n    .block-14 {\n        @include block_hollow(12px, 22px, 297px, 18px);\n    }\n    .block-15 {\n        @include block(9px, 27px, 307px, 48px);\n    }\n}\n\nbody {\n    background-color: #28DAD4;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n    font-family: 'Roboto', sans-serif;\n}\na {\n    cursor: url(https://greghub.github.io/coloron/public/svg/cursor.svg), pointer;\n    &:focus, &:active {\n    cursor: url(https://greghub.github.io/coloron/public/svg/cursor-tap.svg), pointer;\n    }\n}\n.container {\n    position: fixed;\n    left: 0;\n    top: 0;\n    height: 100%;\n    width: 100%;\n}\n.waves, .mounts {\n    position: absolute;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n}\n.waves div, .mounts div {\n    position: absolute;\n    width: 100%;\n}\n.clouds {\n    position: absolute;\n    width: 100%;\n    left: 0;\n    top: 77px;\n    height: 151px;\n    background: url(https://greghub.github.io/coloron/public/svg/clouds.svg) repeat-x;\n    background-position-x: 170px; \n}\n.top_wave {\n    background: url(https://greghub.github.io/coloron/public/svg/top_wave.png) repeat-x 0 -1px;\n    height: 35px;\n    bottom: 0;\n    z-index: 10001;\n}\n.wave1 {\n    background: url(https://greghub.github.io/coloron/public/svg/wave1.svg) repeat-x;\n    height: 150px;\n    bottom: 0;\n    z-index: 23;\n}\n.wave2 {\n    background: url(https://greghub.github.io/coloron/public/svg/wave2.svg) repeat-x;\n    height: 180px;\n    bottom: 30px;\n    z-index: 22;\n}\n.wave3 {\n    background: url(https://greghub.github.io/coloron/public/svg/wave3.svg) repeat-x;\n    height: 180px;\n    bottom: 90px;\n    z-index: 21;\n}\n.wave4 {\n    background: url(https://greghub.github.io/coloron/public/svg/wave4.svg) repeat-x;\n    height: 180px;\n    bottom: 120px;\n    z-index: 20;\n}\n.mount1 {\n    background: url(https://greghub.github.io/coloron/public/svg/mount1.svg) repeat-x;\n    height: 150px;\n    bottom: 280px;\n    z-index: 11;\n}\n.mount2 {\n    background: url(https://greghub.github.io/coloron/public/svg/mount2.svg) repeat-x;\n    height: 150px;\n    bottom: 290px;\n    z-index: 10;\n}\n.noise {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    z-index: 1010;\n    background: url(https://greghub.github.io/coloron/public/svg/noise.png);\n}\n.glow {\n    position: absolute;\n    left: -350px;\n    top: -350px;\n    width: 800px;\n    height: 800px;\n    background-color: rgba(81, 237, 200, 0.34);\n    border-radius: 50%;\n    box-shadow: 0 0 100px 100px rgba(81, 237, 200, 0.34);\n    z-index: 1010;\n}\n.sun {\n    position: relative;\n    left: 50%;\n    top: 50%;\n    width: 1px;\n    height: 1px;\n    background-color: rgba(255, 227, 69, 1);\n    border-radius: 50%;\n    box-shadow: 0 0 32px 32px rgba(255, 227, 69, 1), \n                0 0 150px 150px rgba(103, 244, 210, 0.4);\n}\n.small-glow {\n    z-index: 99;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    position: absolute;\n    background-color: rgba(255, 255, 255, 0.34);\n    box-shadow: 0 0 1px 1px rgba(255, 255, 255, 0.34);\n}\n.small-glow.yellow {\n    background-color: rgba(255, 227, 69, 0.34);\n    box-shadow: 0 0 4px 4px rgba(255, 227, 69, 0.34);\n}\n.sticks {\n    z-index: 1011;\n    outline: none;\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\n}\n.stick {\n    height: 362px;\n    width: 90px;\n    border-radius: 14px;\n    background-image: url(https://greghub.github.io/coloron/public/svg/noise.png);\n    position: relative;\n    overflow: hidden;\n    float: left;\n    margin-right: 90px;\n    transition: background-color 0.4s ease;\n    cursor: url(https://greghub.github.io/coloron/public/svg/cursor.svg), pointer;\n    &:focus, &:active {\n        cursor: url(https://greghub.github.io/coloron/public/svg/cursor-tap.svg), pointer;\n    }\n}\n.stick.red {\n    background-color: #FF4571;\n}\n.stick.yellow {\n    background-color: #FFD145;\n}\n.stick.purple {\n    background-color: #8260F6;\n}\n.stick.inactive {\n    background-color: #4C4660;\n}\n.ball, .ball-demo {\n    background: url(https://greghub.github.io/coloron/public/svg/ball.svg) right bottom;\n    background-size: 64px 64px;\n    width: 53px;\n    height: 53px;\n    z-index: 1011;\n    background-color: #FF4571;\n    border-radius: 50%;\n}\n.ball {\n    margin-bottom: 250px;\n}\n.controls {\n    z-index: 999999;\n    position: relative\n}\n.game-full-flex {\n    position: fixed;\n    display: none; // gets updated to flex with JS\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    z-index: 9998;\n}\n.start-game {\n    .start-game-top {\n        min-height: 20%;\n        .play-full-page {\n            display: none;\n            border: 3px solid #fff;\n            border-radius: 100px;\n            color: #fff;\n            width: 260px;\n            height: 50px;\n            font-size: 28px;\n            text-align: center;\n            font-weight: 900;\n            letter-spacing: -1px;\n            line-height: 52px;\n            text-decoration: none;\n            text-transform: uppercase;\n            margin-top: 24px;\n            &:hover {\n                opacity: 0.7;\n            }\n        }\n    }\n    .logo-holder {\n        width: 513px;\n        height: 162px;\n        background-color: #4C4660;\n        border: 4px solid #FF4571;\n        border-radius: 68px;\n        text-align: center;\n        margin-top: -10%;\n        .logo {\n            color: #fff;\n            text-transform: uppercase;\n            font-weight: 900;\n            font-size: 100px;\n            letter-spacing: -0.1em;\n            margin-top: 10px;\n            margin-bottom: 4px;\n            text-align: center;\n            span {\n                margin-left: -8px;\n                margin-right: -8px;\n            }\n        }\n        .play-button {\n            display: inline-block;\n            background-color: #FF4571;\n            border: 4px solid #fff;\n            border-radius: 100px;\n            color: #fff;\n            width: 200px;\n            height: 56px;\n            font-size: 42px;\n            text-align: center;\n            font-weight: 900;\n            letter-spacing: -3px;\n            line-height: 56px;\n            text-decoration: none;\n            &:hover {\n                background-color: lighten(#FF4571, 5%);\n            }\n        }\n        .hint {\n            color: #fff;\n            font-size: 20px;\n            span {\n                color: #FF4571;\n            }\n        }\n    }\n    .how-to-play {\n        display: flex;\n        justify-content: space-around;\n        width: 100%;\n        .section-1, .section-3 {\n            flex: 1;\n            .content {\n                justify-content: center;\n            }\n        }\n        h4 {\n            color: #fff;\n            font-weight: 400;\n            font-size: 22px;\n            text-align: center;\n        }\n        .content {\n            height: 200px;\n            position: relative;\n            display: flex;\n            justify-content: space-around;\n        }\n        .bar {\n            width: 60px;\n            border-radius: 7px;\n            margin-top: auto;\n            transition: background-color 0.4s ease;\n            &.bar-1 {\n                height: 180px;\n                background: #FF4571;\n            }\n            &.bar-2 {\n                height: 120px;\n                background: #FFD145;\n            }\n            &.bar-3 {\n                height: 150px;\n                background: #4C4660;\n            }\n        }\n        .section-2 {\n            .bar {\n                cursor: url(https://greghub.github.io/coloron/public/svg/cursor.svg), pointer;\n                &:focus, &:active {\n                    cursor: url(https://greghub.github.io/coloron/public/svg/cursor-tap.svg), pointer;\n                }\n            }\n        }\n        .section-3 {\n            .ball-demo {\n                background-color: #815FF8;\n            }\n            .bar-1 {\n                height: 120px;\n                background-color: #815FF8;\n            }\n        }\n    }\n}\n.stop-game {\n    justify-content: center;\n    .score-container {\n        background-color: #4C4660;\n        width: 433px;\n        height: 386px;\n        border-radius: 38px;\n        text-align: center;\n        h1 {\n            color: #fff;\n            text-transform: uppercase;\n            letter-spacing: -0.1em;\n            margin-top: 20px;\n            margin-bottom: 4px;\n            font-size: 64px;\n        }\n        .final-score {\n            color: #FFE345;\n            font-weight: 900;\n            font-size: 130px;\n            letter-spacing: -6px;\n            line-height: 110px;\n        }\n        .result {\n            color: #FF4571;\n            text-transform: uppercase;\n            font-weight: 700;\n            font-size: 30px;\n        }\n        h4 {\n            color: #fff;\n            margin-top: 12px;\n        }\n        .tweet {\n            background: #fff;\n            padding: 8px 20px;\n            border-radius: 4px;\n            color: #55ACEE;\n            text-decoration: none;\n            font-size: 18px;\n            line-height: 24px;\n            display: inline-block;\n            &:hover {\n                background-color: #55ACEE;\n                color: #fff;\n            }\n            i {\n                font-size: 24px;\n                top: 2px;\n                right: 2px;\n                position: relative;\n            }\n        }\n        .play-again {\n            background-color: #FF4571;\n            border: 2px solid #fff;\n            color: #fff;\n            text-decoration: none;\n            text-transform: uppercase;\n            font-weight: 900;\n            letter-spacing: -1px;\n            font-size: 26px;\n            padding: 6px 24px;\n            border-radius: 22px;\n            margin: 6px 4px;\n            display: inline-block;\n            &:hover {\n                background-color: lighten(#FF4571, 5%);\n            }\n        }\n        .main-menu {\n            background-color: #44BFA3;\n            border: 2px solid #fff;\n            color: #fff;\n            text-decoration: none;\n            text-transform: uppercase;\n            font-weight: 900;\n            letter-spacing: -1px;\n            font-size: 26px;\n            padding: 6px 24px;\n            border-radius: 22px;\n            margin: 6px 4px;\n            display: inline-block;\n            &:hover {\n                background-color: lighten(#44BFA3, 5%);\n            }\n        }\n    }\n}\n.scene {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: fixed;\n    z-index: 9997;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    .ball-holder {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-end;\n        padding-left: 558px;\n    }\n    .score {\n        position: fixed;\n        right: 54px;\n        top: 20px;\n        color: #33485F;\n        font-size: 90px;\n        font-weight: 900;\n        letter-spacing: -0.1em;\n    }\n    .learn-to-play {    \n        z-index: 9999;\n        display: inline-block;\n        text-align: center;\n        position: relative;\n        top: 20%;\n        font-size: 48px;\n        color: rgba(255,255,255,0.85);\n        font-weight: 700;\n        letter-spacing: -2px;\n        opacity: 0;\n    }\n}\n\n.splash {\n  display: none;\n}\n\n@media print {\n  .splash {\n    display: block;\n    position: fixed;\n    z-index: 99999;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: #28DAD4;\n    background-image: url(https://greghub.github.io/coloron/public/images/coloron-image.png);\n    background-size: auto 100%;\n    background-repeat: no-repeat;\n    background-position: center;\n  } \n}\n\n.nominee {\n  position: fixed;\n  right: 0;\n  top: 0;\n  z-index: 9999;\n}</style>"},{"type":"Game","title":"Flip","desc":"Flip is a memory game. Will you find all the couples in time?","author":"Codrin Pavel","src":"/assets/media/apps/external/flip.png","id":"FlipSMP6A1B39I","batch":"","content":"<!--\nREADME!\n\nGAME INSRUCTIONS:\n\np    - pause\nESC  - abandon game\n\nClick the big P to choose one of three levels:\n- Casual\n- Medium\n- Hard\n\nThe game will save your stats locally, via localStorage.\nClick the F to see your stats.\n\nClick I for these intructions.\n\nFlip is a timed card memory game. When starting a level, there's a red bar on top of the screen that shows how much time you have left.\nClick the green cards to see what symbol they uncover and try to find the matching symbol underneath the other cards.\nUncover two matching symbols in a row to eliminate them from the game.\nEliminate all cards as fast as you can to win the game. Have fun FLIPing!\n-->\n\n\n<div id=\"g\"></div>\n\t\n<div class=\"logo\">\n  <p class=\"info\">Click the P to get started.</p>\n  <div class=\"card left\">\n    <div class=\"flipper\">\n      <div class=\"f c1\">F</div>\n      <div class=\"b contentbox\" id=\"stats\">\n        <div class=\"padded\">\n          <h2>Figures</h2>\n          Looks like you haven't FLIPped yet.\n          <a href=\"javascript:;\" class=\"playnow\">Play now</a>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"card active twist\">\n    <div class=\"flipper\">\n      <div class=\"b f\">\n        <div class=\"c2\">L</div>\n      </div>\n    </div>\n  </div>\n  <div class=\"card left\">\n    <div class=\"flipper\">\n      <div class=\"f c3\">I</div>\n      <div class=\"b contentbox instructions\">\n        <div class=\"padded\">\n          <h2>Instructions</h2>\n          <p>Press [p] to pause, or [ESC] to abandon game.</p>\n          <p>Flip is a timed card memory game. Click the green cards to see what symbol they uncover and try to find the matching symbol underneath the other cards.</p>\n          <p>Uncover two matching symbols at once to eliminate them from the game.</p>\n          <p>Eliminate all cards as fast as you can to win the game. Have fun FLIPing!</p>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"card\">\n    <div class=\"flipper\">\n      <div class=\"f c4\">P</div>\n      <div class=\"b contentbox levels\">\n        <a href=\"javascript:;\" data-level=\"8\" class=\"play\">Casual</a>\n        <a href=\"javascript:;\" data-level=\"18\" class=\"play\">Medium</a>\n        <a href=\"javascript:;\" data-level=\"32\" class=\"play\">Hard</a>\n      </div>\n    </div>\n  </div>\n\n  <p class=\"info\">Flip should work best in Google Chrome, decent in Firefox, IE10 and Opera;</p>\n</div><script type=\"text/javascript\">\n$(function(){\n  \n  function set(key, value) { localStorage.setItem(key, value); }\n  function get(key)        { return localStorage.getItem(key); }\n  function increase(el)    { set(el, parseInt( get(el) ) + 1); }\n  function decrease(el)    { set(el, parseInt( get(el) ) - 1); }\n\n  var toTime = function(nr){\n    if(nr == '-:-') return nr;\n    else { var n = ' '+nr/1000+' '; return n.substr(0, n.length-1)+'s'; }\n  };\n\n  function updateStats(){\n    $('#stats').html('<div class=\"padded\"><h2>Figures: <span>'+\n      '<b>'+get('flip_won')+'</b><i>Won</i>'+\n      '<b>'+get('flip_lost')+'</b><i>Lost</i>'+\n      '<b>'+get('flip_abandoned')+'</b><i>Abandoned</i></span></h2>'+\n      '<ul><li><b>Best Casual:</b> <span>'+toTime( get('flip_casual') )+'</span></li>'+\n      '<li><b>Best Medium:</b> <span>'+toTime( get('flip_medium') )+'</span></li>'+\n      '<li><b>Best Hard:</b> <span>'+toTime( get('flip_hard') )+'</span></li></ul>'+\n      '<ul><li><b>Total Flips:</b> <span>'+parseInt( ( parseInt(get('flip_matched')) + parseInt(get('flip_wrong')) ) * 2)+'</span></li>'+\n      '<li><b>Matched Flips:</b> <span>'+get('flip_matched')+'</span></li>'+\n      '<li><b>Wrong Flips:</b> <span>'+get('flip_wrong')+'</span></li></ul></div>');\n  };\n\n  function shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n    return array;\n  };\n\n  function startScreen(text){\n    $('#g').removeAttr('class').empty();\n    $('.logo').fadeIn(250);\n\n    $('.c1').text(text.substring(0, 1));\n    $('.c2').text(text.substring(1, 2));\n    $('.c3').text(text.substring(2, 3));\n    $('.c4').text(text.substring(3, 4));\n\n    // If won game\n    if(text == 'nice'){\n      increase('flip_won');\n      decrease('flip_abandoned');\n    }\n\n    // If lost game\n    else if(text == 'fail'){\n      increase('flip_lost');\n      decrease('flip_abandoned');\n    }\n\n    // Update stats\n    updateStats();\n  };\n\n  /* LOAD GAME ACTIONS */\n\n  // Init localStorage\n  if( !get('flip_won') && !get('flip_lost') && !get('flip_abandoned') ){\n    //Overall Game stats\n    set('flip_won', 0);\n    set('flip_lost', 0);\n    set('flip_abandoned', 0);\n    //Best times\n    set('flip_casual', '-:-');\n    set('flip_medium', '-:-');\n    set('flip_hard', '-:-');\n    //Cards stats\n    set('flip_matched', 0);\n    set('flip_wrong', 0);\n  }\n\n  // Fill stats\n  if( get('flip_won') > 0 || get('flip_lost') > 0 || get('flip_abandoned') > 0) {updateStats();}\n\n  // Toggle start screen cards\n  $('.logo .card:not(\".twist\")').on('click', function(e){\n    $(this).toggleClass('active').siblings().not('.twist').removeClass('active');\n    if( $(e.target).is('.playnow') ) { $('.logo .card').last().addClass('active'); }\n  });\n\n  // Start game\n  $('.play').on('click', function(){\n    increase('flip_abandoned');\n\t\t$('.info').fadeOut();\n\n    var difficulty = '',\n        timer      = 1000,\n        level      = $(this).data('level');\n\n    // Set game timer and difficulty   \n    if     (level ==  8) { difficulty = 'casual'; timer *= level * 4; }\n    else if(level == 18) { difficulty = 'medium'; timer *= level * 5; }\n    else if(level == 32) { difficulty = 'hard';   timer *= level * 6; }\t    \n\n    $('#g').addClass(difficulty);\n\n    $('.logo').fadeOut(250, function(){\n      var startGame  = $.now(),\n          obj = [];\n\n      // Create and add shuffled cards to game\n      for(i = 0; i < level; i++) { obj.push(i); }\n\n      var shu      = shuffle( $.merge(obj, obj) ),\n          cardSize = 100/Math.sqrt(shu.length);\n\n      for(i = 0; i < shu.length; i++){\n        var code = shu[i];\n        if(code < 10) code = \"0\" + code;\n        if(code == 30) code = 10;\n        if(code == 31) code = 21;\n        $('<div class=\"card\" style=\"width:'+cardSize+'%;height:'+cardSize+'%;\">'+\n            '<div class=\"flipper\"><div class=\"f\"></div><div class=\"b\" data-f=\"&#xf0'+code+';\"></div></div>'+\n          '</div>').appendTo('#g');\n      }\n\n      // Set card actions\n      $('#g .card').on({\n        'mousedown' : function(){\n          if($('#g').attr('data-paused') == 1) {return;}\n          var data = $(this).addClass('active').find('.b').attr('data-f');\n\n          if( $('#g').find('.card.active').length > 1){\n            setTimeout(function(){\n              var thisCard = $('#g .active .b[data-f='+data+']');\n\n              if( thisCard.length > 1 ) {\n                thisCard.parents('.card').toggleClass('active card found').empty(); //yey\n                increase('flip_matched');\n\n                // Win game\n                if( !$('#g .card').length ){\n                  var time = $.now() - startGame;\n                  if( get('flip_'+difficulty) == '-:-' || get('flip_'+difficulty) > time ){\n                    set('flip_'+difficulty, time); // increase best score\n                  }\n\n                  startScreen('nice');\n                }\n              }\n              else {\n                $('#g .card.active').removeClass('active'); // fail\n                increase('flip_wrong');\n              }\n            }, 401);\n          }\n        }\n      });\n\n      // Add timer bar\n      $('<i class=\"timer\"></i>')\n        .prependTo('#g')\n        .css({\n          'animation' : 'timer '+timer+'ms linear'\n        })\n        .one('webkitAnimationEnd oanimationend msAnimationEnd animationend', function(e) {\n          startScreen('fail'); // fail game\n        });\n\n      // Set keyboard (p)ause and [esc] actions\n      $(window).off().on('keyup', function(e){\n        // Pause game. (p)\n        if(e.keyCode == 80){\n          if( $('#g').attr('data-paused') == 1 ) { //was paused, now resume\n            $('#g').attr('data-paused', '0');\n            $('.timer').css('animation-play-state', 'running');\n            $('.pause').remove();\n          }\n          else {\n            $('#g').attr('data-paused', '1');\n            $('.timer').css('animation-play-state', 'paused');\n            $('<div class=\"pause\"></div>').appendTo('body');\n          }\n        }\n        // Abandon game. (ESC)\n        if(e.keyCode == 27){\n          startScreen('flip');\n          // If game was paused\n          if( $('#g').attr('data-paused') == 1 ){\n            $('#g').attr('data-paused', '0');\n            $('.pause').remove();\n          }\n          $(window).off();\n        }\n      });\n    });\n  });\n  \n});\n</script><style>body, html{margin:0;font:normal 0/0 Arial, Helvetica, sans-serif;background:#333;overflow:hidden;color:#fff;\n\t-webkit-touch-callout: none;\n\t-webkit-user-select: none;\n\t-khtml-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n}\nbody, html, .flipper, .f, .b, #g {width:100%;height:100%;}\n\n/* font-face */\n@font-face{font-family: \"GeneralFoundicons\";font-weight:normal;font-style:normal;\n\tsrc: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/60583/general_foundicons.eot\");\n\tsrc: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/60583/general_foundicons.eot?#iefix\") format(\"embedded-opentype\"),\n\t     url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/60583/general_foundicons.woff\") format(\"woff\"),\n\t     url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/60583/general_foundicons.ttf\") format(\"truetype\"),\n\t     url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/60583/general_foundicons.svg#GeneralFoundicons\") format(\"svg\");\n}\na{text-decoration:none;color:#fff;display:block;font:bold 18px/75px 'Open Sans';text-transform:uppercase;text-align:center;padding:0;margin:0 1px;}\na:hover{color:#fff;background:rgba(255, 255, 255, .1)}\n\n/* FRONT SCREEN */\n.logo{width:450px;height:450px;position:absolute;top:50%;left:50%;margin:-225px 0 0 -225px}\n.logo .card{width:50%;height:50%;cursor:default;position:relative}\n.logo .card.left.active{z-index:2}\n.logo .card.left.active + .card{opacity:0}\n.logo .card.left.active .b{margin-left:-100%}\n.logo .f{font:normal 130px/225px 'Open Sans';text-align:center;text-transform:uppercase;}\n.logo .c2{transform:scale(-1, 1);-webkit-transform:scale(-1, 1);-moz-transform:scale(-1, 1);-ms-transform:scale(-1, 1)}\n\n.logo .contentbox{width:200%;font:normal 12px/16px 'Open Sans';text-align:left}\n.logo .contentbox.levels{width:100%}\n.logo .contentbox .padded{padding:0 15px;}\n.logo .contentbox h2{font-size:24px;padding:0;margin:28px 0;text-transform:uppercase}\n.logo .contentbox p{line-height:14px;margin:14px 0}\n\n#stats h2 i{margin-right:10px;vertical-align:top;font:italic normal 9px/8px 'Open Sans';color:rgba(255,255,255, .4)}\n#stats ul{width:50%;display:inline-block;margin:0;padding:0;list-style-type:none;vertical-align:top;line-height:22px}\n#stats li{display:block;margin:0;padding:0;}\n#stats li b{display:inline-block;font-size:12px;width:95px}\n#stats a {position:absolute;bottom:0;width:100%;margin-left:-15px;}\n\n.logo .info{font-size:11px;line-height:16px;text-align:center;color: rgba(255,255,255, .3);padding:0 25px;}\n\n/*GAME SCREEN*/\n#g{margin-top:4px}\n#g .timer{width:0%;height:5px;position:absolute;top:0;background:#C0392B;z-index:1}\n@-webkit-keyframes timer {100% { width:100%; }}\n@-moz-keyframes timer {100% { width:100%; }}\n@-o-keyframes timer {100% { width:100%; }}\n@keyframes timer {100% { width:100%; }}\n.pause{position:absolute;width:100%;height:100%;left:0;top:0;z-index:100;background:rgba(51, 51, 51, 0.78)}\n.pause::before{content:'PAUSED';width:100%;position:absolute;margin-top:-100px;top:50%;background:#C0392B;color:#fff;font:bold 80px/200px 'Open Sans';\ndisplay:block;text-align:center;}\n/* card styles */\n#g .found{display:inline-block}\n.card{display:inline-block;-webkit-perspective:1000;-moz-perspective:1000;}\n.card:not(.active):hover{opacity:.8}\n.card .b::before{content:attr(data-f);display:block;font:normal 100px/100px \"GeneralFoundicons\";\nposition:absolute;top:50%;margin-top:-50px;width:100%;text-align:center}\n\n/* flip cards */\n.flipper {position:relative;-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d}\n.f, .b {position:absolute;top:0;left:0;box-shadow:inset 0 0 0 1px #333;-webkit-backface-visibility:hidden;-moz-backface-visibility:hidden}\n.f {background:#16A085;z-index:1}\n.b {background:#C0392B;opacity:0}\n.card.active .b{z-index:2;opacity:1}\n\n/*Grouped for easy prefixing*/\n.card, .flipper, .logo .b{transition:400ms;-ms-transition:400ms;-webkit-transition:400ms;-moz-transition:400ms;-o-transition:400ms}\n.card.active .flipper, .b {transform:rotateY(180deg);-webkit-transform:rotateY(180deg);-moz-transform:rotateY(180deg);-ms-transform:rotateY(180deg);-o-transform:rotateY(180deg)}\n.logo .f, .card .b::before, .pause::before{-webkit-text-stroke: 1px #fff} /*webkit only*/\n\n/*Responsive Stuff*/\n@media all and (max-width: 1680px) and (min-width: 640px){\n\t.card .b::before{font-size:90px}\n\t#g.medium .card .b::before{font-size:70px}\n\t#g.hard .card .b::before{font-size:50px}\n}\n@media all and (max-width: 640px) and (min-width: 470px){\n\t.card .b::before{font-size:90px}\n\t#g.medium .card .b::before{font-size:60px}\n\t#g.hard .card .b::before{font-size:50px}\n}\n\n@media all and (max-width: 470px) and (min-width: 0px){\n\t.card .b::before{font-size:60px}\n\t#g.medium .card .b::before{font-size:35px;-webkit-text-stroke:0;}\n\t#g.hard .card .b::before{font-size:32px;-webkit-text-stroke:0;}\n}\n\n@media all and (max-width: 640px) and (min-width: 0px){\n\ta{line-height:50px;font-size:13px}\n\t.logo{width:300px;height:300px;margin:-150px 0 0 -150px}\n\t.logo .f{font:normal 80px/150px 'Open Sans'}\n\t.logo .contentbox h2{font-size:16px;margin:24px 0;}\n\t.logo .instructions h2{display:none}\n\t.logo .instructions.contentbox p:nth-child(3){display:none}\n\t#stats li b{width:auto}\n}</style>"},{"type":"Game","title":"Infinite Run","desc":"Get the highest score you can trying to avoid the obstacles!","author":"Eduardo Lopes","src":"/assets/media/apps/external/infiniterun.png","id":"Infinite RunDKD87LHWHK","batch":"","content":"  <div id=\"container\">\n  \t\n  </div> \n\n<div class=\"controlls\">\n\t<p>Jump: <b>CLICK</b> or <b>SPACE</b> or <b>UP</b> or <b>W</b> (Hold to jump higher)</p>\n  <p>(<b>TOUCH</b> works as well, but the game it's not responsive).</p>\n<p></p>\n</div>\n\n<script type=\"text/javascript\">\nclass Game {\n\n    constructor() {\n        this.score = 0;\n        this.isRunning = 0; // game is not running\n\n        this.calculateScale();\n\n        this.timeline = new TimelineMax({smoothChildTiming: true});\n        this.time = 1.6; // initial speed\n        this.colors = [\"#FF4571\", \"#FFD145\", \"#8260F6\"]; // the 3 colors used in the game\n        this.colorsRGBA = [\"rgba(255, 69, 113, 1)\", \"rgba(255, 69, 113, 1)\", \"rgba(255, 69, 113, 1)\"];\n        this.color = this.colors[0]; // the intial color of the ball\n        this.prevColor = null; // used as a holder to prevent ball colors from repeating\n    }\n\n    /**\n     * The game screen is scalable. I took 1200x800px as the initial scale.\n     * In order to display the game an many screen sizes properly\n     * I have to compare the player's sreen size to the initial scale,\n     * then scale the game using CSS Transform to fit the screen properly\n     * The function is called in the controller and anywhere where I need\n     * to recalculate the scale on screen resize or device rotation\n     */\n    calculateScale() {\n        this.screen = $(window).width(); // screen width\n        this.screenHeight = $(window).height();\n        this.scale = (this.screen > this.screenHeight) ? this.screenHeight/800 : this.screen/1200;\n        this.stickWidth = 180*this.scale;\n        this.steps = this.screen/this.stickWidth; // how many steps (stick width + margin) it takes from one end to another\n    }\n\n    /**\n     * Creating as many sticks we need to fill the screen\n     * from start to end of the screen. The steps property is used for that\n     */\n    generateSticks() {\n        let numberOfSticks = Math.ceil(this.steps);\n        for(let i = 0; i <= numberOfSticks; i++)\n            new Stick();\n    }\n\n    generateBall() {\n        this.balltween = new TimelineMax({repeat: -1, paused: 1});\n        $('.scene .ball-holder').append('<div class=\"ball red\" id=\"ball\"></div>');\n        this.bounce();\n    }\n\n    generateTweet() {\n        let top = $(window).height() / 2 - 150;\n        let left = $(window).width() / 2 - 300;\n        window.open(\"https://twitter.com/intent/tweet?url=https://codepen.io/gregh/full/yVLOyO&amp;text=I scored \"+ this.score +\" points on Coloron! Can you beat my score?&amp;via=greghvns&amp;hashtags=coloron\", \"TweetWindow\", \"width=600px,height=300px,top=\" + top + \",left=\" + left);\n    }\n\n    /**\n     * The greeting when the game begins\n     */\n    intro() {\n\n        TweenMax.killAll();\n      \n        //TweenMax.to('.splash', 0.3, { opacity: 0, display: 'none', delay: 1 })\n\n        $('.stop-game').css('display', 'none');\n        $('.start-game').css('display', 'flex');\n\n        let introTl = new TimelineMax();\n        let ball = new TimelineMax({repeat: -1, delay: 3});\n        introTl\n            .fromTo('.start-game .logo-holder', 0.9, { opacity: 0 }, { opacity: 1 })\n            .staggerFromTo('.start-game .logo span', 0.5, { opacity: 0 }, { opacity: 1 }, 0.08)\n            .staggerFromTo('.start-game .bar', 1.6, { y: '+100%' }, { y: '0%', ease: Elastic.easeOut.config(1, 0.3) }, 0.08)\n            .staggerFromTo('.start-game .ball-demo', 1, { scale: 0 }, { scale: 1, ease: Elastic.easeOut.config(1, 0.3) }, 0.8, 2)\n\n\n        ball.fromTo('.start-game .section-1 .ball-demo', 0.5, { y: \"0px\" }, { y: \"100px\", scaleY: 1.1, transformOrigin: \"bottom\", ease: Power2.easeIn})\n            .to('.start-game .section-1 .ball-demo', 0.5, { y: \"0px\", scaleY: 1, transformOrigin: \"bottom\", ease: Power2.easeOut,  \n                    onStart: () => {\n                        while(this.prevColor==this.color) {\n                            this.color = (new Color).getRandomColor();\n                        }\n                        this.prevColor = this.color;\n                        TweenMax.to('.start-game .section-1 .ball-demo', 0.5, {backgroundColor: this.color});\n                    } \n                });\n    }\n\n    /**\n    * Display score\n     */\n    showResult() {\n        let score = this.score;\n        $('.stop-game').css('display', 'flex');\n        $('.stop-game .final-score').text(score + '!');\n        $('.stop-game .result').text(this.showGrade(score));\n        $('.nominee').show();\n\n        let resultTimeline = new TimelineMax();\n        resultTimeline\n            .fromTo('.stop-game .score-container', 0.7, { opacity: 0, scale: 0.3 }, { opacity: 1, scale: 1, ease: Elastic.easeOut.config(1.25, 0.5)})\n            .fromTo('.stop-game .final-score', 2, { scale: 0.5 }, { scale: 1, ease: Elastic.easeOut.config(2, 0.5)}, 0)\n            .fromTo('.stop-game .result', 1, { scale: 0.5 }, { scale: 1, ease: Elastic.easeOut.config(1.5, 0.5)}, 0.3)\n            ;\n\n    }\n\n    /**\n     * Takes players score and generates the cheering copy\n     * @param  {int} score\n     * @return {string} grade\n     */\n    showGrade(score) {\n        if(score > 30) return \"Chuck Norris?\";\n        else if(score > 25) return \"You're da man\";\n        else if(score > 20) return \"Awesome\";\n        else if(score > 15) return \"Great!\";\n        else if(score > 13) return \"Nice!\";\n        else if(score > 10) return \"Good Job!\";\n        else if(score > 5) return \"Really?\";\n        else return \"Poor...\";\n    }\n\n    start() {\n\n        this.stop(); // stop the game\n\n        $('.start-game, .stop-game').css('display', 'none'); // hide all the popups\n        $('.nominee').hide();\n\n        new Game();\n        this.score = 0; // reset\n\n        this.isRunning = 1;\n\n        // Clean up the stick and ball holders\n        // and generate new ones\n        $('#sticks, .scene .ball-holder').html('');\n        $('#score').text(this.score);\n        this.generateSticks();\n        this.generateBall();\n\n        // disables scene animations for Phones\n        if( !/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent) ) {\n            Animation.sceneAnimation();\n        }\n        this.moveToStart();\n        this.moveScene();\n\n        // reset timescale to normal as the game speeds up\n        this.timeline.timeScale(1);\n        this.balltween.timeScale(1);\n    }\n\n    stop() {\n\n        this.isRunning = 0;\n\n        $('.start-game, .stop-game').css('display', 'none');\n        $('#sticks, .scene .ball-holder, #score').html('');\n        TweenMax.killAll();\n        \n        this.showResult();\n    }\n\n    scaleScreen() {\n\n        TweenMax.killAll(); // prevent multiple calls on resize\n\n        let height = $(window).height();\n        let width = $(window).width();\n\n        this.calculateScale();\n\n        $('.container')\n                .css('transform', 'scale(' + this.scale + ')')\n                .css('height', height/this.scale)\n                .css('width', width/this.scale)\n                .css('transformOrigin', 'left top');\n\n        $('#sticks').width(this.screen/this.scale + 3 * this.stickWidth/this.scale);\n\n    }\n\n    /**\n     * Calls the above function\n     * If the game is running it stops and shows the score\n     * If the game has stops it takes player to the main menu\n     */\n    scaleScreenAndRun() {\n\n        this.scaleScreen();\n\n        if(this.isRunning) {\n            this.stop();\n        } else {\n            this.intro();\n        }\n\n    }\n\n    /**\n     * This is the initial animation\n     * where the sticks come to the starting position\n     * and the ball appears and falls down\n     */\n    moveToStart() {        \n\n        let tip = new TimelineMax({ delay: 2 });\n\n        tip\n            .fromTo('.learn-to-play', 1, { scale: 0 }, { scale: 1, opacity: 1, ease: Elastic.easeOut.config(1.25, 0.5) })\n            .to('.learn-to-play', 1, { scale: 0, opacity: 0, ease: Elastic.easeOut.config(1.25, 0.5) }, 3)\n\n        TweenMax.fromTo('#ball', this.time,\n                        { \n                            scale: 0 \n                        },\n                        { \n                            scale: 1,\n                            delay: this.time * ((this.steps - 3) - 1.5), \n                            onComplete: () => {\n                                this.balltween.play();\n                            }\n                        });\n\n        this.timeline.add(\n            TweenMax.fromTo('#sticks', this.time * this.steps, { x: this.screen / this.scale }, { x: 0, ease: Power0.easeNone})\n        );\n    }\n\n    /**\n     * The animation that moves sticks\n     */\n    moveScene() {\n\n        this.timeline.add(\n            TweenMax.to('#sticks', this.time, { x: '-=180px', ease: Power0.easeNone, repeat: -1, onRepeat: () => { this.rearrange() } })\n        );\n\n    }  \n\n    /**\n     * removes the first stick and adds one the the end\n     * this gives the sticks an infinite movement\n     */\n    rearrange() {\n\n        let scale = this.speedUp();\n\n        this.timeline.timeScale(scale);\n        this.balltween.timeScale(scale);\n\n        $('#sticks .stick').first().remove();\n        new Stick();\n\n    }\n\n    /**\n     * The game speeds up based on score\n     * The GSAP timeScale() function is called on the timeline to speed up the game\n     * This calculates how much shall the game speed up\n     */\n    speedUp() {\n        if(this.score > 30) {\n            return 1.8;\n        }\n        if(this.score > 20) {\n            return 1.7;\n        }\n        if(this.score > 15) {\n            return 1.5;\n        }\n        else if(this.score > 12) {\n            return 1.4;\n        }\n        else if(this.score > 10) {\n            return 1.3;\n        }\n        else if(this.score > 8) {\n            return 1.2;\n        }\n        else if(this.score > 5) {\n            return 1.1;\n        }\n        return 1;\n    }\n\n    /**\n     * Ball bouncing animation\n     * It checks if the ball and stick colors match\n     * And changes the ball color\n     */\n    bounce() {\n\n        this.balltween\n                .to('#ball', this.time/2, {y: '+=250px', scaleY: 0.7, transformOrigin: \"bottom\", ease: Power2.easeIn,\n                    onComplete: () => {\n                        this.checkColor();\n                    }\n                }).to('#ball', this.time/2, {y: '-=250px', scaleY: 1.1, transformOrigin: \"bottom\", ease: Power2.easeOut, \n                    onStart: () => {\n                        while(this.prevColor==this.color) {\n                            this.color = (new Color).getRandomColor();\n                        }\n                        this.prevColor = this.color;\n                        TweenMax.to('#ball', 0.5, {backgroundColor: this.color});\n                        $('#ball').removeClass('red')\n                                  .removeClass('yellow')\n                                  .removeClass('purple')\n                                  .addClass((new Color).colorcodeToName(this.color));\n                    }\n                })    \n    }    \n\n    checkColor() {\n\n        let ballPos = $('#ball').offset().left + $('#ball').width()/2;\n        let stickWidth = $('.stick').width();\n        let score = this.score;\n\n        $('#sticks .stick').each(function(){\n            if($(this).offset().left < ballPos && $(this).offset().left > (ballPos - stickWidth)) {\n                \n                if( Color.getColorFromClass($(this)) == Color.getColorFromClass('#ball') ) {\n                    // if matches increase the score\n                    score++;\n                    $('#score').text(score);\n                    TweenMax.fromTo('#score', 0.5, { scale: 1.5 }, { scale: 1, ease: Elastic.easeOut.config(1.5, 0.5) });\n                } else {\n\n                    // you loose\n                    game.stop();\n\n                }\n\n            }\n        })\n\n        this.score = score;\n    }\n\n}\n\nclass Stick {\n\n    constructor() {\n        this.stick = this.addStick();\n    }\n\n    addStick() {\n        this.stick = $('#sticks').append('<div class=\"stick inactive\"></div>');\n        return this.stick;\n    }\n\n}\n\nclass Color {\n\n    constructor() {\n        this.colors = [\"#FF4571\", \"#FFD145\", \"#8260F6\"];\n        this.effects = [\"bubble\", \"triangle\", \"block\"];\n        this.prevEffect = null;\n    }\n\n    getRandomColor() {\n        let colorIndex = Math.random()*3;\n        let color = this.colors[Math.floor(colorIndex)];\n        return color;\n    } \n\n    colorcodeToName(color) {\n        let colors = [\"#FF4571\", \"#FFD145\", \"#8260F6\"];\n        let names = [\"red\", \"yellow\", \"purple\"];\n        let index = colors.indexOf(color);\n        if(index == -1) return false;\n        return names[index];\n    }      \n\n    /**\n     * Changes the color of an element\n     * As we as adds verbal name of the color\n     */\n    changeColor(el) {\n        let index = el.data(\"index\");\n        if(index===undefined) { index = 0; }\n        else { index += 1; }\n        if(index==3) index = 0;\n        el\n            .css('background-color', this.colors[index])\n            .data('index', index);\n\n        el.removeClass('red')\n          .removeClass('yellow')\n          .removeClass('purple')\n          .addClass(this.colorcodeToName(this.colors[index]));\n\n        if(el.hasClass('inactive')) {\n            this.setEffect(el);\n            el.addClass('no-effect');\n        }\n        \n        el.removeClass('inactive');\n    }\n\n    getRandomEffect() {\n        let effectIndex = null;\n        \n        effectIndex = Math.floor(Math.random()*3);\n        while(effectIndex == this.prevEffect) {\n            effectIndex = Math.floor(Math.random()*3);\n        }\n\n        this.prevEffect = effectIndex;\n        return this.effects[effectIndex];\n    }   \n\n    /**\n     * Adds the effect specific particles to the stick\n     */\n    setEffect(el) {\n        let effect = this.getRandomEffect();\n        el.addClass(effect + '-stick');\n        for(let i = 1; i <= 14; i++) {\n            if(effect=='block') {\n                el.append(`<div class=\"${effect} ${effect}-${i}\"><div class=\"inner\"></div><div class=\"inner inner-2\"></div></div>`);\n            } else {\n                el.append(`<div class=\"${effect} ${effect}-${i}\"></div>`);\n            }\n        }\n    }\n\n    /**\n     * Since the ball and sticks have several classes\n     * This method searches for the color class\n     * @param el [DOM element]\n     * @return {string} class name\n     */\n    static getColorFromClass(el) {\n        let classes = $(el).attr('class').split(/\\s+/);\n        for (var i = 0, len = classes.length; i < len; i++) {          \n            if(classes[i] == 'red' || classes[i] == 'yellow' || classes[i] == 'purple') {\n                return classes[i];\n            }\n        }\n    }\n}\n\nclass Animation {\n\n    /**\n     * Creates and positions the small glow elements on the screen\n     */\n    static generateSmallGlows(number) {\n        let h = $(window).height();\n        let w = $(window).width();\n        let scale = (w > h) ? h/800 : w/1200;\n\n        h = h/scale;\n        w = w/scale;\n\n        for(let i = 0; i < number; i++) {\n            let left = Math.floor(Math.random()*w);\n            let top = Math.floor(Math.random()*(h/2));\n            let size = Math.floor(Math.random()*8) + 4;\n            $('.small-glows').prepend('<div class=\"small-glow\"></div>');\n            let noise = $('.small-glows .small-glow').first();\n            noise.css({left: left, top: top, height: size, width: size});\n        }\n    }\n\n    /**\n     * Creates the animations for sticks\n     * The effects is chosen by random\n     * And one of the three functions is\n     * Called accordingly\n     */\n    playBubble(el) {\n        let bubble = new TimelineMax();\n        bubble.staggerFromTo(el.find('.bubble'), 0.3, {scale: 0.1}, {scale: 1}, 0.03)\n        bubble.staggerTo(el.find('.bubble'), 0.5, {y: '-=60px', yoyo: true, repeat: -1}, 0.03);\n    }\n\n    playTriangle(el) {\n        let triangle = new TimelineMax();\n        triangle.staggerFromTo(el.find('.triangle'), 0.3, {scale: 0.1}, {scale: 1}, 0.03)\n                .staggerTo(el.find('.triangle'), 1.5, {\n                    cycle:{\n                        rotationY: [0, 360],\n                        rotationX: [360, 0],\n                    },\n                    repeat: -1,\n                    repeatDelay: 0.1\n                }, 0.1);\n    }\n\n    playBlock(el) {\n        let block = new TimelineMax();\n        let block2 = new TimelineMax({delay: 0.69});\n\n        block.staggerFromTo(el.find('.block'), 0.3, {scale: 0.1}, {scale: 1}, 0.03)\n             .staggerTo(el.find('.block .inner:not(.inner-2)'), 1, {\n                    cycle: {\n                        x: [\"+200%\", \"-200%\"]\n                    },\n                    repeat: -1,\n                    repeatDelay: 0.6,\n                }, 0.1);\n        block2.staggerTo(el.find('.block .inner-2'), 1, {\n                    cycle: {\n                        x: [\"+200%\", \"-200%\"]\n                    },\n                    repeat: -1,\n                    repeatDelay: 0.6,\n                }, 0.1);\n    }\n\n    static sceneAnimation() {\n\n        const speed = 15; // uses it's local speed\n\n        // animates the small glows in a circular motion\n        $('.small-glow').each(function(){\n            let speedDelta = Math.floor(Math.random()*8);\n            let radius = Math.floor(Math.random()*20)+20;\n            TweenMax.to($(this), speed+speedDelta, {rotation: 360, transformOrigin: \"-\"+radius+\"px -\"+radius+\"px\", repeat: -1, ease: Power0.easeNone});\n        })\n\n        var wavet = TweenMax.to('.top_wave', speed*1.7/42, {backgroundPositionX: '-=54px', repeat: -1, ease: Power0.easeNone});\n        var wave1 = TweenMax.to('.wave1', speed*1.9/42, {backgroundPositionX: '-=54px', repeat: -1, ease: Power0.easeNone});\n        var wave2 = TweenMax.to('.wave2', speed*2/42, {backgroundPositionX: '-=54px', repeat: -1, ease: Power0.easeNone});\n        var wave3 = TweenMax.to('.wave3', speed*2.2/42, {backgroundPositionX: '-=54px', repeat: -1, ease: Power0.easeNone});\n        var wave4 = TweenMax.to('.wave4', speed*2.4/42, {backgroundPositionX: '-=54px', repeat: -1, ease: Power0.easeNone});\n\n        var mount1 = TweenMax.to('.mount1', speed*8, {backgroundPositionX: '-=1760px', repeat: -1, ease: Power0.easeNone});\n        var mount2 = TweenMax.to('.mount2', speed*10, {backgroundPositionX: '-=1782px', repeat: -1, ease: Power0.easeNone});\n\n        var clouds = TweenMax.to('.clouds', speed*3, {backgroundPositionX: '-=1001px', repeat: -1, ease: Power0.easeNone});   \n\n    }\n\n}\n\n            var game = new Game();\n            var animation = new Animation();\n            var color = new Color();\n            var userAgent = window.navigator.userAgent;\n\n            Animation.generateSmallGlows(20);\n\n            $(document).ready(function(){\n                //game.showResult();\n                game.scaleScreen();\n                game.intro();\n                //game.start();\n                //game.bounce();\n                \n                if($(window).height() < 480) {\n                    $('.play-full-page').css('display', 'block');\n                }\n            })\n\n            $(document).on('click', '.stick', function(){\n                color.changeColor($(this));\n                if($(this).hasClass('no-effect')) {\n                    if($(this).hasClass('bubble-stick')) {\n                        animation.playBubble($(this));\n                    } else if($(this).hasClass('triangle-stick')) {\n                        animation.playTriangle($(this));\n                    } else if($(this).hasClass('block-stick')) {\n                        animation.playBlock($(this));\n                    }\n                    $(this).removeClass('no-effect');\n                }\n            });\n\n            $(document).on('click', '.section-2 .bar', function(){\n                color.changeColor($(this));\n            });\n\n            $(window).resize(function(){\n                if (!userAgent.match(/iPad/i) && !userAgent.match(/iPhone/i)) {\n                    game.scaleScreenAndRun();\n                }\n            });\n\n            $(window).on(\"orientationchange\",function(){\n                game.scaleScreenAndRun();\n            });\n</script><style>@mixin bubble_shape ($width: 4px) {\n    border-radius: 50%;\n    position: absolute;\n    background-color: rgba(0, 0, 0, 0.12);\n    border-color: rgba(0, 0, 0, 0.12);\n    border-width: $width;\n}\n\n@mixin bubble ($size, $top, $left) {\n    height: $size;\n    width: $size;\n    top: $top;\n    left: $left;\n}\n\n@mixin bubble_hollow ($size, $top, $left) {\n    @include bubble ($size, $top, $left);\n    background-color: transparent;\n    border-style: solid;\n}\n\n@mixin triangle ($height, $width, $top, $left) {\n    border-left: ($height/2) solid transparent;\n    border-right: ($height/2) solid transparent;\n    border-bottom: $width solid rgba(0, 0, 0, 0.12);\n    background-color: transparent;\n    left: $left;\n    top: $top;\n}\n\n@mixin triangle_hollow ($height, $width, $top, $left) {\n    @include triangle( $height, $width, $top, $left );\n    &:after {    \n        content: \" \";\n        display: block;\n        position: absolute;\n        border-left: ($height/4-1) solid transparent;\n        border-right: ($height/4-1) solid transparent;\n        border-bottom: ($height/2-3) solid transparent;\n        top: 6px;\n        left: -($width/4);\n        transition: border-bottom-color 0.4s ease;\n\n        .red & {\n            border-bottom-color: #fc5c82;\n        }\n        .yellow & {\n            border-bottom-color: #fcd45c;\n        }\n        .purple & {\n            border-bottom-color: #9174f5;\n        }\n    }\n}\n\n@mixin block ($height, $width, $top, $left) {\n    height: $height;\n    width: $width;\n    top: $top;\n    left: $left;\n}\n\n@mixin block_hollow ($height, $width, $top, $left) {\n    @include block ($height, $width, $top, $left);\n    & .inner {\n        background-color: transparent !important;\n        border-style: solid;\n        box-sizing: border-box;\n    }\n}\n\n.bubble {\n    @include bubble_shape;\n}\n.bubble-1 {\n    @include bubble(15px, 21px, 59px);\n}\n.bubble-2 {\n    @include bubble(27px, 36px, 16px);\n}\n.bubble-3 {\n    @include bubble(21px, 63px, 49px);\n}\n.bubble-4 {\n    @include bubble(15px, 98px, 37px);\n}\n.bubble-5 {\n    @include bubble_hollow(5px, 116px, 20px);\n}\n.bubble-6 {\n    @include bubble(6px, 128px, 63px);\n}\n.bubble-7 {\n    @include bubble(27px, 150px, 52px);\n}\n.bubble-8 {\n    @include bubble(19px, 154px, 18px);\n}\n.bubble-9 {\n    @include bubble(10px, 189px, 13px);\n}\n.bubble-10 {\n    @include bubble_hollow(5px, 199px, 52px);\n}\n.bubble-11 {\n    @include bubble(21px, 220px, 29px);\n}\n.bubble-12 {\n    @include bubble(21px, 263px, 48px);\n}\n.bubble-13 {\n    @include bubble_hollow(5px, 275px, 16px);\n}\n.bubble-14 {\n    @include bubble(15px, 296px, 34px);\n}\n.triangle {\n    position: absolute;\n    background-color: rgba(0, 0, 0, 0.12);\n    border-color: rgba(0, 0, 0, 0.12);\n}\n.triangle-1 {\n    @include bubble_shape;\n    @include bubble(10px, 22px, 55px);\n}\n.triangle-2 {\n    @include triangle_hollow(16px, 14px, 27px, 15px);\n}\n.triangle-3 {\n    @include triangle_hollow(24px, 19px, 60px, 43px);\n}\n.triangle-4 {\n    @include bubble_shape(3px);\n    @include bubble_hollow(8px, 61px, 17px);\n}\n.triangle-5 {\n    @include triangle(10px, 8px, 101px, 25px);\n    transform: rotate(180deg);\n}\n\n.triangle-6 {\n    @include triangle(8px, 6px, 103px, 60px);\n    transform: rotate(-90deg);\n}\n\n.triangle-7 {\n    @include triangle(25px, 19px, 126px, 17px);\n    transform: rotate(180deg);\n}\n\n.triangle-8 {\n    @include triangle(21px, 16px, 149px, 50px);\n}\n\n.triangle-9 {\n    @include triangle(11px, 8px, 177px, 21px);\n}\n\n.triangle-10 {\n    @include bubble_shape;\n    @include bubble(10px, 177px, 60px);\n}\n\n.triangle-11 {\n    @include triangle(18px, 13px, 213px, 33px);\n    transform: rotate(180deg);\n}\n\n.triangle-12 {\n    @include bubble_shape(2px);\n    @include bubble_hollow(10px, 233px, 65px);\n}\n\n.triangle-13 {\n    @include bubble_shape;\n    @include bubble(10px, 250px, 22px);\n}\n\n.triangle-14 {\n    @include triangle_hollow(16px, 14px, 270px, 45px);\n    transform: rotate(180deg);\n}\n\n.stick {\n    .block {\n        position: absolute;\n        overflow: hidden;\n        z-index: 999;\n        border-radius: 7px;\n        .inner {\n            border-radius: 7px;\n            background-color: rgba(0, 0, 0, 0.12);\n            border-color: rgba(0, 0, 0, 0.12);\n            border-width: 3px;\n            height: 100%;\n            width: 100%;\n            position: absolute;\n        }\n        &:nth-child(2n+1) .inner-2 {\n            left: -200%;\n        }\n        &:nth-child(2n+2) .inner-2 {\n            left: 200%;\n        }\n    }\n    .block-1 {\n        @include block_hollow(16px, 31px, 16px, 30px);\n    }\n    .block-2 {\n        @include block(14px, 42px, 50px, 15px);\n    }\n    .block-3 {\n        @include block(18px, 9px, 73px, 64px);\n    }\n    .block-4 {\n        @include block(9px, 14px, 84px, 26px);\n    }\n    .block-5 {\n        @include block(15px, 15px, 109px, 45px);\n        .inner { \n            border-radius: 50%;\n        }\n    }\n    .block-6 {\n        @include block(9px, 27px, 135px, 19px);\n    }\n    .block-7 {\n        @include block(12px, 12px, 144px, 60px); \n        .inner { \n            border-radius: 50%;\n            border-style: solid;\n            box-sizing: border-box;\n            background-color: transparent;\n        }\n    }\n    .block-8 {\n        @include block(27px, 14px, 164px, 24px);\n    }\n    .block-9 {\n        @include block(8px, 8px, 188px, 64px);\n    }\n    .block-10 {\n        @include block_hollow(12px, 22px, 219px, 11px);\n    }\n    .block-11 {\n        @include block(22px, 22px, 226px, 50px);\n        .inner {\n            border-radius: 50%;\n        }\n    }\n    .block-12 {\n        @include block(18px, 9px, 248px, 26px);\n    }\n    .block-13 {\n        @include block(8px, 8px, 278px, 50px);\n        .inner {    \n            border-radius: 50%;\n        }\n    }\n    .block-14 {\n        @include block_hollow(12px, 22px, 297px, 18px);\n    }\n    .block-15 {\n        @include block(9px, 27px, 307px, 48px);\n    }\n}\n\nbody {\n    background-color: #28DAD4;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n    font-family: 'Roboto', sans-serif;\n}\na {\n    cursor: url(https://greghub.github.io/coloron/public/svg/cursor.svg), pointer;\n    &:focus, &:active {\n    cursor: url(https://greghub.github.io/coloron/public/svg/cursor-tap.svg), pointer;\n    }\n}\n.container {\n    position: fixed;\n    left: 0;\n    top: 0;\n    height: 100%;\n    width: 100%;\n}\n.waves, .mounts {\n    position: absolute;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n}\n.waves div, .mounts div {\n    position: absolute;\n    width: 100%;\n}\n.clouds {\n    position: absolute;\n    width: 100%;\n    left: 0;\n    top: 77px;\n    height: 151px;\n    background: url(https://greghub.github.io/coloron/public/svg/clouds.svg) repeat-x;\n    background-position-x: 170px; \n}\n.top_wave {\n    background: url(https://greghub.github.io/coloron/public/svg/top_wave.png) repeat-x 0 -1px;\n    height: 35px;\n    bottom: 0;\n    z-index: 10001;\n}\n.wave1 {\n    background: url(https://greghub.github.io/coloron/public/svg/wave1.svg) repeat-x;\n    height: 150px;\n    bottom: 0;\n    z-index: 23;\n}\n.wave2 {\n    background: url(https://greghub.github.io/coloron/public/svg/wave2.svg) repeat-x;\n    height: 180px;\n    bottom: 30px;\n    z-index: 22;\n}\n.wave3 {\n    background: url(https://greghub.github.io/coloron/public/svg/wave3.svg) repeat-x;\n    height: 180px;\n    bottom: 90px;\n    z-index: 21;\n}\n.wave4 {\n    background: url(https://greghub.github.io/coloron/public/svg/wave4.svg) repeat-x;\n    height: 180px;\n    bottom: 120px;\n    z-index: 20;\n}\n.mount1 {\n    background: url(https://greghub.github.io/coloron/public/svg/mount1.svg) repeat-x;\n    height: 150px;\n    bottom: 280px;\n    z-index: 11;\n}\n.mount2 {\n    background: url(https://greghub.github.io/coloron/public/svg/mount2.svg) repeat-x;\n    height: 150px;\n    bottom: 290px;\n    z-index: 10;\n}\n.noise {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    z-index: 1010;\n    background: url(https://greghub.github.io/coloron/public/svg/noise.png);\n}\n.glow {\n    position: absolute;\n    left: -350px;\n    top: -350px;\n    width: 800px;\n    height: 800px;\n    background-color: rgba(81, 237, 200, 0.34);\n    border-radius: 50%;\n    box-shadow: 0 0 100px 100px rgba(81, 237, 200, 0.34);\n    z-index: 1010;\n}\n.sun {\n    position: relative;\n    left: 50%;\n    top: 50%;\n    width: 1px;\n    height: 1px;\n    background-color: rgba(255, 227, 69, 1);\n    border-radius: 50%;\n    box-shadow: 0 0 32px 32px rgba(255, 227, 69, 1), \n                0 0 150px 150px rgba(103, 244, 210, 0.4);\n}\n.small-glow {\n    z-index: 99;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    position: absolute;\n    background-color: rgba(255, 255, 255, 0.34);\n    box-shadow: 0 0 1px 1px rgba(255, 255, 255, 0.34);\n}\n.small-glow.yellow {\n    background-color: rgba(255, 227, 69, 0.34);\n    box-shadow: 0 0 4px 4px rgba(255, 227, 69, 0.34);\n}\n.sticks {\n    z-index: 1011;\n    outline: none;\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\n}\n.stick {\n    height: 362px;\n    width: 90px;\n    border-radius: 14px;\n    background-image: url(https://greghub.github.io/coloron/public/svg/noise.png);\n    position: relative;\n    overflow: hidden;\n    float: left;\n    margin-right: 90px;\n    transition: background-color 0.4s ease;\n    cursor: url(https://greghub.github.io/coloron/public/svg/cursor.svg), pointer;\n    &:focus, &:active {\n        cursor: url(https://greghub.github.io/coloron/public/svg/cursor-tap.svg), pointer;\n    }\n}\n.stick.red {\n    background-color: #FF4571;\n}\n.stick.yellow {\n    background-color: #FFD145;\n}\n.stick.purple {\n    background-color: #8260F6;\n}\n.stick.inactive {\n    background-color: #4C4660;\n}\n.ball, .ball-demo {\n    background: url(https://greghub.github.io/coloron/public/svg/ball.svg) right bottom;\n    background-size: 64px 64px;\n    width: 53px;\n    height: 53px;\n    z-index: 1011;\n    background-color: #FF4571;\n    border-radius: 50%;\n}\n.ball {\n    margin-bottom: 250px;\n}\n.controls {\n    z-index: 999999;\n    position: relative\n}\n.game-full-flex {\n    position: fixed;\n    display: none; // gets updated to flex with JS\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    z-index: 9998;\n}\n.start-game {\n    .start-game-top {\n        min-height: 20%;\n        .play-full-page {\n            display: none;\n            border: 3px solid #fff;\n            border-radius: 100px;\n            color: #fff;\n            width: 260px;\n            height: 50px;\n            font-size: 28px;\n            text-align: center;\n            font-weight: 900;\n            letter-spacing: -1px;\n            line-height: 52px;\n            text-decoration: none;\n            text-transform: uppercase;\n            margin-top: 24px;\n            &:hover {\n                opacity: 0.7;\n            }\n        }\n    }\n    .logo-holder {\n        width: 513px;\n        height: 162px;\n        background-color: #4C4660;\n        border: 4px solid #FF4571;\n        border-radius: 68px;\n        text-align: center;\n        margin-top: -10%;\n        .logo {\n            color: #fff;\n            text-transform: uppercase;\n            font-weight: 900;\n            font-size: 100px;\n            letter-spacing: -0.1em;\n            margin-top: 10px;\n            margin-bottom: 4px;\n            text-align: center;\n            span {\n                margin-left: -8px;\n                margin-right: -8px;\n            }\n        }\n        .play-button {\n            display: inline-block;\n            background-color: #FF4571;\n            border: 4px solid #fff;\n            border-radius: 100px;\n            color: #fff;\n            width: 200px;\n            height: 56px;\n            font-size: 42px;\n            text-align: center;\n            font-weight: 900;\n            letter-spacing: -3px;\n            line-height: 56px;\n            text-decoration: none;\n            &:hover {\n                background-color: lighten(#FF4571, 5%);\n            }\n        }\n        .hint {\n            color: #fff;\n            font-size: 20px;\n            span {\n                color: #FF4571;\n            }\n        }\n    }\n    .how-to-play {\n        display: flex;\n        justify-content: space-around;\n        width: 100%;\n        .section-1, .section-3 {\n            flex: 1;\n            .content {\n                justify-content: center;\n            }\n        }\n        h4 {\n            color: #fff;\n            font-weight: 400;\n            font-size: 22px;\n            text-align: center;\n        }\n        .content {\n            height: 200px;\n            position: relative;\n            display: flex;\n            justify-content: space-around;\n        }\n        .bar {\n            width: 60px;\n            border-radius: 7px;\n            margin-top: auto;\n            transition: background-color 0.4s ease;\n            &.bar-1 {\n                height: 180px;\n                background: #FF4571;\n            }\n            &.bar-2 {\n                height: 120px;\n                background: #FFD145;\n            }\n            &.bar-3 {\n                height: 150px;\n                background: #4C4660;\n            }\n        }\n        .section-2 {\n            .bar {\n                cursor: url(https://greghub.github.io/coloron/public/svg/cursor.svg), pointer;\n                &:focus, &:active {\n                    cursor: url(https://greghub.github.io/coloron/public/svg/cursor-tap.svg), pointer;\n                }\n            }\n        }\n        .section-3 {\n            .ball-demo {\n                background-color: #815FF8;\n            }\n            .bar-1 {\n                height: 120px;\n                background-color: #815FF8;\n            }\n        }\n    }\n}\n.stop-game {\n    justify-content: center;\n    .score-container {\n        background-color: #4C4660;\n        width: 433px;\n        height: 386px;\n        border-radius: 38px;\n        text-align: center;\n        h1 {\n            color: #fff;\n            text-transform: uppercase;\n            letter-spacing: -0.1em;\n            margin-top: 20px;\n            margin-bottom: 4px;\n            font-size: 64px;\n        }\n        .final-score {\n            color: #FFE345;\n            font-weight: 900;\n            font-size: 130px;\n            letter-spacing: -6px;\n            line-height: 110px;\n        }\n        .result {\n            color: #FF4571;\n            text-transform: uppercase;\n            font-weight: 700;\n            font-size: 30px;\n        }\n        h4 {\n            color: #fff;\n            margin-top: 12px;\n        }\n        .tweet {\n            background: #fff;\n            padding: 8px 20px;\n            border-radius: 4px;\n            color: #55ACEE;\n            text-decoration: none;\n            font-size: 18px;\n            line-height: 24px;\n            display: inline-block;\n            &:hover {\n                background-color: #55ACEE;\n                color: #fff;\n            }\n            i {\n                font-size: 24px;\n                top: 2px;\n                right: 2px;\n                position: relative;\n            }\n        }\n        .play-again {\n            background-color: #FF4571;\n            border: 2px solid #fff;\n            color: #fff;\n            text-decoration: none;\n            text-transform: uppercase;\n            font-weight: 900;\n            letter-spacing: -1px;\n            font-size: 26px;\n            padding: 6px 24px;\n            border-radius: 22px;\n            margin: 6px 4px;\n            display: inline-block;\n            &:hover {\n                background-color: lighten(#FF4571, 5%);\n            }\n        }\n        .main-menu {\n            background-color: #44BFA3;\n            border: 2px solid #fff;\n            color: #fff;\n            text-decoration: none;\n            text-transform: uppercase;\n            font-weight: 900;\n            letter-spacing: -1px;\n            font-size: 26px;\n            padding: 6px 24px;\n            border-radius: 22px;\n            margin: 6px 4px;\n            display: inline-block;\n            &:hover {\n                background-color: lighten(#44BFA3, 5%);\n            }\n        }\n    }\n}\n.scene {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: fixed;\n    z-index: 9997;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    .ball-holder {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-end;\n        padding-left: 558px;\n    }\n    .score {\n        position: fixed;\n        right: 54px;\n        top: 20px;\n        color: #33485F;\n        font-size: 90px;\n        font-weight: 900;\n        letter-spacing: -0.1em;\n    }\n    .learn-to-play {    \n        z-index: 9999;\n        display: inline-block;\n        text-align: center;\n        position: relative;\n        top: 20%;\n        font-size: 48px;\n        color: rgba(255,255,255,0.85);\n        font-weight: 700;\n        letter-spacing: -2px;\n        opacity: 0;\n    }\n}\n\n.splash {\n  display: none;\n}\n\n@media print {\n  .splash {\n    display: block;\n    position: fixed;\n    z-index: 99999;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: #28DAD4;\n    background-image: url(https://greghub.github.io/coloron/public/images/coloron-image.png);\n    background-size: auto 100%;\n    background-repeat: no-repeat;\n    background-position: center;\n  } \n}\n\n.nominee {\n  position: fixed;\n  right: 0;\n  top: 0;\n  z-index: 9999;\n}</style>"},{"type":"Game","title":"Menja","desc":"Menja is a Web Game based on vanilla js","author":"Caleb Miller","src":"/assets/media/apps/external/menja.png","id":"MenjaARQV8U1A84","batch":"","content":"<!-- Game canvas -->\n<canvas id=\"c\"></canvas>\n\n<!-- Gameplay HUD -->\n<div class=\"hud\">\n\t<div class=\"hud__score\">\n\t\t<div class=\"score-lbl\"></div>\n\t\t<div class=\"cube-count-lbl\"></div>\n\t</div>\n\t<div class=\"pause-btn\"><div></div></div>\n\t<div class=\"slowmo\">\n\t\t<div class=\"slowmo__bar\"></div>\n\t</div>\n</div>\n\n<!-- Menu System -->\n<div class=\"menus\">\n\t<div class=\"menu menu--main\">\n\t\t<h1>MENJA</h1>\n\t\t<button type=\"button\" class=\"play-normal-btn\">PLAY GAME</button>\n\t\t<button type=\"button\" class=\"play-casual-btn\">CASUAL MODE</button>\n\t\t<div class=\"credits\">An 8kB game by <a href=\"https://cmiller.tech\">Caleb Miller</a></div>\n\t</div>\n\t<div class=\"menu menu--pause\">\n\t\t<h1>Paused</h1>\n\t\t<button type=\"button\" class=\"resume-btn\">RESUME GAME</button>\n\t\t<button type=\"button\" class=\"menu-btn--pause\">MAIN MENU</button>\n\t</div>\n\t<div class=\"menu menu--score\">\n\t\t<h1>Game Over</h1>\n\t\t<h2>Your Score:</h2>\n\t\t<div class=\"final-score-lbl\"></div>\n\t\t<div class=\"high-score-lbl\"></div>\n\t\t<button type=\"button\" class=\"play-again-btn\">PLAY AGAIN</button>\n\t\t<button type=\"button\" class=\"menu-btn--score\">MAIN MENU</button>\n\t</div>\n</div>\n<script type=\"text/javascript\">\n// globalConfig.js\n// ============================================================================\n// ============================================================================\n\n// Provides global variables used by the entire program.\n// Most of this should be configuration.\n\n// Timing multiplier for entire game engine.\nlet gameSpeed = 1;\n\n// Colors\nconst BLUE =   { r: 0x67, g: 0xd7, b: 0xf0 };\nconst GREEN =  { r: 0xa6, g: 0xe0, b: 0x2c };\nconst PINK =   { r: 0xfa, g: 0x24, b: 0x73 };\nconst ORANGE = { r: 0xfe, g: 0x95, b: 0x22 };\nconst allColors = [BLUE, GREEN, PINK, ORANGE];\n\n// Gameplay\nconst getSpawnDelay = () => {\n\tconst spawnDelayMax = 1400;\n\tconst spawnDelayMin = 550;\n\tconst spawnDelay = spawnDelayMax - state.game.cubeCount * 3.1;\n\treturn Math.max(spawnDelay, spawnDelayMin);\n}\nconst doubleStrongEnableScore = 2000;\n// Number of cubes that must be smashed before activating a feature.\nconst slowmoThreshold = 10;\nconst strongThreshold = 25;\nconst spinnerThreshold = 25;\n\n// Interaction state\nlet pointerIsDown = false;\n// The last known position of the primary pointer in screen coordinates.`\nlet pointerScreen = { x: 0, y: 0 };\n// Same as `pointerScreen`, but converted to scene coordinates in rAF.\nlet pointerScene = { x: 0, y: 0 };\n// Minimum speed of pointer before \"hits\" are counted.\nconst minPointerSpeed = 60;\n// The hit speed affects the direction the target post-hit. This number dampens that force.\nconst hitDampening = 0.1;\n// Backboard receives shadows and is the farthest negative Z position of entities.\nconst backboardZ = -400;\nconst shadowColor = '#262e36';\n// How much air drag is applied to standard objects\nconst airDrag = 0.022;\nconst gravity = 0.3;\n// Spark config\nconst sparkColor = 'rgba(170,221,255,.9)';\nconst sparkThickness = 2.2;\nconst airDragSpark = 0.1;\n// Track pointer positions to show trail\nconst touchTrailColor = 'rgba(170,221,255,.62)';\nconst touchTrailThickness = 7;\nconst touchPointLife = 120;\nconst touchPoints = [];\n// Size of in-game targets. This affects rendered size and hit area.\nconst targetRadius = 40;\nconst targetHitRadius = 50;\nconst makeTargetGlueColor = target => {\n\t// const alpha = (target.health - 1) / (target.maxHealth - 1);\n\t// return `rgba(170,221,255,${alpha.toFixed(3)})`;\n\treturn 'rgb(170,221,255)';\n};\n// Size of target fragments\nconst fragRadius = targetRadius / 3;\n\n\n\n// Game canvas element needed in setup.js and interaction.js\nconst canvas = document.querySelector('#c');\n\n// 3D camera config\n// Affects perspective\nconst cameraDistance = 900;\n// Does not affect perspective\nconst sceneScale = 1;\n// Objects that get too close to the camera will be faded out to transparent over this range.\n// const cameraFadeStartZ = 0.8*cameraDistance - 6*targetRadius;\nconst cameraFadeStartZ = 0.45*cameraDistance;\nconst cameraFadeEndZ = 0.65*cameraDistance;\nconst cameraFadeRange = cameraFadeEndZ - cameraFadeStartZ;\n\n// Globals used to accumlate all vertices/polygons in each frame\nconst allVertices = [];\nconst allPolys = [];\nconst allShadowVertices = [];\nconst allShadowPolys = [];\n\n\n\n\n// state.js\n// ============================================================================\n// ============================================================================\n\n///////////\n// Enums //\n///////////\n\n// Game Modes\nconst GAME_MODE_RANKED = Symbol('GAME_MODE_RANKED');\nconst GAME_MODE_CASUAL = Symbol('GAME_MODE_CASUAL');\n\n// Available Menus\nconst MENU_MAIN = Symbol('MENU_MAIN');\nconst MENU_PAUSE = Symbol('MENU_PAUSE');\nconst MENU_SCORE = Symbol('MENU_SCORE');\n\n\n\n//////////////////\n// Global State //\n//////////////////\n\nconst state = {\n\tgame: {\n\t\tmode: GAME_MODE_RANKED,\n\t\t// Run time of current game.\n\t\ttime: 0,\n\t\t// Player score.\n\t\tscore: 0,\n\t\t// Total number of cubes smashed in game.\n\t\tcubeCount: 0\n\t},\n\tmenus: {\n\t\t// Set to `null` to hide all menus\n\t\tactive: MENU_MAIN\n\t}\n};\n\n\n////////////////////////////\n// Global State Selectors //\n////////////////////////////\n\nconst isInGame = () => !state.menus.active;\nconst isMenuVisible = () => !!state.menus.active;\nconst isCasualGame = () => state.game.mode === GAME_MODE_CASUAL;\nconst isPaused = () => state.menus.active === MENU_PAUSE;\n\n\n///////////////////\n// Local Storage //\n///////////////////\n\nconst highScoreKey = '__menja__highScore';\nconst getHighScore = () => {\n\tconst raw = localStorage.getItem(highScoreKey);\n\treturn raw ? parseInt(raw, 10) : 0;\n};\n\nlet _lastHighscore = getHighScore();\nconst setHighScore = score => {\n\t_lastHighscore = getHighScore();\n\tlocalStorage.setItem(highScoreKey, String(score));\n};\n\nconst isNewHighScore = () => state.game.score > _lastHighscore;\n\n\n\n\n// utils.js\n// ============================================================================\n// ============================================================================\n\n\nconst invariant = (condition, message) => {\n\tif (!condition) throw new Error(message);\n};\n\n\n/////////\n// DOM //\n/////////\n\nconst $ = selector => document.querySelector(selector);\nconst handleClick = (element, handler) => element.addEventListener('click', handler);\nconst handlePointerDown = (element, handler) => {\n\telement.addEventListener('touchstart', handler);\n\telement.addEventListener('mousedown', handler);\n};\n\n\n\n////////////////////////\n// Formatting Helpers //\n////////////////////////\n\n// Converts a number into a formatted string with thousand separators.\nconst formatNumber = num => num.toLocaleString();\n\n\n\n////////////////////\n// Math Constants //\n////////////////////\n\nconst PI = Math.PI;\nconst TAU = Math.PI * 2;\nconst ETA = Math.PI * 0.5;\n\n\n\n//////////////////\n// Math Helpers //\n//////////////////\n\n// Clamps a number between min and max values (inclusive)\nconst clamp = (num, min, max) => Math.min(Math.max(num, min), max);\n\n// Linearly interpolate between numbers a and b by a specific amount.\n// mix >= 0 && mix <= 1\nconst lerp = (a, b, mix) => (b - a) * mix + a;\n\n\n\n\n////////////////////\n// Random Helpers //\n////////////////////\n\n// Generates a random number between min (inclusive) and max (exclusive)\nconst random = (min, max) => Math.random() * (max - min) + min;\n\n// Generates a random integer between and possibly including min and max values\nconst randomInt = (min, max) => ((Math.random() * (max - min + 1)) | 0) + min;\n\n// Returns a random element from an array\nconst pickOne = arr => arr[Math.random() * arr.length | 0];\n\n\n\n\n///////////////////\n// Color Helpers //\n///////////////////\n\n// Converts an { r, g, b } color object to a 6-digit hex code.\nconst colorToHex = color => {\n\treturn '#' +\n\t\t(color.r | 0).toString(16).padStart(2, '0') +\n\t\t(color.g | 0).toString(16).padStart(2, '0') +\n\t\t(color.b | 0).toString(16).padStart(2, '0');\n};\n\n// Operates on an { r, g, b } color object.\n// Returns string hex code.\n// `lightness` must range from 0 to 1. 0 is pure black, 1 is pure white.\nconst shadeColor = (color, lightness) => {\n\tlet other, mix;\n\tif (lightness < 0.5) {\n\t\tother = 0;\n\t\tmix = 1 - (lightness * 2);\n\t} else {\n\t\tother = 255;\n\t\tmix = lightness * 2 - 1;\n\t}\n\treturn '#' +\n\t\t(lerp(color.r, other, mix) | 0).toString(16).padStart(2, '0') +\n\t\t(lerp(color.g, other, mix) | 0).toString(16).padStart(2, '0') +\n\t\t(lerp(color.b, other, mix) | 0).toString(16).padStart(2, '0');\n};\n\n\n\n\n\n////////////////////\n// Timing Helpers //\n////////////////////\n\nconst _allCooldowns = [];\n\nconst makeCooldown = (rechargeTime, units=1) => {\n\tlet timeRemaining = 0;\n\tlet lastTime = 0;\n\n\tconst initialOptions = { rechargeTime, units };\n\n\tconst updateTime = () => {\n\t\tconst now = state.game.time;\n\t\t// Reset time remaining if time goes backwards.\n\t\tif (now < lastTime) {\n\t\t\ttimeRemaining = 0;\n\t\t} else {\n\t\t\t// update...\n\t\t\ttimeRemaining -= now-lastTime;\n\t\t\tif (timeRemaining < 0) timeRemaining = 0;\n\t\t}\n\t\tlastTime = now;\n\t};\n\n\tconst canUse = () => {\n\t\tupdateTime();\n\t\treturn timeRemaining <= (rechargeTime * (units-1));\n\t};\n\n\tconst cooldown = {\n\t\tcanUse,\n\t\tuseIfAble() {\n\t\t\tconst usable = canUse();\n\t\t\tif (usable) timeRemaining += rechargeTime;\n\t\t\treturn usable;\n\t\t},\n\t\tmutate(options) {\n\t\t\tif (options.rechargeTime) {\n\t\t\t\t// Apply recharge time delta so change takes effect immediately.\n\t\t\t\ttimeRemaining -= rechargeTime-options.rechargeTime;\n\t\t\t\tif (timeRemaining < 0) timeRemaining = 0;\n\t\t\t\trechargeTime = options.rechargeTime;\n\t\t\t}\n\t\t\tif (options.units) units = options.units;\n\t\t},\n\t\treset() {\n\t\t\ttimeRemaining = 0;\n\t\t\tlastTime = 0;\n\t\t\tthis.mutate(initialOptions);\n\t\t}\n\t};\n\n\t_allCooldowns.push(cooldown);\n\n\treturn cooldown;\n};\n\nconst resetAllCooldowns = () => _allCooldowns.forEach(cooldown => cooldown.reset());\n\nconst makeSpawner = ({ chance, cooldownPerSpawn, maxSpawns }) => {\n\tconst cooldown = makeCooldown(cooldownPerSpawn, maxSpawns);\n\treturn {\n\t\tshouldSpawn() {\n\t\t\treturn Math.random() <= chance && cooldown.useIfAble();\n\t\t},\n\t\tmutate(options) {\n\t\t\tif (options.chance) chance = options.chance;\n\t\t\tcooldown.mutate({\n\t\t\t\trechargeTime: options.cooldownPerSpawn,\n\t\t\t\tunits: options.maxSpawns\n\t\t\t});\n\t\t}\n\t};\n};\n\n\n\n\n////////////////////\n// Vector Helpers //\n////////////////////\n\nconst normalize = v => {\n\tconst mag = Math.hypot(v.x, v.y, v.z);\n\treturn {\n\t\tx: v.x / mag,\n\t\ty: v.y / mag,\n\t\tz: v.z / mag\n\t};\n}\n\n// Curried math helpers\nconst add = a => b => a + b;\n// Curried vector helpers\nconst scaleVector = scale => vector => {\n\tvector.x *= scale;\n\tvector.y *= scale;\n\tvector.z *= scale;\n};\n\n\n\n\n\n\n\n\n////////////////\n// 3D Helpers //\n////////////////\n\n// Clone array and all vertices.\nfunction cloneVertices(vertices) {\n\treturn vertices.map(v => ({ x: v.x, y: v.y, z: v.z }));\n}\n\n// Copy vertex data from one array into another.\n// Arrays must be the same length.\nfunction copyVerticesTo(arr1, arr2) {\n\tconst len = arr1.length;\n\tfor (let i=0; i<len; i++) {\n\t\tconst v1 = arr1[i];\n\t\tconst v2 = arr2[i];\n\t\tv2.x = v1.x;\n\t\tv2.y = v1.y;\n\t\tv2.z = v1.z;\n\t}\n}\n\n// Compute triangle midpoint.\n// Mutates `middle` property of given `poly`.\nfunction computeTriMiddle(poly) {\n\tconst v = poly.vertices;\n\tpoly.middle.x = (v[0].x + v[1].x + v[2].x) / 3;\n\tpoly.middle.y = (v[0].y + v[1].y + v[2].y) / 3;\n\tpoly.middle.z = (v[0].z + v[1].z + v[2].z) / 3;\n}\n\n// Compute quad midpoint.\n// Mutates `middle` property of given `poly`.\nfunction computeQuadMiddle(poly) {\n\tconst v = poly.vertices;\n\tpoly.middle.x = (v[0].x + v[1].x + v[2].x + v[3].x) / 4;\n\tpoly.middle.y = (v[0].y + v[1].y + v[2].y + v[3].y) / 4;\n\tpoly.middle.z = (v[0].z + v[1].z + v[2].z + v[3].z) / 4;\n}\n\nfunction computePolyMiddle(poly) {\n\tif (poly.vertices.length === 3) {\n\t\tcomputeTriMiddle(poly);\n\t} else {\n\t\tcomputeQuadMiddle(poly);\n\t}\n}\n\n// Compute distance from any polygon (tri or quad) midpoint to camera.\n// Sets `depth` property of given `poly`.\n// Also triggers midpoint calculation, which mutates `middle` property of `poly`.\nfunction computePolyDepth(poly) {\n\tcomputePolyMiddle(poly);\n\tconst dX = poly.middle.x;\n\tconst dY = poly.middle.y;\n\tconst dZ = poly.middle.z - cameraDistance;\n\tpoly.depth = Math.hypot(dX, dY, dZ);\n}\n\n// Compute normal of any polygon. Uses normalized vector cross product.\n// Mutates `normalName` property of given `poly`.\nfunction computePolyNormal(poly, normalName) {\n\t// Store quick refs to vertices\n\tconst v1 = poly.vertices[0];\n\tconst v2 = poly.vertices[1];\n\tconst v3 = poly.vertices[2];\n\t// Calculate difference of vertices, following winding order.\n\tconst ax = v1.x - v2.x;\n\tconst ay = v1.y - v2.y;\n\tconst az = v1.z - v2.z;\n\tconst bx = v1.x - v3.x;\n\tconst by = v1.y - v3.y;\n\tconst bz = v1.z - v3.z;\n\t// Cross product\n\tconst nx = ay*bz - az*by;\n\tconst ny = az*bx - ax*bz;\n\tconst nz = ax*by - ay*bx;\n\t// Compute magnitude of normal and normalize\n\tconst mag = Math.hypot(nx, ny, nz);\n\tconst polyNormal = poly[normalName];\n\tpolyNormal.x = nx / mag;\n\tpolyNormal.y = ny / mag;\n\tpolyNormal.z = nz / mag;\n}\n\n// Apply translation/rotation/scale to all given vertices.\n// If `vertices` and `target` are the same array, the vertices will be mutated in place.\n// If `vertices` and `target` are different arrays, `vertices` will not be touched, instead the\n// transformed values from `vertices` will be written to `target` array.\nfunction transformVertices(vertices, target, tX, tY, tZ, rX, rY, rZ, sX, sY, sZ) {\n\t// Matrix multiplcation constants only need calculated once for all vertices.\n\tconst sinX = Math.sin(rX);\n\tconst cosX = Math.cos(rX);\n\tconst sinY = Math.sin(rY);\n\tconst cosY = Math.cos(rY);\n\tconst sinZ = Math.sin(rZ);\n\tconst cosZ = Math.cos(rZ);\n\n\t// Using forEach() like map(), but with a (recycled) target array.\n\tvertices.forEach((v, i) => {\n\t\tconst targetVertex = target[i];\n\t\t// X axis rotation\n\t\tconst x1 = v.x;\n\t\tconst y1 = v.z*sinX + v.y*cosX;\n\t\tconst z1 = v.z*cosX - v.y*sinX;\n\t\t// Y axis rotation\n\t\tconst x2 = x1*cosY - z1*sinY;\n\t\tconst y2 = y1;\n\t\tconst z2 = x1*sinY + z1*cosY;\n\t\t// Z axis rotation\n\t\tconst x3 = x2*cosZ - y2*sinZ;\n\t\tconst y3 = x2*sinZ + y2*cosZ;\n\t\tconst z3 = z2;\n\n\t\t// Scale, Translate, and set the transform.\n\t\ttargetVertex.x = x3 * sX + tX;\n\t\ttargetVertex.y = y3 * sY + tY;\n\t\ttargetVertex.z = z3 * sZ + tZ;\n\t});\n}\n\n// 3D projection on a single vertex.\n// Directly mutates the vertex.\nconst projectVertex = v => {\n\tconst focalLength = cameraDistance * sceneScale;\n\tconst depth = focalLength / (cameraDistance - v.z);\n\tv.x = v.x * depth;\n\tv.y = v.y * depth;\n};\n\n// 3D projection on a single vertex.\n// Mutates a secondary target vertex.\nconst projectVertexTo = (v, target) => {\n\tconst focalLength = cameraDistance * sceneScale;\n\tconst depth = focalLength / (cameraDistance - v.z);\n\ttarget.x = v.x * depth;\n\ttarget.y = v.y * depth;\n};\n\n\n\n\n\n// PERF.js\n// ============================================================================\n// ============================================================================\n\n// Dummy no-op functions.\n// I use these in a special build for custom performance profiling.\nconst PERF_START = () => {};\nconst PERF_END = () => {};\nconst PERF_UPDATE = () => {};\n\n\n\n\n// 3dModels.js\n// ============================================================================\n// ============================================================================\n\n// Define models once. The origin is the center of the model.\n\n// A simple cube, 8 vertices, 6 quads.\n// Defaults to an edge length of 2 units, can be influenced with `scale`.\nfunction makeCubeModel({ scale=1 }) {\n\treturn {\n\t\tvertices: [\n\t\t\t// top\n\t\t\t{ x: -scale, y: -scale, z: scale },\n\t\t\t{ x:  scale, y: -scale, z: scale },\n\t\t\t{ x:  scale, y:  scale, z: scale },\n\t\t\t{ x: -scale, y:  scale, z: scale },\n\t\t\t// bottom\n\t\t\t{ x: -scale, y: -scale, z: -scale },\n\t\t\t{ x:  scale, y: -scale, z: -scale },\n\t\t\t{ x:  scale, y:  scale, z: -scale },\n\t\t\t{ x: -scale, y:  scale, z: -scale }\n\t\t],\n\t\tpolys: [\n\t\t\t// z = 1\n\t\t\t{ vIndexes: [0, 1, 2, 3] },\n\t\t\t// z = -1\n\t\t\t{ vIndexes: [7, 6, 5, 4] },\n\t\t\t// y = 1\n\t\t\t{ vIndexes: [3, 2, 6, 7] },\n\t\t\t// y = -1\n\t\t\t{ vIndexes: [4, 5, 1, 0] },\n\t\t\t// x = 1\n\t\t\t{ vIndexes: [5, 6, 2, 1] },\n\t\t\t// x = -1\n\t\t\t{ vIndexes: [0, 3, 7, 4] }\n\t\t]\n\t};\n}\n\n// Not very optimized - lots of duplicate vertices are generated.\nfunction makeRecursiveCubeModel({ recursionLevel, splitFn, color, scale=1 }) {\n\tconst getScaleAtLevel = level => 1 / (3 ** level);\n\n\t// We can model level 0 manually. It's just a single, centered, cube.\n\tlet cubeOrigins = [{ x: 0, y: 0, z: 0 }];\n\n\t// Recursively replace cubes with smaller cubes.\n\tfor (let i=1; i<=recursionLevel; i++) {\n\t\tconst scale = getScaleAtLevel(i) * 2;\n\t\tconst cubeOrigins2 = [];\n\t\tcubeOrigins.forEach(origin => {\n\t\t\tcubeOrigins2.push(...splitFn(origin, scale));\n\t\t});\n\t\tcubeOrigins = cubeOrigins2;\n\t}\n\n\tconst finalModel = { vertices: [], polys: [] };\n\n\t// Generate single cube model and scale it.\n\tconst cubeModel = makeCubeModel({ scale: 1 });\n\tcubeModel.vertices.forEach(scaleVector(getScaleAtLevel(recursionLevel)));\n\n\t// Compute the max distance x, y, or z origin values will be.\n\t// Same result as `Math.max(...cubeOrigins.map(o => o.x))`, but much faster.\n\tconst maxComponent = getScaleAtLevel(recursionLevel) * (3 ** recursionLevel - 1);\n\n\t// Place cube geometry at each origin.\n\tcubeOrigins.forEach((origin, cubeIndex) => {\n\t\t// To compute occlusion (shading), find origin component with greatest\n\t\t// magnitude and normalize it relative to `maxComponent`.\n\t\tconst occlusion = Math.max(\n\t\t\tMath.abs(origin.x),\n\t\t\tMath.abs(origin.y),\n\t\t\tMath.abs(origin.z)\n\t\t) / maxComponent;\n\t\t// At lower iterations, occlusion looks better lightened up a bit.\n\t\tconst occlusionLighter = recursionLevel > 2\n\t\t\t? occlusion\n\t\t\t: (occlusion + 0.8) / 1.8;\n\t\t// Clone, translate vertices to origin, and apply scale\n\t\tfinalModel.vertices.push(\n\t\t\t...cubeModel.vertices.map(v => ({\n\t\t\t\tx: (v.x + origin.x) * scale,\n\t\t\t\ty: (v.y + origin.y) * scale,\n\t\t\t\tz: (v.z + origin.z) * scale\n\t\t\t}))\n\t\t);\n\t\t// Clone polys, shift referenced vertex indexes, and compute color.\n\t\tfinalModel.polys.push(\n\t\t\t...cubeModel.polys.map(poly => ({\n\t\t\t\tvIndexes: poly.vIndexes.map(add(cubeIndex * 8))\n\t\t\t}))\n\t\t);\n\t});\n\n\treturn finalModel;\n}\n\n\n// o: Vector3D - Position of cube's origin (center).\n// s: Vector3D - Determines size of menger sponge.\nfunction mengerSpongeSplit(o, s) {\n\treturn [\n\t\t// Top\n\t\t{ x: o.x + s, y: o.y - s, z: o.z + s },\n\t\t{ x: o.x + s, y: o.y - s, z: o.z + 0 },\n\t\t{ x: o.x + s, y: o.y - s, z: o.z - s },\n\t\t{ x: o.x + 0, y: o.y - s, z: o.z + s },\n\t\t{ x: o.x + 0, y: o.y - s, z: o.z - s },\n\t\t{ x: o.x - s, y: o.y - s, z: o.z + s },\n\t\t{ x: o.x - s, y: o.y - s, z: o.z + 0 },\n\t\t{ x: o.x - s, y: o.y - s, z: o.z - s },\n\t\t// Bottom\n\t\t{ x: o.x + s, y: o.y + s, z: o.z + s },\n\t\t{ x: o.x + s, y: o.y + s, z: o.z + 0 },\n\t\t{ x: o.x + s, y: o.y + s, z: o.z - s },\n\t\t{ x: o.x + 0, y: o.y + s, z: o.z + s },\n\t\t{ x: o.x + 0, y: o.y + s, z: o.z - s },\n\t\t{ x: o.x - s, y: o.y + s, z: o.z + s },\n\t\t{ x: o.x - s, y: o.y + s, z: o.z + 0 },\n\t\t{ x: o.x - s, y: o.y + s, z: o.z - s },\n\t\t// Middle\n\t\t{ x: o.x + s, y: o.y + 0, z: o.z + s },\n\t\t{ x: o.x + s, y: o.y + 0, z: o.z - s },\n\t\t{ x: o.x - s, y: o.y + 0, z: o.z + s },\n\t\t{ x: o.x - s, y: o.y + 0, z: o.z - s }\n\t];\n}\n\n\n\n// Helper to optimize models by merging duplicate vertices within a threshold,\n// and removing all polys that share the same vertices.\n// Directly mutates the model.\nfunction optimizeModel(model, threshold=0.0001) {\n\tconst { vertices, polys } = model;\n\n\tconst compareVertices = (v1, v2) => (\n\t\tMath.abs(v1.x - v2.x) < threshold &&\n\t\tMath.abs(v1.y - v2.y) < threshold &&\n\t\tMath.abs(v1.z - v2.z) < threshold\n\t);\n\n\tconst comparePolys = (p1, p2) => {\n\t\tconst v1 = p1.vIndexes;\n\t\tconst v2 = p2.vIndexes;\n\t\treturn (\n\t\t\t(\n\t\t\t\tv1[0] === v2[0] ||\n\t\t\t\tv1[0] === v2[1] ||\n\t\t\t\tv1[0] === v2[2] ||\n\t\t\t\tv1[0] === v2[3]\n\t\t\t) && (\n\t\t\t\tv1[1] === v2[0] ||\n\t\t\t\tv1[1] === v2[1] ||\n\t\t\t\tv1[1] === v2[2] ||\n\t\t\t\tv1[1] === v2[3]\n\t\t\t) && (\n\t\t\t\tv1[2] === v2[0] ||\n\t\t\t\tv1[2] === v2[1] ||\n\t\t\t\tv1[2] === v2[2] ||\n\t\t\t\tv1[2] === v2[3]\n\t\t\t) && (\n\t\t\t\tv1[3] === v2[0] ||\n\t\t\t\tv1[3] === v2[1] ||\n\t\t\t\tv1[3] === v2[2] ||\n\t\t\t\tv1[3] === v2[3]\n\t\t\t)\n\t\t);\n\t};\n\n\n\tvertices.forEach((v, i) => {\n\t\tv.originalIndexes = [i];\n\t});\n\n\tfor (let i=vertices.length-1; i>=0; i--) {\n\t\tfor (let ii=i-1; ii>=0; ii--) {\n\t\t\tconst v1 = vertices[i];\n\t\t\tconst v2 = vertices[ii];\n\t\t\tif (compareVertices(v1, v2)) {\n\t\t\t\tvertices.splice(i, 1);\n\t\t\t\tv2.originalIndexes.push(...v1.originalIndexes);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tvertices.forEach((v, i) => {\n\t\tpolys.forEach(p => {\n\t\t\tp.vIndexes.forEach((vi, ii, arr) => {\n\t\t\t\tconst vo = v.originalIndexes;\n\t\t\t\tif (vo.includes(vi)) {\n\t\t\t\t\tarr[ii] = i;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\tpolys.forEach(p => {\n\t\tconst vi = p.vIndexes;\n\t\tp.sum = vi[0] + vi[1] + vi[2] + vi[3];\n\t});\n\tpolys.sort((a, b) => b.sum - a.sum);\n\n\t// Assumptions:\n\t// 1. Each poly will either have no duplicates or 1 duplicate.\n\t// 2. If two polys are equal, they are both hidden (two cubes touching),\n\t//    therefore both can be removed.\n\tfor (let i=polys.length-1; i>=0; i--) {\n\t\tfor (let ii=i-1; ii>=0; ii--) {\n\t\t\tconst p1 = polys[i];\n\t\t\tconst p2 = polys[ii];\n\t\t\tif (p1.sum !== p2.sum) break;\n\t\t\tif (comparePolys(p1, p2)) {\n\t\t\t\tpolys.splice(i, 1);\n\t\t\t\tpolys.splice(ii, 1);\n\t\t\t\ti--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn model;\n}\n\n\n\n\n\n// Entity.js\n// ============================================================================\n// ============================================================================\n\nclass Entity {\n\tconstructor({ model, color, wireframe=false }) {\n\t\tconst vertices = cloneVertices(model.vertices);\n\t\tconst shadowVertices = cloneVertices(model.vertices);\n\t\tconst colorHex = colorToHex(color);\n\t\tconst darkColorHex = shadeColor(color, 0.4);\n\n\t\tconst polys = model.polys.map(p => ({\n\t\t\tvertices: p.vIndexes.map(vIndex => vertices[vIndex]),\n\t\t\tcolor: color, // custom rgb color object\n\t\t\twireframe: wireframe,\n\t\t\tstrokeWidth: wireframe ? 2 : 0, // Set to non-zero value to draw stroke\n\t\t\tstrokeColor: colorHex, // must be a CSS color string\n\t\t\tstrokeColorDark: darkColorHex, // must be a CSS color string\n\t\t\tdepth: 0,\n\t\t\tmiddle: { x: 0, y: 0, z: 0 },\n\t\t\tnormalWorld: { x: 0, y: 0, z: 0 },\n\t\t\tnormalCamera: { x: 0, y: 0, z: 0 }\n\t\t}));\n\n\t\tconst shadowPolys = model.polys.map(p => ({\n\t\t\tvertices: p.vIndexes.map(vIndex => shadowVertices[vIndex]),\n\t\t\twireframe: wireframe,\n\t\t\tnormalWorld: { x: 0, y: 0, z: 0 }\n\t\t}));\n\n\t\tthis.projected = {}; // Will store 2D projected data\n\t\tthis.model = model;\n\t\tthis.vertices = vertices;\n\t\tthis.polys = polys;\n\t\tthis.shadowVertices = shadowVertices;\n\t\tthis.shadowPolys = shadowPolys;\n\t\tthis.reset();\n\t}\n\n\t// Better names: resetEntity, resetTransform, resetEntityTransform\n\treset() {\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\t\tthis.xD = 0;\n\t\tthis.yD = 0;\n\t\tthis.zD = 0;\n\n\t\tthis.rotateX = 0;\n\t\tthis.rotateY = 0;\n\t\tthis.rotateZ = 0;\n\t\tthis.rotateXD = 0;\n\t\tthis.rotateYD = 0;\n\t\tthis.rotateZD = 0;\n\n\t\tthis.scaleX = 1;\n\t\tthis.scaleY = 1;\n\t\tthis.scaleZ = 1;\n\n\t\tthis.projected.x = 0;\n\t\tthis.projected.y = 0;\n\t}\n\n\ttransform() {\n\t\ttransformVertices(\n\t\t\tthis.model.vertices,\n\t\t\tthis.vertices,\n\t\t\tthis.x,\n\t\t\tthis.y,\n\t\t\tthis.z,\n\t\t\tthis.rotateX,\n\t\t\tthis.rotateY,\n\t\t\tthis.rotateZ,\n\t\t\tthis.scaleX,\n\t\t\tthis.scaleY,\n\t\t\tthis.scaleZ\n\t\t);\n\n\t\tcopyVerticesTo(this.vertices, this.shadowVertices);\n\t}\n\n\t// Projects origin point, stored as `projected` property.\n\tproject() {\n\t\tprojectVertexTo(this, this.projected);\n\t}\n}\n\n\n\n\n\n// getTarget.js\n// ============================================================================\n// ============================================================================\n\n// All active targets\nconst targets = [];\n\n// Pool target instances by color, using a Map.\n// keys are color objects, and values are arrays of targets.\n// Also pool wireframe instances separately.\nconst targetPool = new Map(allColors.map(c=>([c, []])));\nconst targetWireframePool = new Map(allColors.map(c=>([c, []])));\n\n\n\nconst getTarget = (() => {\n\n\tconst slowmoSpawner = makeSpawner({\n\t\tchance: 0.5,\n\t\tcooldownPerSpawn: 10000,\n\t\tmaxSpawns: 1\n\t});\n\n\tlet doubleStrong = false;\n\tconst strongSpawner = makeSpawner({\n\t\tchance: 0.3,\n\t\tcooldownPerSpawn: 12000,\n\t\tmaxSpawns: 1\n\t});\n\n\tconst spinnerSpawner = makeSpawner({\n\t\tchance: 0.1,\n\t\tcooldownPerSpawn: 10000,\n\t\tmaxSpawns: 1\n\t});\n\n\t// Cached array instances, no need to allocate every time.\n\tconst axisOptions = [\n\t\t['x', 'y'],\n\t\t['y', 'z'],\n\t\t['z', 'x']\n\t];\n\n\tfunction getTargetOfStyle(color, wireframe) {\n\t\tconst pool = wireframe ? targetWireframePool : targetPool;\n\t\tlet target = pool.get(color).pop();\n\t\tif (!target) {\n\t\t\ttarget = new Entity({\n\t\t\t\tmodel: optimizeModel(makeRecursiveCubeModel({\n\t\t\t\t\trecursionLevel: 1,\n\t\t\t\t\tsplitFn: mengerSpongeSplit,\n\t\t\t\t\tscale: targetRadius\n\t\t\t\t})),\n\t\t\t\tcolor: color,\n\t\t\t\twireframe: wireframe\n\t\t\t});\n\n\t\t\t// Init any properties that will be used.\n\t\t\t// These will not be automatically reset when recycled.\n\t\t\ttarget.color = color;\n\t\t\ttarget.wireframe = wireframe;\n\t\t\t// Some properties don't have their final value yet.\n\t\t\t// Initialize with any value of the right type.\n\t\t\ttarget.hit = false;\n\t\t\ttarget.maxHealth = 0;\n\t\t\ttarget.health = 0;\n\t\t}\n\t\treturn target;\n\t}\n\n\treturn function getTarget() {\n\t\tif (doubleStrong && state.game.score <= doubleStrongEnableScore) {\n\t\t\tdoubleStrong = false;\n\t\t\t// Spawner is reset automatically when game resets.\n\t\t} else if (!doubleStrong && state.game.score > doubleStrongEnableScore) {\n\t\t\tdoubleStrong = true;\n\t\t\tstrongSpawner.mutate({ maxSpawns: 2 });\n\t\t}\n\n\t\t// Target Parameters\n\t\t// --------------------------------\n\t\tlet color = pickOne([BLUE, GREEN, ORANGE]);\n\t\tlet wireframe = false;\n\t\tlet health = 1;\n\t\tlet maxHealth = 3;\n\t\tconst spinner = state.game.cubeCount >= spinnerThreshold && isInGame() && spinnerSpawner.shouldSpawn();\n\n\t\t// Target Parameter Overrides\n\t\t// --------------------------------\n\t\tif (state.game.cubeCount >= slowmoThreshold && slowmoSpawner.shouldSpawn()) {\n\t\t\tcolor = BLUE;\n\t\t\twireframe = true;\n\t\t}\n\t\telse if (state.game.cubeCount >= strongThreshold && strongSpawner.shouldSpawn()) {\n\t\t\tcolor = PINK;\n\t\t\thealth = 3;\n\t\t}\n\n\t\t// Target Creation\n\t\t// --------------------------------\n\t\tconst target = getTargetOfStyle(color, wireframe);\n\t\ttarget.hit = false;\n\t\ttarget.maxHealth = maxHealth;\n\t\ttarget.health = health;\n\t\tupdateTargetHealth(target, 0);\n\n\t\tconst spinSpeeds = [\n\t\t\tMath.random() * 0.1 - 0.05,\n\t\t\tMath.random() * 0.1 - 0.05\n\t\t];\n\n\t\tif (spinner) {\n\t\t\t// Ends up spinning a random axis\n\t\t\tspinSpeeds[0] = -0.25;\n\t\t\tspinSpeeds[1] = 0;\n\t\t\ttarget.rotateZ = random(0, TAU);\n\t\t}\n\n\t\tconst axes = pickOne(axisOptions);\n\n\t\tspinSpeeds.forEach((spinSpeed, i) => {\n\t\t\tswitch (axes[i]) {\n\t\t\t\tcase 'x':\n\t\t\t\t\ttarget.rotateXD = spinSpeed;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'y':\n\t\t\t\t\ttarget.rotateYD = spinSpeed;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'z':\n\t\t\t\t\ttarget.rotateZD = spinSpeed;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn target;\n\t}\n})();\n\n\nconst updateTargetHealth = (target, healthDelta) => {\n\ttarget.health += healthDelta;\n\t// Only update stroke on non-wireframe targets.\n\t// Showing \"glue\" is a temporary attempt to display health. For now, there's\n\t// no reason to have wireframe targets with high health, so we're fine.\n\tif (!target.wireframe) {\n\t\tconst strokeWidth = target.health - 1;\n\t\tconst strokeColor = makeTargetGlueColor(target);\n\t\tfor (let p of target.polys) {\n\t\t\tp.strokeWidth = strokeWidth;\n\t\t\tp.strokeColor = strokeColor;\n\t\t}\n\t}\n};\n\n\nconst returnTarget = target => {\n\ttarget.reset();\n\tconst pool = target.wireframe ? targetWireframePool : targetPool;\n\tpool.get(target.color).push(target);\n};\n\n\nfunction resetAllTargets() {\n\twhile(targets.length) {\n\t\treturnTarget(targets.pop());\n\t}\n}\n\n\n\n\n\n// createBurst.js\n// ============================================================================\n// ============================================================================\n\n// Track all active fragments\nconst frags = [];\n// Pool inactive fragments by color, using a Map.\n// keys are color objects, and values are arrays of fragments.\n// // Also pool wireframe instances separately.\nconst fragPool = new Map(allColors.map(c=>([c, []])));\nconst fragWireframePool = new Map(allColors.map(c=>([c, []])));\n\n\nconst createBurst = (() => {\n\t// Precompute some private data to be reused for all bursts.\n\tconst basePositions = mengerSpongeSplit({ x:0, y:0, z:0 }, fragRadius*2);\n\tconst positions = cloneVertices(basePositions);\n\tconst prevPositions = cloneVertices(basePositions);\n\tconst velocities = cloneVertices(basePositions);\n\n\tconst basePositionNormals = basePositions.map(normalize);\n\tconst positionNormals = cloneVertices(basePositionNormals);\n\n\n\tconst fragCount = basePositions.length;\n\n\tfunction getFragForTarget(target) {\n\t\tconst pool = target.wireframe ? fragWireframePool : fragPool;\n\t\tlet frag = pool.get(target.color).pop();\n\t\tif (!frag) {\n\t\t\tfrag = new Entity({\n\t\t\t\tmodel: makeCubeModel({ scale: fragRadius }),\n\t\t\t\tcolor: target.color,\n\t\t\t\twireframe: target.wireframe\n\t\t\t});\n\t\t\tfrag.color = target.color;\n\t\t\tfrag.wireframe = target.wireframe;\n\t\t}\n\t\treturn frag;\n\t}\n\n\treturn (target, force=1) => {\n\t\t// Calculate fragment positions, and what would have been the previous positions\n\t\t// when still a part of the larger target.\n\t\ttransformVertices(\n\t\t\tbasePositions, positions,\n\t\t\ttarget.x, target.y, target.z,\n\t\t\ttarget.rotateX, target.rotateY, target.rotateZ,\n\t\t\t1, 1, 1\n\t\t);\n\t\ttransformVertices(\n\t\t\tbasePositions, prevPositions,\n\t\t\ttarget.x - target.xD, target.y - target.yD, target.z - target.zD,\n\t\t\ttarget.rotateX - target.rotateXD, target.rotateY - target.rotateYD, target.rotateZ - target.rotateZD,\n\t\t\t1, 1, 1\n\t\t);\n\n\t\t// Compute velocity of each fragment, based on previous positions.\n\t\t// Will write to `velocities` array.\n\t\tfor (let i=0; i<fragCount; i++) {\n\t\t\tconst position = positions[i];\n\t\t\tconst prevPosition = prevPositions[i];\n\t\t\tconst velocity = velocities[i];\n\n\t\t\tvelocity.x = position.x - prevPosition.x;\n\t\t\tvelocity.y = position.y - prevPosition.y;\n\t\t\tvelocity.z = position.z - prevPosition.z;\n\t\t}\n\n\n\n\t\t// Apply target rotation to normals\n\t\ttransformVertices(\n\t\t\tbasePositionNormals, positionNormals,\n\t\t\t0, 0, 0,\n\t\t\ttarget.rotateX, target.rotateY, target.rotateZ,\n\t\t\t1, 1, 1\n\t\t);\n\n\n\t\tfor (let i=0; i<fragCount; i++) {\n\t\t\tconst position = positions[i];\n\t\t\tconst velocity = velocities[i];\n\t\t\tconst normal = positionNormals[i];\n\n\t\t\tconst frag = getFragForTarget(target);\n\n\t\t\tfrag.x = position.x;\n\t\t\tfrag.y = position.y;\n\t\t\tfrag.z = position.z;\n\t\t\tfrag.rotateX = target.rotateX;\n\t\t\tfrag.rotateY = target.rotateY;\n\t\t\tfrag.rotateZ = target.rotateZ;\n\n\n\t\t\tconst burstSpeed = 2 * force;\n\t\t\tconst randSpeed = 2 * force;\n\t\t\tconst rotateScale = 0.015;\n\t\t\tfrag.xD = velocity.x + (normal.x * burstSpeed) + (Math.random() * randSpeed);\n\t\t\tfrag.yD = velocity.y + (normal.y * burstSpeed) + (Math.random() * randSpeed);\n\t\t\tfrag.zD = velocity.z + (normal.z * burstSpeed) + (Math.random() * randSpeed);\n\t\t\tfrag.rotateXD = frag.xD * rotateScale;\n\t\t\tfrag.rotateYD = frag.yD * rotateScale;\n\t\t\tfrag.rotateZD = frag.zD * rotateScale;\n\n\t\t\tfrags.push(frag);\n\t\t};\n\t}\n})();\n\n\nconst returnFrag = frag => {\n\tfrag.reset();\n\tconst pool = frag.wireframe ? fragWireframePool : fragPool;\n\tpool.get(frag.color).push(frag);\n};\n\n\n\n\n\n// sparks.js\n// ============================================================================\n// ============================================================================\n\nconst sparks = [];\nconst sparkPool = [];\n\n\nfunction addSpark(x, y, xD, yD) {\n\tconst spark = sparkPool.pop() || {};\n\n\tspark.x = x + xD * 0.5;\n\tspark.y = y + yD * 0.5;\n\tspark.xD = xD;\n\tspark.yD = yD;\n\tspark.life = random(200, 300);\n\tspark.maxLife = spark.life;\n\n\tsparks.push(spark);\n\n\treturn spark;\n}\n\n\n// Spherical spark burst\nfunction sparkBurst(x, y, count, maxSpeed) {\n\tconst angleInc = TAU / count;\n\tfor (let i=0; i<count; i++) {\n\t\tconst angle = i * angleInc + angleInc * Math.random();\n\t\tconst speed = (1 - Math.random() ** 3) * maxSpeed;\n\t\taddSpark(\n\t\t\tx,\n\t\t\ty,\n\t\t\tMath.sin(angle) * speed,\n\t\t\tMath.cos(angle) * speed\n\t\t);\n\t}\n}\n\n\n// Make a target \"leak\" sparks from all vertices.\n// This is used to create the effect of target glue \"shedding\".\nlet glueShedVertices;\nfunction glueShedSparks(target) {\n\tif (!glueShedVertices) {\n\t\tglueShedVertices = cloneVertices(target.vertices);\n\t} else {\n\t\tcopyVerticesTo(target.vertices, glueShedVertices);\n\t}\n\n\tglueShedVertices.forEach(v => {\n\t\tif (Math.random() < 0.4) {\n\t\t\tprojectVertex(v);\n\t\t\taddSpark(\n\t\t\t\tv.x,\n\t\t\t\tv.y,\n\t\t\t\trandom(-12, 12),\n\t\t\t\trandom(-12, 12)\n\t\t\t);\n\t\t}\n\t});\n}\n\nfunction returnSpark(spark) {\n\tsparkPool.push(spark);\n}\n\n\n\n\n\n// hud.js\n// ============================================================================\n// ============================================================================\n\nconst hudContainerNode = $('.hud');\n\nfunction setHudVisibility(visible) {\n\tif (visible) {\n\t\thudContainerNode.style.display = 'block';\n\t} else {\n\t\thudContainerNode.style.display = 'none';\n\t}\n}\n\n\n///////////\n// Score //\n///////////\nconst scoreNode = $('.score-lbl');\nconst cubeCountNode = $('.cube-count-lbl');\n\nfunction renderScoreHud() {\n\tif (isCasualGame()) {\n\t\tscoreNode.style.display = 'none';\n\t\tcubeCountNode.style.opacity = 1;\n\t} else {\n\t\tscoreNode.innerText = `SCORE: ${state.game.score}`;\n\t\tscoreNode.style.display = 'block';\n\t\tcubeCountNode.style.opacity = 0.65 ;\n\t}\n\tcubeCountNode.innerText = `CUBES SMASHED: ${state.game.cubeCount}`;\n}\n\nrenderScoreHud();\n\n\n//////////////////\n// Pause Button //\n//////////////////\n\nhandlePointerDown($('.pause-btn'), () => pauseGame());\n\n\n////////////////////\n// Slow-Mo Status //\n////////////////////\n\nconst slowmoNode = $('.slowmo');\nconst slowmoBarNode = $('.slowmo__bar');\n\nfunction renderSlowmoStatus(percentRemaining) {\n\tslowmoNode.style.opacity = percentRemaining === 0 ? 0 : 1;\n\tslowmoBarNode.style.transform = `scaleX(${percentRemaining.toFixed(3)})`;\n}\n\n\n\n\n\n// menus.js\n// ============================================================================\n// ============================================================================\n\n// Top-level menu containers\nconst menuContainerNode = $('.menus');\nconst menuMainNode = $('.menu--main');\nconst menuPauseNode = $('.menu--pause');\nconst menuScoreNode = $('.menu--score');\n\nconst finalScoreLblNode = $('.final-score-lbl');\nconst highScoreLblNode = $('.high-score-lbl');\n\n\n\nfunction showMenu(node) {\n\tnode.classList.add('active');\n}\n\nfunction hideMenu(node) {\n\tnode.classList.remove('active');\n}\n\nfunction renderMenus() {\n\thideMenu(menuMainNode);\n\thideMenu(menuPauseNode);\n\thideMenu(menuScoreNode);\n\n\tswitch (state.menus.active) {\n\t\tcase MENU_MAIN:\n\t\t\tshowMenu(menuMainNode);\n\t\t\tbreak;\n\t\tcase MENU_PAUSE:\n\t\t\tshowMenu(menuPauseNode);\n\t\t\tbreak;\n\t\tcase MENU_SCORE:\n\t\t\tfinalScoreLblNode.textContent = formatNumber(state.game.score);\n\t\t\tif (isNewHighScore()) {\n\t\t\t\thighScoreLblNode.textContent = 'New High Score!';\n\t\t\t} else {\n\t\t\t\thighScoreLblNode.textContent = `High Score: ${formatNumber(getHighScore())}`;\n\t\t\t}\n\t\t\tshowMenu(menuScoreNode);\n\t\t\tbreak;\n\t}\n\n\tsetHudVisibility(!isMenuVisible());\n\tmenuContainerNode.classList.toggle('has-active', isMenuVisible());\n\tmenuContainerNode.classList.toggle('interactive-mode', isMenuVisible() && pointerIsDown);\n}\n\nrenderMenus();\n\n\n\n////////////////////\n// Button Actions //\n////////////////////\n\n// Main Menu\nhandleClick($('.play-normal-btn'), () => {\n\tsetGameMode(GAME_MODE_RANKED);\n\tsetActiveMenu(null);\n\tresetGame();\n});\n\nhandleClick($('.play-casual-btn'), () => {\n\tsetGameMode(GAME_MODE_CASUAL);\n\tsetActiveMenu(null);\n\tresetGame();\n});\n\n// Pause Menu\nhandleClick($('.resume-btn'), () => resumeGame());\nhandleClick($('.menu-btn--pause'), () => setActiveMenu(MENU_MAIN));\n\n// Score Menu\nhandleClick($('.play-again-btn'), () => {\n\tsetActiveMenu(null);\n\tresetGame();\n});\n\nhandleClick($('.menu-btn--score'), () => setActiveMenu(MENU_MAIN));\n\n\n\n\n////////////////////\n// Button Actions //\n////////////////////\n\n// Main Menu\nhandleClick($('.play-normal-btn'), () => {\n\tsetGameMode(GAME_MODE_RANKED);\n\tsetActiveMenu(null);\n\tresetGame();\n});\n\nhandleClick($('.play-casual-btn'), () => {\n\tsetGameMode(GAME_MODE_CASUAL);\n\tsetActiveMenu(null);\n\tresetGame();\n});\n\n// Pause Menu\nhandleClick($('.resume-btn'), () => resumeGame());\nhandleClick($('.menu-btn--pause'), () => setActiveMenu(MENU_MAIN));\n\n// Score Menu\nhandleClick($('.play-again-btn'), () => {\n\tsetActiveMenu(null);\n\tresetGame();\n});\n\nhandleClick($('.menu-btn--score'), () => setActiveMenu(MENU_MAIN));\n\n\n\n\n\n// actions.js\n// ============================================================================\n// ============================================================================\n\n//////////////////\n// MENU ACTIONS //\n//////////////////\n\nfunction setActiveMenu(menu) {\n\tstate.menus.active = menu;\n\trenderMenus();\n}\n\n\n/////////////////\n// HUD ACTIONS //\n/////////////////\n\nfunction setScore(score) {\n\tstate.game.score = score;\n\trenderScoreHud();\n}\n\nfunction incrementScore(inc) {\n\tif (isInGame()) {\n\t\tstate.game.score += inc;\n\t\tif (state.game.score < 0) {\n\t\t\tstate.game.score = 0;\n\t\t}\n\t\trenderScoreHud();\n\t}\n}\n\nfunction setCubeCount(count) {\n\tstate.game.cubeCount = count;\n\trenderScoreHud();\n}\n\nfunction incrementCubeCount(inc) {\n\tif (isInGame()) {\n\t\tstate.game.cubeCount += inc;\n\t\trenderScoreHud();\n\t}\n}\n\n\n//////////////////\n// GAME ACTIONS //\n//////////////////\n\nfunction setGameMode(mode) {\n\tstate.game.mode = mode;\n}\n\nfunction resetGame() {\n\tresetAllTargets();\n\tstate.game.time = 0;\n\tresetAllCooldowns();\n\tsetScore(0);\n\tsetCubeCount(0);\n\tspawnTime = getSpawnDelay();\n}\n\nfunction pauseGame() {\n\tisInGame() && setActiveMenu(MENU_PAUSE);\n}\n\nfunction resumeGame() {\n\tisPaused() && setActiveMenu(null);\n}\n\nfunction endGame() {\n\thandleCanvasPointerUp();\n\tif (isNewHighScore()) {\n\t\tsetHighScore(state.game.score);\n\t}\n\tsetActiveMenu(MENU_SCORE);\n}\n\n\n\n////////////////////////\n// KEYBOARD SHORTCUTS //\n////////////////////////\n\nwindow.addEventListener('keydown', event => {\n\tif (event.key === 'p') {\n\t\tisPaused() ? resumeGame() : pauseGame();\n\t}\n});\n\n\n\n\n\n\n// tick.js\n// ============================================================================\n// ============================================================================\n\n\nlet spawnTime = 0;\nconst maxSpawnX = 450;\nconst pointerDelta = { x: 0, y: 0 };\nconst pointerDeltaScaled = { x: 0, y: 0 };\n\n// Temp slowmo state. Should be relocated once this stabilizes.\nconst slowmoDuration = 1500;\nlet slowmoRemaining = 0;\nlet spawnExtra = 0;\nconst spawnExtraDelay = 300;\nlet targetSpeed = 1;\n\n\nfunction tick(width, height, simTime, simSpeed, lag) {\n\tPERF_START('frame');\n\tPERF_START('tick');\n\n\tstate.game.time += simTime;\n\n\tif (slowmoRemaining > 0) {\n\t\tslowmoRemaining -= simTime;\n\t\tif (slowmoRemaining < 0) {\n\t\t\tslowmoRemaining = 0;\n\t\t}\n\t\ttargetSpeed = pointerIsDown ? 0.075 : 0.3;\n\t} else {\n\t\tconst menuPointerDown = isMenuVisible() && pointerIsDown;\n\t\ttargetSpeed = menuPointerDown ? 0.025 : 1;\n\t}\n\n\trenderSlowmoStatus(slowmoRemaining / slowmoDuration);\n\n\tgameSpeed += (targetSpeed - gameSpeed) / 22 * lag;\n\tgameSpeed = clamp(gameSpeed, 0, 1);\n\n\tconst centerX = width / 2;\n\tconst centerY = height / 2;\n\n\tconst simAirDrag = 1 - (airDrag * simSpeed);\n\tconst simAirDragSpark = 1 - (airDragSpark * simSpeed);\n\n\t// Pointer Tracking\n\t// -------------------\n\n\t// Compute speed and x/y deltas.\n\t// There is also a \"scaled\" variant taking game speed into account. This serves two purposes:\n\t//  - Lag won't create large spikes in speed/deltas\n\t//  - In slow mo, speed is increased proportionately to match \"reality\". Without this boost,\n\t//    it feels like your actions are dampened in slow mo.\n\tconst forceMultiplier = 1 / (simSpeed * 0.75 + 0.25);\n\tpointerDelta.x = 0;\n\tpointerDelta.y = 0;\n\tpointerDeltaScaled.x = 0;\n\tpointerDeltaScaled.y = 0;\n\tconst lastPointer = touchPoints[touchPoints.length - 1];\n\n\tif (pointerIsDown && lastPointer && !lastPointer.touchBreak) {\n\t\tpointerDelta.x = (pointerScene.x - lastPointer.x);\n\t\tpointerDelta.y = (pointerScene.y - lastPointer.y);\n\t\tpointerDeltaScaled.x = pointerDelta.x * forceMultiplier;\n\t\tpointerDeltaScaled.y = pointerDelta.y * forceMultiplier;\n\t}\n\tconst pointerSpeed = Math.hypot(pointerDelta.x, pointerDelta.y);\n\tconst pointerSpeedScaled = pointerSpeed * forceMultiplier;\n\n\t// Track points for later calculations, including drawing trail.\n\ttouchPoints.forEach(p => p.life -= simTime);\n\n\tif (pointerIsDown) {\n\t\ttouchPoints.push({\n\t\t\tx: pointerScene.x,\n\t\t\ty: pointerScene.y,\n\t\t\tlife: touchPointLife\n\t\t});\n\t}\n\n\twhile (touchPoints[0] && touchPoints[0].life <= 0) {\n\t\ttouchPoints.shift();\n\t}\n\n\n\t// Entity Manipulation\n\t// --------------------\n\tPERF_START('entities');\n\n\t// Spawn targets\n\tspawnTime -= simTime;\n\tif (spawnTime <= 0) {\n\t\tif (spawnExtra > 0) {\n\t\t\tspawnExtra--;\n\t\t\tspawnTime = spawnExtraDelay;\n\t\t} else {\n\t\t\tspawnTime = getSpawnDelay();\n\t\t}\n\t\tconst target = getTarget();\n\t\tconst spawnRadius = Math.min(centerX * 0.8, maxSpawnX);\n\t\ttarget.x = (Math.random() * spawnRadius * 2 - spawnRadius);\n\t\ttarget.y = centerY + targetHitRadius * 2;\n\t\ttarget.z = (Math.random() * targetRadius*2 - targetRadius);\n\t\ttarget.xD = Math.random() * (target.x * -2 / 120);\n\t\ttarget.yD = -20;\n\t\ttargets.push(target);\n\t}\n\n\t// Animate targets and remove when offscreen\n\tconst leftBound = -centerX + targetRadius;\n\tconst rightBound = centerX - targetRadius;\n\tconst ceiling = -centerY - 120;\n\tconst boundDamping = 0.4;\n\n\ttargetLoop:\n\tfor (let i = targets.length - 1; i >= 0; i--) {\n\t\tconst target = targets[i];\n\t\ttarget.x += target.xD * simSpeed;\n\t\ttarget.y += target.yD * simSpeed;\n\n\t\tif (target.y < ceiling) {\n\t\t\ttarget.y = ceiling;\n\t\t\ttarget.yD = 0;\n\t\t}\n\n\t\tif (target.x < leftBound) {\n\t\t\ttarget.x = leftBound;\n\t\t\ttarget.xD *= -boundDamping;\n\t\t} else if (target.x > rightBound) {\n\t\t\ttarget.x = rightBound;\n\t\t\ttarget.xD *= -boundDamping;\n\t\t}\n\n\t\tif (target.z < backboardZ) {\n\t\t\ttarget.z = backboardZ;\n\t\t\ttarget.zD *= -boundDamping;\n\t\t}\n\n\t\ttarget.yD += gravity * simSpeed;\n\t\ttarget.rotateX += target.rotateXD * simSpeed;\n\t\ttarget.rotateY += target.rotateYD * simSpeed;\n\t\ttarget.rotateZ += target.rotateZD * simSpeed;\n\t\ttarget.transform();\n\t\ttarget.project();\n\n\t\t// Remove if offscreen\n\t\tif (target.y > centerY + targetHitRadius * 2) {\n\t\t\ttargets.splice(i, 1);\n\t\t\treturnTarget(target);\n\t\t\tif (isInGame()) {\n\t\t\t\tif (isCasualGame()) {\n\t\t\t\t\tincrementScore(-25);\n\t\t\t\t} else {\n\t\t\t\t\tendGame();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\n\t\t// If pointer is moving really fast, we want to hittest multiple points along the path.\n\t\t// We can't use scaled pointer speed to determine this, since we care about actual screen\n\t\t// distance covered.\n\t\tconst hitTestCount = Math.ceil(pointerSpeed / targetRadius * 2);\n\t\t// Start loop at `1` and use `<=` check, so we skip 0% and end up at 100%.\n\t\t// This omits the previous point position, and includes the most recent.\n\t\tfor (let ii=1; ii<=hitTestCount; ii++) {\n\t\t\tconst percent = 1 - (ii / hitTestCount);\n\t\t\tconst hitX = pointerScene.x - pointerDelta.x * percent;\n\t\t\tconst hitY = pointerScene.y - pointerDelta.y * percent;\n\t\t\tconst distance = Math.hypot(\n\t\t\t\thitX - target.projected.x,\n\t\t\t\thitY - target.projected.y\n\t\t\t);\n\n\t\t\tif (distance <= targetHitRadius) {\n\t\t\t\t// Hit! (though we don't want to allow hits on multiple sequential frames)\n\t\t\t\tif (!target.hit) {\n\t\t\t\t\ttarget.hit = true;\n\n\t\t\t\t\ttarget.xD += pointerDeltaScaled.x * hitDampening;\n\t\t\t\t\ttarget.yD += pointerDeltaScaled.y * hitDampening;\n\t\t\t\t\ttarget.rotateXD += pointerDeltaScaled.y * 0.001;\n\t\t\t\t\ttarget.rotateYD += pointerDeltaScaled.x * 0.001;\n\n\t\t\t\t\tconst sparkSpeed = 7 + pointerSpeedScaled * 0.125;\n\n\t\t\t\t\tif (pointerSpeedScaled > minPointerSpeed) {\n\t\t\t\t\t\ttarget.health--;\n\t\t\t\t\t\tincrementScore(10);\n\n\t\t\t\t\t\tif (target.health <= 0) {\n\t\t\t\t\t\t\tincrementCubeCount(1);\n\t\t\t\t\t\t\tcreateBurst(target, forceMultiplier);\n\t\t\t\t\t\t\tsparkBurst(hitX, hitY, 8, sparkSpeed);\n\t\t\t\t\t\t\tif (target.wireframe) {\n\t\t\t\t\t\t\t\tslowmoRemaining = slowmoDuration;\n\t\t\t\t\t\t\t\tspawnTime = 0;\n\t\t\t\t\t\t\t\tspawnExtra = 2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttargets.splice(i, 1);\n\t\t\t\t\t\t\treturnTarget(target);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsparkBurst(hitX, hitY, 8, sparkSpeed);\n\t\t\t\t\t\t\tglueShedSparks(target);\n\t\t\t\t\t\t\tupdateTargetHealth(target, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tincrementScore(5);\n\t\t\t\t\t\tsparkBurst(hitX, hitY, 3, sparkSpeed);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Break the current loop and continue the outer loop.\n\t\t\t\t// This skips to processing the next target.\n\t\t\t\tcontinue targetLoop;\n\t\t\t}\n\t\t}\n\n\t\t// This code will only run if target hasn't been \"hit\".\n\t\ttarget.hit = false;\n\t}\n\n\t// Animate fragments and remove when offscreen.\n\tconst fragBackboardZ = backboardZ + fragRadius;\n\t// Allow fragments to move off-screen to sides for a while, since shadows are still visible.\n\tconst fragLeftBound = -width;\n\tconst fragRightBound = width;\n\n\tfor (let i = frags.length - 1; i >= 0; i--) {\n\t\tconst frag = frags[i];\n\t\tfrag.x += frag.xD * simSpeed;\n\t\tfrag.y += frag.yD * simSpeed;\n\t\tfrag.z += frag.zD * simSpeed;\n\n\t\tfrag.xD *= simAirDrag;\n\t\tfrag.yD *= simAirDrag;\n\t\tfrag.zD *= simAirDrag;\n\n\t\tif (frag.y < ceiling) {\n\t\t\tfrag.y = ceiling;\n\t\t\tfrag.yD = 0;\n\t\t}\n\n\t\tif (frag.z < fragBackboardZ) {\n\t\t\tfrag.z = fragBackboardZ;\n\t\t\tfrag.zD *= -boundDamping;\n\t\t}\n\n\t\tfrag.yD += gravity * simSpeed;\n\t\tfrag.rotateX += frag.rotateXD * simSpeed;\n\t\tfrag.rotateY += frag.rotateYD * simSpeed;\n\t\tfrag.rotateZ += frag.rotateZD * simSpeed;\n\t\tfrag.transform();\n\t\tfrag.project();\n\n\t\t// Removal conditions\n\t\tif (\n\t\t\t// Bottom of screen\n\t\t\tfrag.projected.y > centerY + targetHitRadius ||\n\t\t\t// Sides of screen\n\t\t\tfrag.projected.x < fragLeftBound ||\n\t\t\tfrag.projected.x > fragRightBound ||\n\t\t\t// Too close to camera\n\t\t\tfrag.z > cameraFadeEndZ\n\t\t) {\n\t\t\tfrags.splice(i, 1);\n\t\t\treturnFrag(frag);\n\t\t\tcontinue;\n\t\t}\n\t}\n\n\t// 2D sparks\n\tfor (let i = sparks.length - 1; i >= 0; i--) {\n\t\tconst spark = sparks[i];\n\t\tspark.life -= simTime;\n\t\tif (spark.life <= 0) {\n\t\t\tsparks.splice(i, 1);\n\t\t\treturnSpark(spark);\n\t\t\tcontinue;\n\t\t}\n\t\tspark.x += spark.xD * simSpeed;\n\t\tspark.y += spark.yD * simSpeed;\n\t\tspark.xD *= simAirDragSpark;\n\t\tspark.yD *= simAirDragSpark;\n\t\tspark.yD += gravity * simSpeed;\n\t}\n\n\tPERF_END('entities');\n\n\t// 3D transforms\n\t// -------------------\n\n\tPERF_START('3D');\n\n\t// Aggregate all scene vertices/polys\n\tallVertices.length = 0;\n\tallPolys.length = 0;\n\tallShadowVertices.length = 0;\n\tallShadowPolys.length = 0;\n\ttargets.forEach(entity => {\n\t\tallVertices.push(...entity.vertices);\n\t\tallPolys.push(...entity.polys);\n\t\tallShadowVertices.push(...entity.shadowVertices);\n\t\tallShadowPolys.push(...entity.shadowPolys);\n\t});\n\n\tfrags.forEach(entity => {\n\t\tallVertices.push(...entity.vertices);\n\t\tallPolys.push(...entity.polys);\n\t\tallShadowVertices.push(...entity.shadowVertices);\n\t\tallShadowPolys.push(...entity.shadowPolys);\n\t});\n\n\t// Scene calculations/transformations\n\tallPolys.forEach(p => computePolyNormal(p, 'normalWorld'));\n\tallPolys.forEach(computePolyDepth);\n\tallPolys.sort((a, b) => b.depth - a.depth);\n\n\t// Perspective projection\n\tallVertices.forEach(projectVertex);\n\n\tallPolys.forEach(p => computePolyNormal(p, 'normalCamera'));\n\n\tPERF_END('3D');\n\n\tPERF_START('shadows');\n\n\t// Rotate shadow vertices to light source perspective\n\ttransformVertices(\n\t\tallShadowVertices,\n\t\tallShadowVertices,\n\t\t0, 0, 0,\n\t\tTAU/8, 0, 0,\n\t\t1, 1, 1\n\t);\n\n\tallShadowPolys.forEach(p => computePolyNormal(p, 'normalWorld'));\n\n\tconst shadowDistanceMult = Math.hypot(1, 1);\n\tconst shadowVerticesLength = allShadowVertices.length;\n\tfor (let i=0; i<shadowVerticesLength; i++) {\n\t\tconst distance = allVertices[i].z - backboardZ;\n\t\tallShadowVertices[i].z -= shadowDistanceMult * distance;\n\t}\n\ttransformVertices(\n\t\tallShadowVertices,\n\t\tallShadowVertices,\n\t\t0, 0, 0,\n\t\t-TAU/8, 0, 0,\n\t\t1, 1, 1\n\t);\n\tallShadowVertices.forEach(projectVertex);\n\n\tPERF_END('shadows');\n\n\tPERF_END('tick');\n}\n\n\n\n\n\n// draw.js\n// ============================================================================\n// ============================================================================\n\nfunction draw(ctx, width, height, viewScale) {\n\tPERF_START('draw');\n\n\tconst halfW = width / 2;\n\tconst halfH = height / 2;\n\n\n\t// 3D Polys\n\t// ---------------\n\tctx.lineJoin = 'bevel';\n\n\tPERF_START('drawShadows');\n\tctx.fillStyle = shadowColor;\n\tctx.strokeStyle = shadowColor;\n\tallShadowPolys.forEach(p => {\n\t\tif (p.wireframe) {\n\t\t\tctx.lineWidth = 2;\n\t\t\tctx.beginPath();\n\t\t\tconst { vertices } = p;\n\t\t\tconst vCount = vertices.length;\n\t\t\tconst firstV = vertices[0];\n\t\t\tctx.moveTo(firstV.x, firstV.y);\n\t\t\tfor (let i=1; i<vCount; i++) {\n\t\t\t\tconst v = vertices[i];\n\t\t\t\tctx.lineTo(v.x, v.y);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\tctx.beginPath();\n\t\t\tconst { vertices } = p;\n\t\t\tconst vCount = vertices.length;\n\t\t\tconst firstV = vertices[0];\n\t\t\tctx.moveTo(firstV.x, firstV.y);\n\t\t\tfor (let i=1; i<vCount; i++) {\n\t\t\t\tconst v = vertices[i];\n\t\t\t\tctx.lineTo(v.x, v.y);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t}\n\t});\n\tPERF_END('drawShadows');\n\n\tPERF_START('drawPolys');\n\n\tallPolys.forEach(p => {\n\t\tif (!p.wireframe && p.normalCamera.z < 0) return;\n\n\t\tif (p.strokeWidth !== 0) {\n\t\t\tctx.lineWidth = p.normalCamera.z < 0 ? p.strokeWidth * 0.5 : p.strokeWidth;\n\t\t\tctx.strokeStyle = p.normalCamera.z < 0 ? p.strokeColorDark : p.strokeColor;\n\t\t}\n\n\t\tconst { vertices } = p;\n\t\tconst lastV = vertices[vertices.length - 1];\n\t\tconst fadeOut = p.middle.z > cameraFadeStartZ;\n\n\t\tif (!p.wireframe) {\n\t\t\tconst normalLight = p.normalWorld.y * 0.5 + p.normalWorld.z * -0.5;\n\t\t\tconst lightness = normalLight > 0\n\t\t\t\t? 0.1\n\t\t\t\t: ((normalLight ** 32 - normalLight) / 2) * 0.9 + 0.1;\n\t\t\tctx.fillStyle = shadeColor(p.color, lightness);\n\t\t}\n\n\t\t// Fade out polys close to camera. `globalAlpha` must be reset later.\n\t\tif (fadeOut) {\n\t\t\t// If polygon gets really close to camera (outside `cameraFadeRange`) the alpha\n\t\t\t// can go negative, which has the appearance of alpha = 1. So, we'll clamp it at 0.\n\t\t\tctx.globalAlpha = Math.max(0, 1 - (p.middle.z - cameraFadeStartZ) / cameraFadeRange);\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(lastV.x, lastV.y);\n\t\tfor (let v of vertices) {\n\t\t\tctx.lineTo(v.x, v.y);\n\t\t}\n\n\t\tif (!p.wireframe) {\n\t\t\tctx.fill();\n\t\t}\n\t\tif (p.strokeWidth !== 0) {\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tif (fadeOut) {\n\t\t\tctx.globalAlpha = 1;\n\t\t}\n\t});\n\tPERF_END('drawPolys');\n\n\n\tPERF_START('draw2D');\n\n\t// 2D Sparks\n\t// ---------------\n\tctx.strokeStyle = sparkColor;\n\tctx.lineWidth = sparkThickness;\n\tctx.beginPath();\n\tsparks.forEach(spark => {\n\t\tctx.moveTo(spark.x, spark.y);\n\t\t// Shrink sparks to zero length as they die.\n\t\t// Speed up shrinking as life approaches 0 (root curve).\n\t\t// Note that sparks already get smaller over time as their speed slows\n\t\t// down from damping. So this is like a double scale down. To counter this\n\t\t// a bit and keep the sparks larger for longer, we'll also increase the scale\n\t\t// a bit after applying the root curve.\n\t\tconst scale = (spark.life / spark.maxLife) ** 0.5 * 1.5;\n\t\tctx.lineTo(spark.x - spark.xD*scale, spark.y - spark.yD*scale);\n\n\t});\n\tctx.stroke();\n\n\n\t// Touch Strokes\n\t// ---------------\n\n\tctx.strokeStyle = touchTrailColor;\n\tconst touchPointCount = touchPoints.length;\n\tfor (let i=1; i<touchPointCount; i++) {\n\t\tconst current = touchPoints[i];\n\t\tconst prev = touchPoints[i-1];\n\t\tif (current.touchBreak || prev.touchBreak) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst scale = current.life / touchPointLife;\n\t\tctx.lineWidth = scale * touchTrailThickness;\n\t\tctx.beginPath();\n\t\tctx.moveTo(prev.x, prev.y);\n\t\tctx.lineTo(current.x, current.y);\n\t\tctx.stroke();\n\t}\n\n\tPERF_END('draw2D');\n\n\tPERF_END('draw');\n\tPERF_END('frame');\n\n\t// Display performance updates.\n\tPERF_UPDATE();\n}\n\n\n\n\n\n// canvas.js\n// ============================================================================\n// ============================================================================\n\nfunction setupCanvases() {\n\tconst ctx = canvas.getContext('2d');\n\t// devicePixelRatio alias\n\tconst dpr = window.devicePixelRatio || 1;\n\t// View will be scaled so objects appear sized similarly on all screen sizes.\n\tlet viewScale;\n\t// Dimensions (taking viewScale into account!)\n\tlet width, height;\n\n\tfunction handleResize() {\n\t\tconst w = window.innerWidth;\n\t\tconst h = window.innerHeight;\n\t\tviewScale = h / 1000;\n\t\twidth = w / viewScale;\n\t\theight = h / viewScale;\n\t\tcanvas.width = w * dpr;\n\t\tcanvas.height = h * dpr;\n\t\tcanvas.style.width = w + 'px';\n\t\tcanvas.style.height = h + 'px';\n\t}\n\n\t// Set initial size\n\thandleResize();\n\t// resize fullscreen canvas\n\twindow.addEventListener('resize', handleResize);\n\n\n\t// Run game loop\n\tlet lastTimestamp = 0;\n\tfunction frameHandler(timestamp) {\n\t\tlet frameTime = timestamp - lastTimestamp;\n\t\tlastTimestamp = timestamp;\n\n\t\t// always queue another frame\n\t\traf();\n\n\t\t// If game is paused, we'll still track frameTime (above) but all other\n\t\t// game logic and drawing can be avoided.\n\t\tif (isPaused()) return;\n\n\t\t// make sure negative time isn't reported (first frame can be whacky)\n\t\tif (frameTime < 0) {\n\t\t\tframeTime = 17;\n\t\t}\n\t\t// - cap minimum framerate to 15fps[~68ms] (assuming 60fps[~17ms] as 'normal')\n\t\telse if (frameTime > 68) {\n\t\t\tframeTime = 68;\n\t\t}\n\n\t\tconst halfW = width / 2;\n\t\tconst halfH = height / 2;\n\n\t\t// Convert pointer position from screen to scene coords.\n\t\tpointerScene.x = pointerScreen.x / viewScale - halfW;\n\t\tpointerScene.y = pointerScreen.y / viewScale - halfH;\n\n\t\tconst lag = frameTime / 16.6667;\n\t\tconst simTime = gameSpeed * frameTime;\n\t\tconst simSpeed = gameSpeed * lag;\n\t\ttick(width, height, simTime, simSpeed, lag);\n\n\t\t// Auto clear canvas\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t// Auto scale drawing for high res displays, and incorporate `viewScale`.\n\t\t// Also shift canvas so (0, 0) is the middle of the screen.\n\t\t// This just works with 3D perspective projection.\n\t\tconst drawScale = dpr * viewScale;\n\t\tctx.scale(drawScale, drawScale);\n\t\tctx.translate(halfW, halfH);\n\t\tdraw(ctx, width, height, viewScale);\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t}\n\tconst raf = () => requestAnimationFrame(frameHandler);\n\t// Start loop\n\traf();\n}\n\n\n\n\n\n// interaction.js\n// ============================================================================\n// ============================================================================\n\n// Interaction\n// -----------------------------\n\nfunction handleCanvasPointerDown(x, y) {\n\tif (!pointerIsDown) {\n\t\tpointerIsDown = true;\n\t\tpointerScreen.x = x;\n\t\tpointerScreen.y = y;\n\t\t// On when menus are open, point down/up toggles an interactive mode.\n\t\t// We just need to rerender the menu system for it to respond.\n\t\tif (isMenuVisible()) renderMenus();\n\t}\n}\n\nfunction handleCanvasPointerUp() {\n\tif (pointerIsDown) {\n\t\tpointerIsDown = false;\n\t\ttouchPoints.push({\n\t\t\ttouchBreak: true,\n\t\t\tlife: touchPointLife\n\t\t});\n\t\t// On when menus are open, point down/up toggles an interactive mode.\n\t\t// We just need to rerender the menu system for it to respond.\n\t\tif (isMenuVisible()) renderMenus();\n\t}\n}\n\nfunction handleCanvasPointerMove(x, y) {\n\tif (pointerIsDown) {\n\t\tpointerScreen.x = x;\n\t\tpointerScreen.y = y;\n\t}\n}\n\n\n// Use pointer events if available, otherwise fallback to touch events (for iOS).\nif ('PointerEvent' in window) {\n\tcanvas.addEventListener('pointerdown', event => {\n\t\tevent.isPrimary && handleCanvasPointerDown(event.clientX, event.clientY);\n\t});\n\n\tcanvas.addEventListener('pointerup', event => {\n\t\tevent.isPrimary && handleCanvasPointerUp();\n\t});\n\n\tcanvas.addEventListener('pointermove', event => {\n\t\tevent.isPrimary && handleCanvasPointerMove(event.clientX, event.clientY);\n\t});\n\n\t// We also need to know if the mouse leaves the page. For this game, it's best if that\n\t// cancels a swipe, so essentially acts as a \"mouseup\" event.\n\tdocument.body.addEventListener('mouseleave', handleCanvasPointerUp);\n} else {\n\tlet activeTouchId = null;\n\tcanvas.addEventListener('touchstart', event => {\n\t\tif (!pointerIsDown) {\n\t\t\tconst touch = event.changedTouches[0];\n\t\t\tactiveTouchId = touch.identifier;\n\t\t\thandleCanvasPointerDown(touch.clientX, touch.clientY);\n\t\t}\n\t});\n\tcanvas.addEventListener('touchend', event => {\n\t\tfor (let touch of event.changedTouches) {\n\t\t\tif (touch.identifier === activeTouchId) {\n\t\t\t\thandleCanvasPointerUp();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n\tcanvas.addEventListener('touchmove', event => {\n\t\tfor (let touch of event.changedTouches) {\n\t\t\tif (touch.identifier === activeTouchId) {\n\t\t\t\thandleCanvasPointerMove(touch.clientX, touch.clientY);\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}, { passive: false });\n}\n\n\n\n\n\n// index.js\n// ============================================================================\n// ============================================================================\n\nsetupCanvases();\n\n</script><style>body {\n\tmargin: 0;\n\tbackground-color: #000;\n\tbackground-image: radial-gradient(ellipse at top, #335476 0.0%, #31506e 11.1%, #304b67 22.2%, #2f4760 33.3%, #2d4359 44.4%, #2c3f51 55.6%, #2a3a4a 66.7%, #293643 77.8%, #28323d 88.9%, #262e36 100.0%);\n\theight: 100vh;\n\toverflow: hidden;\n\n\tfont-family: monospace;\n\tfont-weight: bold;\n\tletter-spacing: 0.06em;\n\tcolor: rgba(255, 255, 255, 0.75);\n}\n\n#c {\n\tdisplay: block;\n\ttouch-action: none;\n\ttransform: translateZ(0);\n}\n\n\n/*/////////////////////\n//        HUD        //\n/////////////////////*/\n\n\n.hud__score,\n.pause-btn {\n\tposition: fixed;\n\tfont-size: calc(14px + 2vw + 1vh);\n}\n\n.hud__score {\n\ttop: 0.65em;\n\tleft: 0.65em;\n\tpointer-events: none;\n\tuser-select: none;\n}\n\n.cube-count-lbl {\n\tfont-size: 0.46em;\n}\n\n.pause-btn {\n\tposition: fixed;\n\ttop: 0;\n\tright: 0;\n\tpadding: 0.8em 0.65em;\n}\n\n.pause-btn > div {\n\tposition: relative;\n\twidth: 0.8em;\n\theight: 0.8em;\n\topacity: 0.75;\n}\n\n.pause-btn > div::before,\n.pause-btn > div::after {\n\tcontent: '';\n\tdisplay: block;\n\twidth: 34%;\n\theight: 100%;\n\tposition: absolute;\n\tbackground-color: #fff;\n}\n\n.pause-btn > div::after {\n\tright: 0;\n}\n\n.slowmo {\n\tposition: fixed;\n\tbottom: 0;\n\twidth: 100%;\n\tpointer-events: none;\n\topacity: 0;\n\ttransition: opacity 0.4s;\n\twill-change: opacity;\n}\n\n.slowmo::before {\n\tcontent: 'SLOW-MO';\n\tdisplay: block;\n\tfont-size: calc(8px + 1vw + 0.5vh);\n\tmargin-left: 0.5em;\n\tmargin-bottom: 8px;\n}\n\n.slowmo::after {\n\tcontent: '';\n\tdisplay: block;\n\tposition: fixed;\n\tbottom: 0;\n\twidth: 100%;\n\theight: 1.5vh;\n\tbackground-color: rgba(0, 0, 0, 0.25);\n\tz-index: -1;\n}\n\n.slowmo__bar {\n\theight: 1.5vh;\n\tbackground-color: rgba(255, 255, 255, 0.75);\n\ttransform-origin: 0 0;\n}\n\n\n\n/*/////////////////////\n//       MENUS       //\n/////////////////////*/\n\n.menus::before {\n\tcontent: '';\n\tpointer-events: none;\n\tposition: fixed;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tbackground-color: #000;\n\topacity: 0;\n\ttransition: opacity 0.2s;\n\ttransition-timing-function: ease-in;\n}\n\n.menus.has-active::before {\n\topacity: 0.08;\n\ttransition-duration: 0.4s;\n\ttransition-timing-function: ease-out;\n}\n\n.menus.interactive-mode::before {\n\topacity: 0.02;\n}\n\n\n\n/* Menu containers */\n.menu {\n\tpointer-events: none;\n\tposition: fixed;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tuser-select: none;\n\ttext-align: center;\n\tcolor: rgba(255, 255, 255, 0.9);\n\topacity: 0;\n\tvisibility: hidden;\n\ttransform: translateY(30px);\n\ttransition-property: opacity, visibility, transform;\n\ttransition-duration: 0.2s;\n\ttransition-timing-function: ease-in;\n}\n\n.menu.active {\n\topacity: 1;\n\tvisibility: visible;\n\ttransform: translateY(0);\n\ttransition-duration: 0.4s;\n\ttransition-timing-function: ease-out;\n}\n\n.menus.interactive-mode .menu.active {\n\topacity: 0.6;\n}\n\n.menus:not(.interactive-mode) .menu.active > * {\n\tpointer-events: auto;\n}\n\n\n/* Common menu elements */\n\nh1 {\n\tfont-size: 4rem;\n\tline-height: 0.95;\n\ttext-align: center;\n\tfont-weight: bold;\n\tmargin: 0 0.65em 1em;\n}\n\nh2 {\n\tfont-size: 1.2rem;\n\tline-height: 1;\n\ttext-align: center;\n\tfont-weight: bold;\n\tmargin: -1em 0.65em 1em;\n}\n\n.final-score-lbl {\n\tfont-size: 5rem;\n\tmargin: -0.2em 0 0;\n}\n\n.high-score-lbl {\n\tfont-size: 1.2rem;\n\tmargin: 0 0 2.5em;\n}\n\nbutton {\n\tdisplay: block;\n\tposition: relative;\n\twidth: 200px;\n\tpadding: 12px 20px;\n\tbackground: transparent;\n\tborder: none;\n\toutline: none;\n\tuser-select: none;\n\tfont-family: monospace;\n\tfont-weight: bold;\n\tfont-size: 1.4rem;\n\tcolor: #fff;\n\topacity: 0.75;\n\ttransition: opacity 0.3s;\n}\n\nbutton::before {\n\tcontent: '';\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tbackground-color: rgba(255, 255, 255, 0.15);\n\ttransform: scale(0, 0);\n\topacity: 0;\n\ttransition: opacity 0.3s, transform 0.3s;\n}\n\n/* No `:focus` styles because this is a mouse/touch game! */\nbutton:active {\n\topacity: 1;\n}\n\nbutton:active::before {\n\ttransform: scale(1, 1);\n\topacity: 1;\n}\n\n.credits {\n\tposition: fixed;\n\twidth: 100%;\n\tleft: 0;\n\tbottom: 20px;\n}\n\na {\n\tcolor: white;\n}\n\n/* Only enable hover state on large screens */\n@media (min-width: 1025px) {\n\tbutton:hover {\n\t\topacity: 1;\n\t}\n\n\tbutton:hover::before {\n\t\ttransform: scale(1, 1);\n\t\topacity: 1;\n\t}\n}\n</style>"},{"type":"Game","title":"Snake","desc":"Play Snake on X-Center!","author":"F A R I A T","src":"/assets/media/apps/external/snake.png","id":"SnakeFB4LAZ3YAF","batch":"","content":"<div class=\"container noselect\">\n  <div class=\"wrapper\">\n    <button id=\"replay\">\n      <i class=\"fas fa-play\"></i>\n      RESTART\n    </button>\n    <div id=\"canvas\">\n\n    </div>\n    <div id=\"ui\">\n      <h2>SCORE\n      </h2>\n      <span id=\"score\">00</span>\n    </div>\n  </div>\n  <div id=\"author\">\n    <h1>SNAKE</h1> <span>by Fariat</span>\n  </div>\n</div><script type=\"text/javascript\">\n/** \nThis is a snake game I made with Vanilla Javascript.\nFollow me on twitter @fariatondo\n**/\n\nlet dom_replay = document.querySelector(\"#replay\");\nlet dom_score = document.querySelector(\"#score\");\nlet dom_canvas = document.createElement(\"canvas\");\ndocument.querySelector(\"#canvas\").appendChild(dom_canvas);\nlet CTX = dom_canvas.getContext(\"2d\");\n\nconst W = (dom_canvas.width = 400);\nconst H = (dom_canvas.height = 400);\n\nlet snake,\n  food,\n  currentHue,\n  cells = 20,\n  cellSize,\n  isGameOver = false,\n  tails = [],\n  score = 00,\n  maxScore = window.localStorage.getItem(\"maxScore\") || undefined,\n  particles = [],\n  splashingParticleCount = 20,\n  cellsCount,\n  requestID;\n\nlet helpers = {\n  Vec: class {\n    constructor(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n    add(v) {\n      this.x += v.x;\n      this.y += v.y;\n      return this;\n    }\n    mult(v) {\n      if (v instanceof helpers.Vec) {\n        this.x *= v.x;\n        this.y *= v.y;\n        return this;\n      } else {\n        this.x *= v;\n        this.y *= v;\n        return this;\n      }\n    }\n  },\n  isCollision(v1, v2) {\n    return v1.x == v2.x && v1.y == v2.y;\n  },\n  garbageCollector() {\n    for (let i = 0; i < particles.length; i++) {\n      if (particles[i].size <= 0) {\n        particles.splice(i, 1);\n      }\n    }\n  },\n  drawGrid() {\n    CTX.lineWidth = 1.1;\n    CTX.strokeStyle = \"#232332\";\n    CTX.shadowBlur = 0;\n    for (let i = 1; i < cells; i++) {\n      let f = (W / cells) * i;\n      CTX.beginPath();\n      CTX.moveTo(f, 0);\n      CTX.lineTo(f, H);\n      CTX.stroke();\n      CTX.beginPath();\n      CTX.moveTo(0, f);\n      CTX.lineTo(W, f);\n      CTX.stroke();\n      CTX.closePath();\n    }\n  },\n  randHue() {\n    return ~~(Math.random() * 360);\n  },\n  hsl2rgb(hue, saturation, lightness) {\n    if (hue == undefined) {\n      return [0, 0, 0];\n    }\n    let chroma = (1 - Math.abs(2 * lightness - 1)) * saturation;\n    let huePrime = hue / 60;\n    let secondComponent = chroma * (1 - Math.abs((huePrime % 2) - 1));\n\n    huePrime = ~~huePrime;\n    let red;\n    let green;\n    let blue;\n\n    if (huePrime === 0) {\n      red = chroma;\n      green = secondComponent;\n      blue = 0;\n    } else if (huePrime === 1) {\n      red = secondComponent;\n      green = chroma;\n      blue = 0;\n    } else if (huePrime === 2) {\n      red = 0;\n      green = chroma;\n      blue = secondComponent;\n    } else if (huePrime === 3) {\n      red = 0;\n      green = secondComponent;\n      blue = chroma;\n    } else if (huePrime === 4) {\n      red = secondComponent;\n      green = 0;\n      blue = chroma;\n    } else if (huePrime === 5) {\n      red = chroma;\n      green = 0;\n      blue = secondComponent;\n    }\n\n    let lightnessAdjustment = lightness - chroma / 2;\n    red += lightnessAdjustment;\n    green += lightnessAdjustment;\n    blue += lightnessAdjustment;\n\n    return [\n      Math.round(red * 255),\n      Math.round(green * 255),\n      Math.round(blue * 255)\n    ];\n  },\n  lerp(start, end, t) {\n    return start * (1 - t) + end * t;\n  }\n};\n\nlet KEY = {\n  ArrowUp: false,\n  ArrowRight: false,\n  ArrowDown: false,\n  ArrowLeft: false,\n  resetState() {\n    this.ArrowUp = false;\n    this.ArrowRight = false;\n    this.ArrowDown = false;\n    this.ArrowLeft = false;\n  },\n  listen() {\n    addEventListener(\n      \"keydown\",\n      (e) => {\n        if (e.key === \"ArrowUp\" && this.ArrowDown) return;\n        if (e.key === \"ArrowDown\" && this.ArrowUp) return;\n        if (e.key === \"ArrowLeft\" && this.ArrowRight) return;\n        if (e.key === \"ArrowRight\" && this.ArrowLeft) return;\n        this[e.key] = true;\n        Object.keys(this)\n          .filter((f) => f !== e.key && f !== \"listen\" && f !== \"resetState\")\n          .forEach((k) => {\n            this[k] = false;\n          });\n      },\n      false\n    );\n  }\n};\n\nclass Snake {\n  constructor(i, type) {\n    this.pos = new helpers.Vec(W / 2, H / 2);\n    this.dir = new helpers.Vec(0, 0);\n    this.type = type;\n    this.index = i;\n    this.delay = 5;\n    this.size = W / cells;\n    this.color = \"white\";\n    this.history = [];\n    this.total = 1;\n  }\n  draw() {\n    let { x, y } = this.pos;\n    CTX.fillStyle = this.color;\n    CTX.shadowBlur = 20;\n    CTX.shadowColor = \"rgba(255,255,255,.3 )\";\n    CTX.fillRect(x, y, this.size, this.size);\n    CTX.shadowBlur = 0;\n    if (this.total >= 2) {\n      for (let i = 0; i < this.history.length - 1; i++) {\n        let { x, y } = this.history[i];\n        CTX.lineWidth = 1;\n        CTX.fillStyle = \"rgba(225,225,225,1)\";\n        CTX.fillRect(x, y, this.size, this.size);\n      }\n    }\n  }\n  walls() {\n    let { x, y } = this.pos;\n    if (x + cellSize > W) {\n      this.pos.x = 0;\n    }\n    if (y + cellSize > W) {\n      this.pos.y = 0;\n    }\n    if (y < 0) {\n      this.pos.y = H - cellSize;\n    }\n    if (x < 0) {\n      this.pos.x = W - cellSize;\n    }\n  }\n  controlls() {\n    let dir = this.size;\n    if (KEY.ArrowUp) {\n      this.dir = new helpers.Vec(0, -dir);\n    }\n    if (KEY.ArrowDown) {\n      this.dir = new helpers.Vec(0, dir);\n    }\n    if (KEY.ArrowLeft) {\n      this.dir = new helpers.Vec(-dir, 0);\n    }\n    if (KEY.ArrowRight) {\n      this.dir = new helpers.Vec(dir, 0);\n    }\n  }\n  selfCollision() {\n    for (let i = 0; i < this.history.length; i++) {\n      let p = this.history[i];\n      if (helpers.isCollision(this.pos, p)) {\n        isGameOver = true;\n      }\n    }\n  }\n  update() {\n    this.walls();\n    this.draw();\n    this.controlls();\n    if (!this.delay--) {\n      if (helpers.isCollision(this.pos, food.pos)) {\n        incrementScore();\n        particleSplash();\n        food.spawn();\n        this.total++;\n      }\n      this.history[this.total - 1] = new helpers.Vec(this.pos.x, this.pos.y);\n      for (let i = 0; i < this.total - 1; i++) {\n        this.history[i] = this.history[i + 1];\n      }\n      this.pos.add(this.dir);\n      this.delay = 5;\n      this.total > 3 ? this.selfCollision() : null;\n    }\n  }\n}\n\nclass Food {\n  constructor() {\n    this.pos = new helpers.Vec(\n      ~~(Math.random() * cells) * cellSize,\n      ~~(Math.random() * cells) * cellSize\n    );\n    this.color = currentHue = `hsl(${~~(Math.random() * 360)},100%,50%)`;\n    this.size = cellSize;\n  }\n  draw() {\n    let { x, y } = this.pos;\n    CTX.globalCompositeOperation = \"lighter\";\n    CTX.shadowBlur = 20;\n    CTX.shadowColor = this.color;\n    CTX.fillStyle = this.color;\n    CTX.fillRect(x, y, this.size, this.size);\n    CTX.globalCompositeOperation = \"source-over\";\n    CTX.shadowBlur = 0;\n  }\n  spawn() {\n    let randX = ~~(Math.random() * cells) * this.size;\n    let randY = ~~(Math.random() * cells) * this.size;\n    for (let path of snake.history) {\n      if (helpers.isCollision(new helpers.Vec(randX, randY), path)) {\n        return this.spawn();\n      }\n    }\n    this.color = currentHue = `hsl(${helpers.randHue()}, 100%, 50%)`;\n    this.pos = new helpers.Vec(randX, randY);\n  }\n}\n\nclass Particle {\n  constructor(pos, color, size, vel) {\n    this.pos = pos;\n    this.color = color;\n    this.size = Math.abs(size / 2);\n    this.ttl = 0;\n    this.gravity = -0.2;\n    this.vel = vel;\n  }\n  draw() {\n    let { x, y } = this.pos;\n    let hsl = this.color\n      .split(\"\")\n      .filter((l) => l.match(/[^hsl()$% ]/g))\n      .join(\"\")\n      .split(\",\")\n      .map((n) => +n);\n    let [r, g, b] = helpers.hsl2rgb(hsl[0], hsl[1] / 100, hsl[2] / 100);\n    CTX.shadowColor = `rgb(${r},${g},${b},${1})`;\n    CTX.shadowBlur = 0;\n    CTX.globalCompositeOperation = \"lighter\";\n    CTX.fillStyle = `rgb(${r},${g},${b},${1})`;\n    CTX.fillRect(x, y, this.size, this.size);\n    CTX.globalCompositeOperation = \"source-over\";\n  }\n  update() {\n    this.draw();\n    this.size -= 0.3;\n    this.ttl += 1;\n    this.pos.add(this.vel);\n    this.vel.y -= this.gravity;\n  }\n}\n\nfunction incrementScore() {\n  score++;\n  dom_score.innerText = score.toString().padStart(2, \"0\");\n}\n\nfunction particleSplash() {\n  for (let i = 0; i < splashingParticleCount; i++) {\n    let vel = new helpers.Vec(Math.random() * 6 - 3, Math.random() * 6 - 3);\n    let position = new helpers.Vec(food.pos.x, food.pos.y);\n    particles.push(new Particle(position, currentHue, food.size, vel));\n  }\n}\n\nfunction clear() {\n  CTX.clearRect(0, 0, W, H);\n}\n\nfunction initialize() {\n  CTX.imageSmoothingEnabled = false;\n  KEY.listen();\n  cellsCount = cells * cells;\n  cellSize = W / cells;\n  snake = new Snake();\n  food = new Food();\n  dom_replay.addEventListener(\"click\", reset, false);\n  loop();\n}\n\nfunction loop() {\n  clear();\n  if (!isGameOver) {\n    requestID = setTimeout(loop, 1000 / 60);\n    helpers.drawGrid();\n    snake.update();\n    food.draw();\n    for (let p of particles) {\n      p.update();\n    }\n    helpers.garbageCollector();\n  } else {\n    clear();\n    gameOver();\n  }\n}\n\nfunction gameOver() {\n  maxScore ? null : (maxScore = score);\n  score > maxScore ? (maxScore = score) : null;\n  window.localStorage.setItem(\"maxScore\", maxScore);\n  CTX.fillStyle = \"#4cffd7\";\n  CTX.textAlign = \"center\";\n  CTX.font = \"bold 30px Poppins, sans-serif\";\n  CTX.fillText(\"GAME OVER\", W / 2, H / 2);\n  CTX.font = \"15px Poppins, sans-serif\";\n  CTX.fillText(`SCORE   ${score}`, W / 2, H / 2 + 60);\n  CTX.fillText(`MAXSCORE   ${maxScore}`, W / 2, H / 2 + 80);\n}\n\nfunction reset() {\n  dom_score.innerText = \"00\";\n  score = \"00\";\n  snake = new Snake();\n  food.spawn();\n  KEY.resetState();\n  isGameOver = false;\n  clearTimeout(requestID);\n  loop();\n}\n\ninitialize();\n\n</script><style>@font-face {\n  font-family: \"game\";\n  src: url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@500;800&display=swap\");\n}\n* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\nbutton:focus {\n  outline: 0;\n}\n\nhtml,\nbody {\n  height: 100%;\n  font-family: \"Poppins\", sans-serif;\n  color: #6e7888;\n}\nbody {\n  background-color: #222738;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #6e7888;\n}\ncanvas {\n  background-color: #181825;\n}\n.container {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-flow: column wrap;\n  justify-content: center;\n  align-items: center;\n}\n#ui {\n  display: flex;\n  align-items: center;\n  font-size: 10px;\n  flex-flow: column;\n  margin-left: 10px;\n}\nh2 {\n  font-weight: 200;\n  transform: rotate(270deg);\n}\n#score {\n  margin-top: 20px;\n  font-size: 30px;\n  font-weight: 800;\n}\n.noselect {\n  user-select: none;\n}\n#replay {\n  font-size: 10px;\n  padding: 10px 20px;\n  background: #6e7888;\n  border: none;\n  color: #222738;\n  border-radius: 20px;\n  font-weight: 800;\n  transform: rotate(270deg);\n  cursor: pointer;\n  transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n#replay:hover {\n  background: #a6aab5;\n  background: #4cffd7;\n  transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n#replay svg {\n  margin-right: 8px;\n}\n@media (max-width: 600px) {\n  #replay {\n    margin-bottom: 20px;\n  }\n  #replay,\n  h2 {\n    transform: rotate(0deg);\n  }\n  #ui {\n    flex-flow: row wrap;\n    margin-bottom: 20px;\n  }\n  #score {\n    margin-top: 0;\n    margin-left: 20px;\n  }\n  .container {\n    flex-flow: column wrap;\n  }\n}\n#author {\n  width: 100%;\n  bottom: 40px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  color: inherit;\n  text-transform: uppercase;\n  padding-left: 35px;\n}\n#author span {\n  font-size: 10px;\n  margin-left: 20px;\n  color: inherit;\n  letter-spacing: 4px;\n}\n#author h1 {\n  font-size: 25px;\n}\n.wrapper {\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n}\n</style>"},{"type":"Game","title":"Tower Blocks","desc":"How high will your tower be?","author":"Steve Gardner","src":"/assets/media/apps/external/towerblocks.png","id":"Tower BlocksYZ31V43W2D","batch":"","content":"<meta name=\"viewport\" content=\"width=device-width,user-scalable=no\">\n\n<div id=\"container\">\n\t<div id=\"game\"></div>\n\t<div id=\"score\">0</div>\n\t<div id=\"instructions\">Click (or press the spacebar) to place the block</div>\n\t<div class=\"game-over\">\n\t\t<h2>Game Over</h2>\n\t\t<p>You did great, you're the best.</p>\n\t\t<p>Click or spacebar to start again</p>\n\t</div>\n\t<div class=\"game-ready\">\n\t\t<div id=\"start-button\">Start</div>\n\t\t<div></div>\n\t</div>\n</div>\n<script type=\"text/javascript\">\nconsole.clear();\n\ninterface BlockReturn\n{\n\tplaced?:any;\n\tchopped?:any;\n\tplane: 'x' | 'y' | 'z';\n\tdirection: number;\n\tbonus?: boolean;\n}\n\nclass Stage\n{\n\tprivate container: any;\n\tprivate camera: any;\n\tprivate scene: any;\n\tprivate renderer: any;\n\tprivate light: any;\n\tprivate softLight: any;\n\tprivate group: any;\n\t\n\tconstructor()\n\t{\n\t\t// container\n\t\t\n\t\tthis.container = document.getElementById('game');\n\t\t\n\t\t// renderer\n\t\t\n\t\tthis.renderer = new THREE.WebGLRenderer({\n\t\t\tantialias: true,\n\t\t\talpha: false\n\t\t});\n\t\t\n\t\tthis.renderer.setSize(window.innerWidth, window.innerHeight);\n\t\tthis.renderer.setClearColor('#D0CBC7', 1);\n\t\tthis.container.appendChild( this.renderer.domElement );\n\t\t\n\t\t// scene\n\n\t\tthis.scene = new THREE.Scene();\n\n\t\t// camera\n\n\t\tlet aspect = window.innerWidth / window.innerHeight;\n\t\tlet d = 20;\n\t\tthis.camera = new THREE.OrthographicCamera( - d * aspect, d * aspect, d, - d, -100, 1000);\n\t\tthis.camera.position.x = 2;\n\t\tthis.camera.position.y = 2; \n\t\tthis.camera.position.z = 2; \n\t\tthis.camera.lookAt(new THREE.Vector3(0, 0, 0));\n\t\t\n\t\t//light\n\n\t\tthis.light = new THREE.DirectionalLight(0xffffff, 0.5);\n\t\tthis.light.position.set(0, 499, 0);\n\t\tthis.scene.add(this.light);\n\n\t\tthis.softLight = new THREE.AmbientLight( 0xffffff, 0.4 );\n\t\tthis.scene.add(this.softLight)\n\t\t\n\t\twindow.addEventListener('resize', () => this.onResize());\n\t\tthis.onResize();\n\t}\n\t\n\tsetCamera(y:number, speed:number = 0.3)\n\t{\n\t\tTweenLite.to(this.camera.position, speed, {y: y + 4, ease: Power1.easeInOut});\n\t\tTweenLite.to(this.camera.lookAt, speed, {y: y, ease: Power1.easeInOut});\n\t}\n\t\n\tonResize()\n\t{\n\t\tlet viewSize = 30;\n\t\tthis.renderer.setSize(window.innerWidth, window.innerHeight);\n\t\tthis.camera.left = window.innerWidth / - viewSize;\n\t\tthis.camera.right = window.innerWidth / viewSize;\n\t\tthis.camera.top = window.innerHeight / viewSize;\n\t\tthis.camera.bottom = window.innerHeight / - viewSize;\n\t\tthis.camera.updateProjectionMatrix();\n\t}\n\t\n\trender = function()\n\t{\n\t\tthis.renderer.render(this.scene, this.camera);\n\t}\n\n\tadd = function(elem)\n\t{\n\t\tthis.scene.add(elem);\n\t}\n\n\tremove = function(elem)\n\t{\n\t\tthis.scene.remove(elem);\n\t}\n}\n\nclass Block\n{\n\tconst STATES = {ACTIVE: 'active', STOPPED: 'stopped', MISSED: 'missed'};\n\tconst MOVE_AMOUNT = 12;\n\n\tdimension = { width: 0, height: 0, depth: 0}\n\tposition = {x: 0, y: 0, z: 0};\n\t\n\tmesh:any;\n\tstate:string;\n\tindex:number;\n\tspeed:number;\n\tdirection:number;\n\tcolorOffset:number;\n\tcolor:number;\n\tmaterial:any;\n\n\tworkingPlane:string;\n\tworkingDimension:string;\n\n\ttargetBlock:Block;\n\t\n\tconstructor(block:Block)\n\t{\n\t\t// set size and position\n\t\t\n\t\tthis.targetBlock = block;\n\t\t\n\t\tthis.index = (this.targetBlock ? this.targetBlock.index : 0) + 1;\n\t\tthis.workingPlane = this.index % 2 ? 'x' : 'z';\n\t\tthis.workingDimension = this.index % 2 ? 'width' : 'depth';\n\t\t\n\t\t// set the dimensions from the target block, or defaults.\n\t\t\n\t\tthis.dimension.width = this.targetBlock ? this.targetBlock.dimension.width : 10;\n\t\tthis.dimension.height = this.targetBlock ? this.targetBlock.dimension.height : 2;\n\t\tthis.dimension.depth = this.targetBlock ? this.targetBlock.dimension.depth : 10;\n\t\t\n\t\tthis.position.x = this.targetBlock ? this.targetBlock.position.x : 0;\n\t\tthis.position.y = this.dimension.height * this.index;\n\t\tthis.position.z = this.targetBlock ? this.targetBlock.position.z : 0;\n\t\t\n\t\tthis.colorOffset = this.targetBlock ? this.targetBlock.colorOffset : Math.round(Math.random() * 100);\n\t\t\n\t\t// set color\n\t\tif(!this.targetBlock) \n\t\t{\n\t\t\tthis.color = 0x333344;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet offset = this.index + this.colorOffset;\n\t\t\tvar r = Math.sin(0.3 * offset) * 55 + 200;\n\t\t\tvar g = Math.sin(0.3 * offset + 2) * 55 + 200;\n\t\t\tvar b = Math.sin(0.3 * offset + 4) * 55 + 200;\n\t\t\tthis.color = new THREE.Color( r / 255, g / 255, b / 255 );\n\t\t}\n\t\t\n\t\t// state\n\t\t\n\t\tthis.state = this.index > 1 ? this.STATES.ACTIVE : this.STATES.STOPPED;\n\t\t\n\t\t// set direction\n\t\t\n\t\tthis.speed = -0.1 - (this.index * 0.005);\n\t\tif(this.speed < -4) this.speed = -4;\n\t\tthis.direction = this.speed;\n\t\t\n\t\t// create block\n\t\t\n\t\tlet geometry = new THREE.BoxGeometry( this.dimension.width, this.dimension.height, this.dimension.depth);\n\t\tgeometry.applyMatrix( new THREE.Matrix4().makeTranslation(this.dimension.width/2, this.dimension.height/2, this.dimension.depth/2) );\n\t\tthis.material = new THREE.MeshToonMaterial( {color: this.color, shading: THREE.FlatShading} );\n\t\tthis.mesh = new THREE.Mesh( geometry, this.material );\n\t\tthis.mesh.position.set(this.position.x, this.position.y + (this.state == this.STATES.ACTIVE ? 0 : 0), this.position.z);\n\t\t\n\t\tif(this.state == this.STATES.ACTIVE) \n\t\t{\n\t\t\tthis.position[this.workingPlane] = Math.random() > 0.5 ? -this.MOVE_AMOUNT : this.MOVE_AMOUNT;\n\t\t}\n\t} \n\n\treverseDirection()\n\t{\n\t\tthis.direction = this.direction > 0 ? this.speed : Math.abs(this.speed); \t\n\t}\n\n\tplace():BlockReturn\n\t{\n\t\tthis.state = this.STATES.STOPPED;\n\t\t\n\t\tlet overlap = this.targetBlock.dimension[this.workingDimension] - Math.abs(this.position[this.workingPlane] - this.targetBlock.position[this.workingPlane]);\n\t\t\n\t\tlet blocksToReturn:BlockReturn = {\n\t\t\tplane: this.workingPlane,\n\t\t\tdirection: this.direction\n\t\t};\n\t\t\n\t\tif(this.dimension[this.workingDimension] - overlap < 0.3)\n\t\t{\n\t\t\toverlap = this.dimension[this.workingDimension];\n\t\t\tblocksToReturn.bonus = true;\n\t\t\tthis.position.x = this.targetBlock.position.x;\n\t\t\tthis.position.z = this.targetBlock.position.z;\n\t\t\tthis.dimension.width = this.targetBlock.dimension.width;\n\t\t\tthis.dimension.depth = this.targetBlock.dimension.depth;\n\t\t}\n\t\t\n\t\tif(overlap > 0)\n\t\t{\n\t\t\tlet choppedDimensions = { width: this.dimension.width, height: this.dimension.height, depth: this.dimension.depth };\n\t\t\tchoppedDimensions[this.workingDimension] -= overlap;\n\t\t\tthis.dimension[this.workingDimension] = overlap;\n\t\t\t\t\t\n\t\t\tlet placedGeometry = new THREE.BoxGeometry( this.dimension.width, this.dimension.height, this.dimension.depth);\n\t\t\tplacedGeometry.applyMatrix( new THREE.Matrix4().makeTranslation(this.dimension.width/2, this.dimension.height/2, this.dimension.depth/2) );\n\t\t\tlet placedMesh = new THREE.Mesh( placedGeometry, this.material );\n\t\t\t\n\t\t\tlet choppedGeometry = new THREE.BoxGeometry( choppedDimensions.width, choppedDimensions.height, choppedDimensions.depth);\n\t\t\tchoppedGeometry.applyMatrix( new THREE.Matrix4().makeTranslation(choppedDimensions.width/2, choppedDimensions.height/2, choppedDimensions.depth/2) );\n\t\t\tlet choppedMesh = new THREE.Mesh( choppedGeometry, this.material );\n\t\t\t\n\t\t\tlet choppedPosition = {\n\t\t\t\tx: this.position.x,\n\t\t\t\ty: this.position.y,\n\t\t\t\tz: this.position.z\n\t\t\t}\n\t\t\t\n\t\t\tif(this.position[this.workingPlane] < this.targetBlock.position[this.workingPlane])\n\t\t\t{\n\t\t\t\tthis.position[this.workingPlane] = this.targetBlock.position[this.workingPlane]\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tchoppedPosition[this.workingPlane] += overlap;\n\t\t\t}\n\t\t\t\n\t\t\tplacedMesh.position.set(this.position.x, this.position.y, this.position.z);\n\t\t\tchoppedMesh.position.set(choppedPosition.x, choppedPosition.y, choppedPosition.z);\n\t\t\t\n\t\t\tblocksToReturn.placed = placedMesh;\n\t\t\tif(!blocksToReturn.bonus) blocksToReturn.chopped = choppedMesh;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.state = this.STATES.MISSED;\n\t\t}\n\t\t\n\t\tthis.dimension[this.workingDimension] = overlap;\n\n\t\treturn blocksToReturn;\n\t}\n\t\n\ttick()\n\t{\n\t\tif(this.state == this.STATES.ACTIVE)\n\t\t{\n\t\t\tlet value = this.position[this.workingPlane];\n\t\t\tif(value > this.MOVE_AMOUNT || value < -this.MOVE_AMOUNT) this.reverseDirection();\n\t\t\tthis.position[this.workingPlane] += this.direction;\t\n\t\t\tthis.mesh.position[this.workingPlane] = this.position[this.workingPlane];\t\n\t\t}\n\t}\n}\n\nclass Game\n{\n\tconst STATES = {\n\t\t'LOADING': 'loading',\n\t\t'PLAYING': 'playing',\n\t\t'READY': 'ready',\n\t\t'ENDED': 'ended',\n\t\t'RESETTING': 'resetting'\n\t}\n\tblocks:Block[] = [];\n\tstate:string = this.STATES.LOADING;\n\t\n\t// groups\n\n\tnewBlocks:any;\n\tplacedBlocks:any;\n\tchoppedBlocks:any;\n\n\t// UI elements\n\n\tscoreContainer:any;\n\tmainContainer:any;\n\tstartButton:any;\n\tinstructions:any;\n\t\n\tconstructor()\n\t{\n\t\tthis.stage = new Stage();\n\t\t\n\t\tthis.mainContainer = document.getElementById('container');\n\t\tthis.scoreContainer = document.getElementById('score');\n\t\tthis.startButton = document.getElementById('start-button');\n\t\tthis.instructions = document.getElementById('instructions');\n\t\tthis.scoreContainer.innerHTML = '0';\n\t\t\n\t\tthis.newBlocks = new THREE.Group();\n\t\tthis.placedBlocks = new THREE.Group();\n\t\tthis.choppedBlocks = new THREE.Group();\n\t\t\n\t\tthis.stage.add(this.newBlocks);\n\t\tthis.stage.add(this.placedBlocks);\n\t\tthis.stage.add(this.choppedBlocks);\n\t\t\n\t\tthis.addBlock();\n\t\tthis.tick();\n\t\t\n\t\tthis.updateState(this.STATES.READY);\n\t\t\n\t\tdocument.addEventListener('keydown', e =>\n\t\t{\n\t\t\tif(e.keyCode == 32) this.onAction()\n\t\t});\n\t\t\n\t\tdocument.addEventListener('click', e =>\n\t\t{\n\t\t\tthis.onAction();\n\t\t});\t\t\n\t\t\n\t\tdocument.addEventListener('touchstart', e =>\n\t\t{\n\t\t\te.preventDefault();\n\t\t\t// this.onAction();\n\t\t\t\n\t\t\t// ☝️ this triggers after click on android so you\n\t\t\t// insta-lose, will figure it out later.\n\t\t});\n\t}\n\n\tupdateState(newState)\n\t{\n\t\tfor(let key in this.STATES) this.mainContainer.classList.remove(this.STATES[key]);\n\t\tthis.mainContainer.classList.add(newState);\n\t\tthis.state = newState;\n\t}\n\n\tonAction()\n\t{\n\t\tswitch(this.state)\n\t\t{\n\t\t\tcase this.STATES.READY:\n\t\t\t\tthis.startGame();\n\t\t\t\tbreak;\n\t\t\tcase this.STATES.PLAYING:\n\t\t\t\tthis.placeBlock();\n\t\t\t\tbreak;\n\t\t\tcase this.STATES.ENDED:\n\t\t\t\tthis.restartGame();\n\t\t\t\tbreak;\t\n\t\t}\n\t}\n\t\n\tstartGame()\n\t{\n\t\tif(this.state != this.STATES.PLAYING)\n\t\t{\n\t\t\tthis.scoreContainer.innerHTML = '0';\n\t\t\tthis.updateState(this.STATES.PLAYING);\n\t\t\tthis.addBlock();\n\t\t}\n\t}\n\n\trestartGame()\n\t{\n\t\tthis.updateState(this.STATES.RESETTING);\n\t\t\n\t\tlet oldBlocks = this.placedBlocks.children;\n\t\tlet removeSpeed = 0.2;\n\t\tlet delayAmount = 0.02;\n\t\tfor(let i = 0; i < oldBlocks.length; i++)\n\t\t{\n\t\t\tTweenLite.to(oldBlocks[i].scale, removeSpeed, {x: 0, y: 0, z: 0, delay: (oldBlocks.length - i) * delayAmount, ease: Power1.easeIn, onComplete: () => this.placedBlocks.remove(oldBlocks[i])})\n\t\t\tTweenLite.to(oldBlocks[i].rotation, removeSpeed, {y: 0.5, delay: (oldBlocks.length - i) * delayAmount, ease: Power1.easeIn})\n\t\t}\n\t\tlet cameraMoveSpeed = removeSpeed * 2 + (oldBlocks.length * delayAmount);\n\t\tthis.stage.setCamera(2, cameraMoveSpeed);\n\t\t\n\t\tlet countdown = {value: this.blocks.length - 1};\n\t\tTweenLite.to(countdown, cameraMoveSpeed, {value: 0, onUpdate: () => {this.scoreContainer.innerHTML = String(Math.round(countdown.value))}})\n\t\t\n\t\tthis.blocks = this.blocks.slice(0, 1);\n\t\t\n\t\tsetTimeout(() => {\n\t\t\tthis.startGame();\n\t\t}, cameraMoveSpeed * 1000)\n\t\t\n\t}\n\t\n\tplaceBlock()\n\t{\n\t\tlet currentBlock = this.blocks[this.blocks.length - 1];\n\t\tlet newBlocks:BlockReturn = currentBlock.place();\n\t\tthis.newBlocks.remove(currentBlock.mesh);\n\t\tif(newBlocks.placed) this.placedBlocks.add(newBlocks.placed);\n\t\tif(newBlocks.chopped)\n\t\t{\n\t\t\tthis.choppedBlocks.add(newBlocks.chopped);\n\t\t\tlet positionParams = {y: '-=30', ease: Power1.easeIn, onComplete: () => this.choppedBlocks.remove(newBlocks.chopped)}\n\t\t\tlet rotateRandomness = 10;\n\t\t\tlet rotationParams = {\n\t\t\t\tdelay: 0.05,\n\t\t\t\tx: newBlocks.plane == 'z' ? ((Math.random() * rotateRandomness) - (rotateRandomness/2)) : 0.1,\n\t\t\t\tz: newBlocks.plane == 'x' ? ((Math.random() * rotateRandomness) - (rotateRandomness/2)) : 0.1,\n\t\t\t\ty: Math.random() * 0.1,\n\t\t\t};\n\t\t\tif(newBlocks.chopped.position[newBlocks.plane] > newBlocks.placed.position[newBlocks.plane])\n\t\t\t{\n\t\t\t\tpositionParams[newBlocks.plane] = '+=' + (40 * Math.abs(newBlocks.direction));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpositionParams[newBlocks.plane] = '-=' + (40 * Math.abs(newBlocks.direction));\n\t\t\t}\n\t\t\tTweenLite.to(newBlocks.chopped.position, 1, positionParams);\n\t\t\tTweenLite.to(newBlocks.chopped.rotation, 1, rotationParams);\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.addBlock();\n\t}\n\t\n\taddBlock()\n\t{\n\t\tlet lastBlock = this.blocks[this.blocks.length - 1];\n\t\t\n\t\tif(lastBlock && lastBlock.state == lastBlock.STATES.MISSED)\n\t\t{\n\t\t\treturn this.endGame();\n\t\t}\n\t\t\n\t\tthis.scoreContainer.innerHTML = String(this.blocks.length - 1);\n\t\t\n\t\tlet newKidOnTheBlock = new Block(lastBlock);\n\t\tthis.newBlocks.add(newKidOnTheBlock.mesh);\n\t\tthis.blocks.push(newKidOnTheBlock);\n\n\t\tthis.stage.setCamera(this.blocks.length * 2);\n\t\t\n\t\tif(this.blocks.length >= 5) this.instructions.classList.add('hide');\n\t}\n\t\n\tendGame()\n\t{\n\t\tthis.updateState(this.STATES.ENDED);\n\t}\n\n\ttick()\n\t{\n\t\tthis.blocks[this.blocks.length - 1].tick();\n\t\tthis.stage.render();\n\t\trequestAnimationFrame(() => {this.tick()});\n\t}\n}\n\nlet game = new Game();\n</script><style>@import url('https://fonts.googleapis.com/css?family=Comfortaa');\n\n$color-dark: #333344;\n\nhtml, body\n{\n\tmargin: 0;\n\toverflow: hidden;\n\theight: 100%;\n\twidth: 100%;\n\tposition: relative;\n\tfont-family: 'Comfortaa', cursive;\n}\n\n#container\n{\n\twidth: 100%;\n\theight: 100%;\n\t\n\t#score\n\t{\n\t\tposition: absolute;\n\t\ttop: 20px;\n\t\twidth: 100%;\n\t\ttext-align: center;\n\t\tfont-size: 10vh;\n\t\ttransition: transform 0.5s ease;\n\t\tcolor: $color-dark;\n\t\ttransform: translatey(-200px) scale(1);\n\t}\n\n\t#game\n\t{\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t}\n\t\n\t.game-over\n\t{\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 85%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\t\n\t\t*\n\t\t{\n\t\t\ttransition: opacity 0.5s ease, transform 0.5s ease;\n\t\t\topacity: 0;\n\t\t\ttransform: translatey(-50px);\n\t\t\tcolor: $color-dark;\n\t\t}\n\t\t\n\t\th2\n\t\t{\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\t\t\tfont-size: 40px;\n\t\t}\n\t}\n\t\n\t.game-ready\n\t{\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: space-around;\n\t\t\n\t\t#start-button\n\t\t{\n\t\t\ttransition: opacity 0.5s ease, transform 0.5s ease;\n\t\t\topacity: 0;\n\t\t\ttransform: translatey(-50px);\n\t\t\t\n\t\t\tborder: 3px solid $color-dark;\n\t\t\tpadding: 10px 20px;\n\t\t\tbackground-color: transparent;\n\t\t\tcolor: $color-dark;\n\t\t\tfont-size: 30px;\n\t\t}\n\t}\n\t\n\t#instructions\n\t{\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\ttop: 16vh;\n\t\tleft: 0;\n\t\ttext-align: center;\n\t\ttransition: opacity 0.5s ease, transform 0.5s ease;\n\t\t\n\t\topacity: 0;\n\t\t\n\t\t&.hide\n\t\t{\n\t\t\topacity: 0 !important;\n\t\t}\n\t}\n\t\n\t&.playing, &.resetting\n\t{\n\t\t#score\n\t\t{\n\t\t\ttransform: translatey(0px) scale(1);\n\t\t}\n\t}\n\t\n\t&.playing\n\t{\n\t\t#instructions\n\t\t{\n\t\t\topacity: 1;\n\t\t}\n\t}\n\t\n\t&.ready\n\t{\n\t\t\n\t\t\n\t\t.game-ready\n\t\t{\n\t\t\t#start-button\n\t\t\t{\n\t\t\t\topacity: 1;\n\t\t\t\ttransform: translatey(0);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t&.ended\n\t{\n\t\t#score\n\t\t{\n\t\t\ttransform: translatey(6vh) scale(1.5);\n\t\t}\n\t\t\n\t\t.game-over\n\t\t{\n\t\t\t*\n\t\t\t{\n\t\t\t\topacity: 1;\n\t\t\t\ttransform: translatey(0);\n\t\t\t}\n\t\t\t\n\t\t\tp\n\t\t\t{\n\t\t\t\ttransition-delay: 0.3s;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n\n\n</style>"}]}